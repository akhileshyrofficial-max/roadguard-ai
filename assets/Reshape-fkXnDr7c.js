import{x as st,ey as z,aN as ot,e as D,i as J,cS as A,dw as L,aw as rt,l as M,c,m as l,d as P,bC as nt,U as K,a0 as I,bJ as at,V as R,ez as pt,g as ht,f as ct,u as T,eA as lt,a1 as dt,aY as N,z as j,eB as mt,cN as V,s as vt}from"./Identifiable-_3rFZ1o6.js";import $ from"./Graphic-q_7OAYHf.js";import{d as Q}from"./asyncUtils-CmphLL3n.js";import H from"./GraphicsLayer-BOJ0yOnh.js";import{u as S}from"./SimpleMarkerSymbol-Drowg4jp.js";import{l as ut}from"./ViewingMode-Chk7YAAL.js";import{d as yt}from"./SnappingVisualizer2D-DmUNWn2H.js";import{h as gt}from"./UpdatingHandles-BZb3Zh99.js";import{g as _t,l as ft}from"./layerUtils-CFmFO8Du.js";import{x as xt}from"./symbolUtils-DHWvduwZ.js";import{e as W,p as Gt,i as Mt}from"./SelectedVertexTooltipInfo-DBypEfVG.js";import{i as wt}from"./drawUtils-JfdAgxrB.js";import{l as bt,j as Vt}from"./GraphicMover-cCP6D2At.js";import{t as St,e as It}from"./RouteLayerInteraction-DrsWX9Wp.js";import{h as F}from"./quantityUtils-CfVXs5z9.js";import{c as Et}from"./screenUtils-aQeO9QTD.js";import{r as Tt,C as Ot,F as kt,R as Rt,H as Ct}from"./SketchTooltipInfo-Cg_1LXm6.js";import{i as Lt}from"./TranslateTooltipInfo-B_3flq3Z.js";import{R as $t,l as tt}from"./hitTestSelectUtils-DuQI-drP.js";import{h as Ht}from"./settings-BcHPOOG7.js";import{_ as Ft,a as At}from"./MapView-DvC1rydD.js";import{P as Pt,E as Ut,e as zt}from"./SnappingContext-jJXq_HpI.js";import"./index-BEHHhRxI.js";import"./PopupTemplate-B09IYibB.js";import"./fieldUtils-z3GG2R-H.js";import"./jsonUtils-Cc67rW5Z.js";import"./typeUtils-mxDsOnhk.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Buir9u-w.js";import"./aaBoundingBox-DNlIzH5i.js";import"./TextSymbol-keZwKiPd.js";import"./PictureMarkerSymbol-DlgeV3xL.js";import"./GraphicsCollection-csXasQht.js";import"./Layer--GugXUPW.js";import"./BlendLayer-DNv82dbV.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-CO8m00ps.js";import"./parser-BgHAYnRY.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CEszlm-2.js";import"./common-DQOJ18NT.js";import"./ScaleRangeLayer-5c4AXGq9.js";import"./ElevationInfo-7Ug8ElGs.js";import"./lengthUtils-CrwfL9_h.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./enums-BPiq_WIC.js";import"./utils-BeNGKuUJ.js";import"./cimSymbolUtils-B2Z2xZbf.js";import"./utils-DrbBeUzW.js";import"./defaultCIMValues-BrbaHf9c.js";import"./LRUCache-eBEVKbNU.js";import"./MemCache-CUhFgUMJ.js";import"./colorUtils-DQQagumJ.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./jsxFactory-BbJVeaDA.js";import"./intl-Beb5GWXc.js";import"./number-7p_O6jwX.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./enums-NCSMZWP1.js";import"./TileKey-upwcIO5W.js";import"./Queue-CJjQn74K.js";import"./ReactiveMap-DptZZMoQ.js";import"./signal-R7pX2aet.js";import"./quickselect-QQC62dOK.js";import"./Query-Dp8boimB.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";import"./defaults3D-CE2uGgSa.js";import"./defaults-CSNv9gRz.js";import"./defaultsJSON-GKolV7NZ.js";import"./layerViewUtils-CSVHLqOP.js";import"./GraphicManipulator-CRPAaAOE.js";import"./vec32-soPbwaVZ.js";import"./projectionUtils-BdqPecQc.js";import"./projectPointToVector-BeChI4_x.js";import"./elevationInfoUtils-DRGp9Lv0.js";import"./drapedUtils-BVag5CrE.js";import"./Stop-BpZ8Nuyu.js";import"./networkEnums-BTp20v-Z.js";import"./Map-BfsPAzzq.js";import"./Basemap-xdFWd_Ef.js";import"./loadAll-MI_JOpdU.js";import"./PortalItem-Dn4oT_Gd.js";import"./writeUtils-CFLt5Al1.js";import"./CollectionFlattener-kjXuGTXg.js";import"./persistable-DdbzkEuJ.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-a1-4zqTB.js";import"./PolygonCollection-CMbOuNoO.js";import"./TablesMixin-DOSIq3qh.js";import"./projectVectorToVector-DAecJS5f.js";import"./geodeticLengthOperator-BHayuOJB.js";import"./geodeticCurveType-CirnHLSB.js";import"./geodesicUtils-5UKmzzQW.js";import"./earcut-D9gy186-.js";import"./plane-BnjjlcHJ.js";import"./vectorStacks-Cflk7ctu.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./triangle-WIUNF1ZS.js";import"./sphere-CxG2piVF.js";import"./mat3-CruJiiUv.js";import"./lineSegment-Bl6I3b1d.js";import"./MeshTransform-tICMBwgD.js";import"./quat-9ZYTS2cW.js";import"./axisAngleDegrees-DrFxHEi4.js";import"./meshVertexSpaceUtils-BPkMPmro.js";import"./MeshLocalVertexSpace-DhAtAXfe.js";import"./memoize-DmxaQ-k8.js";import"./unitFormatUtils-De5DoCJv.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-C1_PpBfH.js";import"./spatialReferenceEllipsoidUtils-DTRGV_GU.js";import"./workers-BcCT7nhd.js";import"./TileInfo-CvSYzqJL.js";import"./TileKey-DZd6gJy7.js";import"./HeightModelInfo-C8sA4bKM.js";import"./timeZoneUtils-Cef7SfoB.js";import"./normalizeUtils-BS0bJnzn.js";import"./normalizeUtilsCommon-Ca72SEzL.js";import"./utils-C73sopP7.js";import"./utils-UVgDzRJn.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-DH2YvKGe.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-BILrrMzS.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-DN-q3Lg0.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-BR-Ucixf.js";import"./PointSnappingHint-B5UG77eq.js";var O;(function(t){t[t.FeatureMove=0]="FeatureMove",t[t.VertexMove=1]="VertexMove"})(O||(O={}));const Dt=()=>J.getLogger("esri.views.draw.support.ConnectedReshapeManager"),Nt=Symbol();let b=class extends st{constructor(t){super(t),this.activeOperationType=null,this.providerFactories=[],this.view=null,this._activeProviders=new Set,this._graphics=new Map,this._modifiedFeatures=new Map,this._modifiedGraphicsLayer=new H({listMode:"hide",internal:!0,title:"Connected Reshape Modified Graphics (Internal)"}),this._pendingGraphicsLayer=new H({listMode:"hide",internal:!0,title:"Connected Reshape Pending Graphics (Internal)"}),this._pendingFeatures=new Map,this._updatingHandles=new gt}initialize(){this.view.map.addMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer])}destroy(){this.view.destroyed||this.view.map.removeMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer]),this._modifiedGraphicsLayer.destroy(),this._pendingGraphicsLayer.destroy(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating||Array.from(this._activeProviders).some(t=>t.updating)}startFeatureMove(t){this.activeOperationType=O.FeatureMove,this._activeProviders.clear();for(const e of this.providerFactories)z(this._activeProviders,e.getFeatureReshapeProvider(t))}startVertexMove(t,e){this.activeOperationType=O.VertexMove,this._activeProviders.clear();for(const i of this.providerFactories)z(this._activeProviders,i.getVertexReshapeProvider(t,e))}finish(){this.activeOperationType=null,this._activeProviders.clear();for(const[t,e]of this._pendingFeatures){this._pendingFeatures.delete(t),this._modifiedFeatures.set(t,e);const i=this._graphics.get(t);i&&(this._modifiedGraphicsLayer.add(i),this._pendingGraphicsLayer.remove(i))}}translate(t,e,i=0){if(this.activeOperationType===null)return;const s=C(t),r=C(e),o=C(i);for(const n of this._activeProviders){const a=n.translate(s,r,o);this._update(a)}}async _initializeGraphic(t,e){t.symbol??(t.symbol=await this._updatingHandles.addPromise(xt(t,{scale:this.view.scale,useSourceLayer:!0}))),this._pendingFeatures.has(e.uniqueId)?this._pendingGraphicsLayer.add(t):this._modifiedFeatures.has(e.uniqueId)&&this._modifiedGraphicsLayer.add(t),this.addHandles(await jt(e.originalGraphic,t,this.view),Nt)}_update(t){for(const e of t){const i=this._modifiedFeatures.delete(e.uniqueId);this._pendingFeatures.set(e.uniqueId,e);const s=ot(this._graphics,e.uniqueId,()=>{const r=e.graphic.cloneShallow();return this._initializeGraphic(r,e),r});s.geometry=e.graphic.geometry,i&&(this._modifiedGraphicsLayer.remove(s),this._pendingGraphicsLayer.add(s))}}get test(){return{activeProviders:this._activeProviders,modifiedFeatures:this._modifiedFeatures,modifiedGraphicsLayer:this._modifiedGraphicsLayer,pendingFeatures:this._pendingFeatures,pendingGraphicsLayer:this._pendingGraphicsLayer}}};async function jt(t,e,i){const s=t.sourceLayer,r=t.getObjectId();if(r==null)return Dt().error("editing:cannot-hide-graphic","Unable to hide original graphic because it has no objectId."),D();let o=null;function n(a){o==null||o.abort(),o=Q(async p=>{var h;const d=await q(i,s);rt(p),d&&((h=d.setVisibility)==null||h.call(d,r,a))})}return await Zt(i,e),n(!1),A([qt(i,e,a=>n(!a)),D(async()=>{n(!0);const a=await q(i,s);await L(()=>!(a!=null&&a.updating))})])}function qt(t,e,i){if(t.type==="3d"){const s=new W({graphic:e});return A([t.trackGraphicState(s),M(()=>s.displaying,i)])}return M(()=>e.visible,i)}async function Zt(t,e){if(t.type==="3d"){const i=new W({graphic:e}),s=t.trackGraphicState(i);await L(()=>i.displaying||i.error),s.remove()}else await L(()=>e.visible)}async function q(t,e){const i=_t(e)||ft(e)?e.parent:e;return i?t.whenLayerView(i):null}function C(t){return isNaN(t)?0:t}c([l()],b.prototype,"activeOperationType",void 0),c([l()],b.prototype,"providerFactories",void 0),c([l()],b.prototype,"updating",null),c([l({constructOnly:!0})],b.prototype,"view",void 0),b=c([P("esri.views.draw.support.ConnectedReshapeManager")],b);let w=class extends Tt{constructor(t){super(t),this.type="translate-vertex",this.distance=F,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=F,this.elevation=null,this.area=null,this.totalLength=null}};c([l()],w.prototype,"type",void 0),c([l()],w.prototype,"distance",void 0),c([l()],w.prototype,"elevation",void 0),c([l()],w.prototype,"area",void 0),c([l()],w.prototype,"totalLength",void 0),w=c([P("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],w);function Bt(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new Mt(e),selectedVertex:new Gt(e),translateGraphic:new Lt(e),translateVertices:new w(e)}}function Yt(t,e){function i(){const o=e(),n=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:n}}let s=!1;function r(o){s||(s=!0,o(),s=!1)}return A([M(()=>{var n,a;const o=i();return{context:o,geometry:(n=o.graphic)==null?void 0:n.geometry,vertexGeometry:(a=o.selectedVertex)==null?void 0:a.geometry}},({context:o})=>{r(()=>{Xt(o),t.info=o.activeTooltipInfo})},nt),M(()=>{const o=i(),{activeTooltipInfo:n}=o;if(n&&"key"in n)return{context:o,key:n.key}},(o,n)=>{o&&n&&o.key!==n.key&&r(()=>Z(o.context))},K),Ot(t,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{Z(i()),s=!1}})])}function Xt(t){const e=t.activeTooltipInfo;if(e){switch(e==null?void 0:e.type){case"move-point":return Jt(e,t);case"selected-vertex":return Kt(e,t)}e.sketchOptions=t.sketchOptions}}function Jt(t,{graphic:e}){et(t,e,e==null?void 0:e.geometry)}function Kt(t,{graphic:e,selectedVertex:i,automaticAreaMeasurementUtils:s,automaticLengthMeasurementUtils:r}){et(t,e,i==null?void 0:i.geometry);const o=e==null?void 0:e.geometry;switch(o==null?void 0:o.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=s.autoArea2D(o);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=r.autoLength2D(o),t.area.visible=!1}}function et(t,e,i){var s;e&&(i==null?void 0:i.type)==="point"&&(t.setLocationFromPoint(i),t.elevation.actual=$t(i),t.elevation.visible=!!((s=e.geometry)!=null&&s.hasZ),t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function Z(t){function e(o,n){const a=n==null?void 0:n.geometry;if(!a||a.type!=="point")return;const{dx:p,dy:d,dz:h}=kt(o,a);if(p===0&&d===0&&h===0)return;const{x:v,y,z:u,m:g,spatialReference:f}=a,x=new I({x:v+p,y:y+d,z:u!=null?u+h:void 0,m:g,spatialReference:f});t.updateGeometry(n,x,a,p,d)}const{activeTooltipInfo:i,graphic:s,selectedVertex:r}=t;switch(i==null?void 0:i.type){case"move-point":return e(i,s);case"selected-vertex":return e(i,r)}}function Qt(t,e,i,s){t.clear(),it(t,e,s,i)}function Wt(t,e,i,s,r){t.clear();const{automaticAreaMeasurementUtils:o,automaticLengthMeasurementUtils:n}=s;(i==null?void 0:i.type)==="polygon"?t.area=o.autoArea2D(i):(i==null?void 0:i.type)==="polyline"&&(t.totalLength=n.autoLength2D(i)),it(t,e,r,s)}function it(t,e,i,{automaticLengthMeasurementUtils:s}){if(!i)return;const{x:r,y:o}=i.origin,n=e.toMap(i),a=e.toMap(Et(r,o)),p=s.autoDistanceBetweenPoints2D(a,n);t.distance=p??F}class te{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-start"}}class ee{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape"}}class ie{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-stop"}}class se{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class oe{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class re{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class ne{constructor(e){this.added=e,this.type="vertex-select"}}class ae{constructor(e){this.removed=e,this.type="vertex-deselect"}}class pe{constructor(e,i,s,r){this.added=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-add"}}class he{constructor(e,i,s,r){this.removed=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-remove"}}const _=Ht.reshapeGraphics,ce={vertices:{default:new S({style:"circle",size:_.vertex.size,color:_.vertex.color,outline:{color:_.vertex.outlineColor,width:1}}),hover:new S({style:"circle",size:_.vertex.hoverSize,color:_.vertex.hoverColor,outline:{color:_.vertex.hoverOutlineColor,width:1}}),selected:new S({style:"circle",size:_.selected.size,color:_.selected.color,outline:{color:_.selected.outlineColor,width:1}})},midpoints:{default:new S({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}}),hover:new S({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}})}};let m=class extends at.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._connectedReshapeManager=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.connectedReshapeProviders=null,this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.midpointGraphics=new R,this.midpointSymbol=new S({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new R,this.snappingManager=null,this.symbols=ce,this.sketchOptions=new tt,this.type="reshape",this.vertexGraphics=new R,this.view=null}initialize(){const t=this.view;this._highlightHelper=new bt({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=pt(()=>{var e;return(e=this.graphic)==null?void 0:e.geometry},e=>{if(!e)return;const i=new Set(this.selectedVertices.map(d=>{var h;return(h=d.attributes)==null?void 0:h.pointIndex}));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(d=>i.has(d.attributes.pointIndex)).forEach(d=>this._addToSelection(d));const{enableMovement:s,_mover:r,graphic:o,midpointGraphics:n,vertexGraphics:a}=this,p=a.concat(n).items;s&&p.push(o),r==null||r.set("graphics",p)},K),this.tooltip=Rt(()=>({view:t,options:this.sketchOptions.tooltips})),this.tooltipInfos=Bt(this.sketchOptions),this.addHandles([ht(()=>t==null?void 0:t.ready,()=>{const{layer:e,view:i}=this;St(i,e),this.addHandles(i.on("key-down",s=>this._keyDownHandler(s),Ft.TOOL))},{once:!0,initial:!0}),M(()=>this.graphic,()=>this.refresh()),M(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),M(()=>[this.highlightsEnabled,this.highlightName],()=>{var e;(e=this._highlightHelper)==null||e.removeAll(),this._setUpHighlights()}),M(()=>this.enableMidpoints,()=>this.refresh()),Yt(this.tooltip,()=>this._tooltipsContext),M(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),ct),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){var t;this._reset(),(t=this._mover)==null||t.destroy(),this._mover=null,this._connectedReshapeManager=T(this._connectedReshapeManager),this.tooltip=T(this.tooltip)}get _coordinateHelper(){var t,e,i;return((t=this._editGeometryOperations)==null?void 0:t.data.coordinateHelper)??Pt(!!((e=this.graphic.geometry)!=null&&e.hasZ),!!((i=this.graphic.geometry)!=null&&i.hasM),this.view.spatialReference)}get _selectedVertex(){return this.selectedVertices.length===1?this.selectedVertices.at(0):void 0}get _tooltipsContext(){const{automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,sketchOptions:i,activeTooltipInfo:s,graphic:r}=this;return{sketchOptions:i,activeTooltipInfo:s,graphic:r,selectedVertex:this._selectedVertex,automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,updateGeometry:(o,n,a,p,d)=>{this._setUpGeometryHelper();const h=o===this.graphic;if(h?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(o),this._syncGeometryAfterVertexMove(o,n,p,d,!0),h){const{view:y}=this,u=y.toScreen(a),g=y.toScreen(n),f=((g==null?void 0:g.x)??0)-((u==null?void 0:u.x)??0),x=((g==null?void 0:g.y)??0)-((u==null?void 0:u.y)??0);this._emitMoveEvent(f,x),this._emitMoveStopEvent(f,x)}else this._emitReshapeEvent(o),this._emitReshapeStopEvent(o);this._editGeometryOperations=T(this._editGeometryOperations)}}}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||(t==null?void 0:t.geometry)==null)return;const i=t.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&lt(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._setupConnectedReshapeManager()):this._logGeometryTypeError()}_setUpHighlights(){var t;this.highlightsEnabled&&this.graphic&&((t=this._highlightHelper)==null||t.add(this.graphic,this.highlightName))}_setUpGeometryHelper(){const t=this.graphic.geometry;if(t==null||t.type==="mesh"||t.type==="extent")return void this._logGeometryTypeError();const e=t.type==="multipoint"?new dt({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=Ut.fromGeometry(e,ut.Local)}_saveSnappingContextForHandle(t,e){var s;this._snappingGraphicsLayer=new H({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;N(i),this._snappingContext=new zt({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:((s=e.viewEvent)==null?void 0:s.pointerType)||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new yt(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){var t;this._clearSelection(),(t=this._highlightHelper)==null||t.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){var t;this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&((t=this.view)!=null&&t.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=T(this._editGeometryOperations),this._snappingTask=j(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(t!=null&&(t.type==="polyline"||t.type==="polygon")){const e=B(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];return t==null||t.forEach((r,o)=>{r.forEach((n,a)=>{var p;s.push(new $({geometry:this._coordinateHelper.arrayToPoint(n),symbol:(p=i==null?void 0:i.vertices)==null?void 0:p.default,attributes:{...e,pathIndex:o,pointIndex:a}}))})}),s}_createMidpointGraphics(t){var r;const{_graphicAttributes:e,symbols:i}=this,s=[];for(let o=0;o<t.length;o++){const n=t[o];for(let a=0;a<n.length;a++){const p=(a+1)%n.length;if(((r=this.graphic.geometry)==null?void 0:r.type)==="polyline"&&p===0)continue;const d=n[a],h=n[p],v=this._getMidpoint(d,h);s.push(new $({geometry:v,symbol:i.midpoints.default,attributes:{...e,pathIndex:o,pointIndexStart:a,pointIndexEnd:p}}))}}return s}_updateSymbolsForTheme(){var e;const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:(e=this.symbols.vertices.hover)==null?void 0:e.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const i of this.vertexGraphics)this._isSelected(i)?i.symbol=this.symbols.vertices.selected:this._hoverGraphic===i?i.symbol=this.symbols.vertices.hover:i.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const s=[];for(let r=0;r<e.length;r++){if(i===r)continue;const o=e[i],n=e[r];o.x===n.x&&o.y===n.y&&s.push(r)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=s.concat(i).items;t&&o.push(e),this._mover=new Vt({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_setupConnectedReshapeManager(){const{connectedReshapeProviders:t}=this;t!=null&&t.length!==0&&(this._connectedReshapeManager=new b({providerFactories:t,view:this.view}))}_onGraphicClickCallback(t){var i,s;t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),(s=(i=this.callbacks).onGraphicClick)==null||s.call(i,t);else if(this._isMidpoint(e)){if(t.viewEvent.button===2)return;const r=this.graphic.clone(),o=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],r,o)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),t.viewEvent.button===2?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t,r=this._connectedReshapeManager,o=r?le(this.graphic):null;if(s===this.graphic){const{geometry:a}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),o&&(r==null||r.startFeatureMove([o])),void(a!=null&&a.type==="point"&&this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}const{selectedVertices:n}=this;if(!n.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const a=this.graphic.clone(),p=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],a,p)}this._addToSelection(s)}this._setUpOperation(t),o&&(r==null||r.startVertexMove(o,de(n))),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)})}_onGraphicMoveCallback(t){var a;const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:o}=e,{geometry:n}=r;if(n!=null){if(o!=="move")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(r,t.viewEvent),this._emitReshapeEvent(r)});else if(n.type==="point")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)});else if(n.type==="polyline"||n.type==="polygon"){const p=B(n);this._updateVertexGraphicLocations(p);const{dxMap:d,dyMap:h}=me(i,s,this.view);(a=this._connectedReshapeManager)==null||a.translate(d,h,0),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}}_onGraphicMoveStopCallback(t){var n;const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t,{operationType:o}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(r,i,s,t,()=>o==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(r)),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),(n=this._connectedReshapeManager)==null||n.finish(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:r}=i.attributes;i.geometry=e.arrayToPoint(t[s][r])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=e.attributes,o=t[i];e.geometry=this._getMidpoint(o[s],o[r])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,s=i.arrayToVector(t),r=i.arrayToVector(e),o=i.toXYZ(s),n=i.toXYZ(r),[a,p,d]=mt(o,n),h=i.hasM()?0:void 0;return new I({x:a,y:p,z:d,m:h,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){N(this._editGeometryOperations);const[e,i]=Y(t);return this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,s,r){j(this._snappingTask);const o=this._snappingContext;if(!o)return;const n=t.geometry,a=s.type==="graphic-move-stop";if(this.snappingManager!=null&&this.selectedVertices.length<2&&!a){const p=this.snappingManager;this._stagedVertex=p.update({point:n,context:o}),this._syncGeometryAfterVertexMove(t,new I(this._stagedVertex),e,i,a),r(),this._snappingTask=Q(async d=>{const h=await p.snap({point:n,context:o,signal:d});h.valid&&(this._stagedVertex=h.apply(),this._syncGeometryAfterVertexMove(t,new I(this._stagedVertex),e,i,a),r())})}else{const p=this._stagedVertex!=null?new I(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,p,e,i,a),r()}}_syncGeometryAfterVertexMove(t,e,i,s,r=!1){var u,g,f;const o=(u=this._editGeometryOperations)==null?void 0:u.data.geometry;if(!o)return;const{_coordinateHelper:n}=this,a=n.pointToVector(e),p=this._getVertexFromEditGeometry(t),d=n.getZ(a),h=a[0]-p.pos[0],v=a[1]-p.pos[1],y=d!=null?d-p.pos[2]:0;if((g=this._editGeometryOperations)==null||g.moveVertices([p],h,v,y),(f=this._connectedReshapeManager)==null||f.translate(h,v,y),o.type==="point")t.geometry=e;else if(o.type==="mesh")t.geometry=o.centerAt(e);else{const[x,k]=Y(t);let G=V(o);const U=G[x].length-1,E=n.pointToArray(e);G[x][k]=E,o.type==="polygon"&&(k===0?G[x][U]=E:k===U&&(G[x][0]=E)),this._isVertex(t)&&(G=this._moveRelatedCoordinates(G,t,E),G=this._moveSelectedHandleCoordinates(G,t,i,s,o.type==="polygon"),this._updateMidpointGraphicLocations(G)),this._updateGraphicGeometry(o.clone()),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const r of s){const o=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:a}=o.attributes;t[n][a]=i,o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,r){for(const o of this.selectedVertices)if(o!==e){const{pathIndex:n,pointIndex:a,relatedGraphicIndices:p}=o.attributes,d=wt(o.geometry,i,s,this.view),h=V(d),v=t[n].length-1;t[n][a]=h,o.geometry=d,r&&(a===0?t[n][v]=h:a===v&&(t[n][0]=h));for(const y of p){const u=this.vertexGraphics.at(y),{pathIndex:g,pointIndex:f}=u.attributes;t[g][f]=h,u.geometry=d}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(s==null||s.type!=="polygon"&&s.type!=="polyline")return[];const r=s.clone(),o=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:p}=t.attributes,d=V(t.geometry),h=p===0?a+1:p,v=V(r);return v[n].splice(h,0,d),t.attributes={...e,pathIndex:n,pointIndex:h,relatedGraphicIndices:[]},o.push({coordinates:v[n][h],componentIndex:n,vertexIndex:h}),this._updateGraphicGeometry(r),o}_addToSelection(t){const e=X(t);for(const i of e)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=s,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){this._activeOperationInfo==null&&Ct(t,this.tooltip)||At.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(e==null||e.type!=="polygon"&&e.type!=="polyline"||e.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=e.clone();let r=V(s);const o=[],n=X(t);for(const a of n){const{x:p,y:d}=a.geometry;for(let h=0;h<r.length;h++){const v=r[h];for(let y=0;y<v.length;y++){const[u,g]=v[y];p===u&&d===g&&(o.push({coordinates:r[h][y],componentIndex:h,vertexIndex:y}),r[h].splice(Number(y),1))}}}if(s.type==="polygon")r=r.filter(a=>{if(a.length<2)return!1;const[p,d]=a[0],[h,v]=a[a.length-1];return(a.length!==2||p!==h||d!==v)&&(p===h&&d===v||a.push(a[0]),!0)}),s.rings=r;else{for(const a of r)a.length===1&&r.splice(r.indexOf(a),1);s.paths=r}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,o)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:s,view:r,tooltipInfos:o}=this,n=s==null?void 0:s.geometry;(n==null?void 0:n.type)==="point"?i=o.movePoint:this._selectedVertex?i=o.selectedVertex:t===this.graphic?(i=o.translateGraphic,Qt(i,r,this._tooltipsContext,e)):t&&this.selectedVertices.length>1&&(i=o.translateVertices,Wt(i,r,n,this._tooltipsContext,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){var e,i;(e=this._updateHandlesOnExternalGeometryChange)==null||e.pause(),this.graphic.geometry=t,(i=this._updateHandlesOnExternalGeometryChange)==null||i.resume()}_emitMoveStartEvent(t,e){var s,r;const i=new se(this.graphic,t,e);this.emit("move-start",i),(r=(s=this.callbacks).onMoveStart)==null||r.call(s,i)}_emitMoveEvent(t,e){var s,r;const i=new oe(this.graphic,t,e);this.emit("move",i),(r=(s=this.callbacks).onMove)==null||r.call(s,i)}_emitMoveStopEvent(t,e){var s,r;if(t==null||e==null){const o=this._activeOperationInfo;if(!o)return;t=o.totalDx,e=o.totalDy}const i=new re(this.graphic,t,e);this.emit("move-stop",i),(r=(s=this.callbacks).onMoveStop)==null||r.call(s,i)}_emitReshapeStartEvent(t){var i,s;const e=new te(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),(s=(i=this.callbacks).onReshapeStart)==null||s.call(i,e)}_emitReshapeEvent(t){var i,s;const e=new ee(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),(s=(i=this.callbacks).onReshape)==null||s.call(i,e)}_emitReshapeStopEvent(t){var i,s;const e=new ie(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),(s=(i=this.callbacks).onReshapeStop)==null||s.call(i,e)}_emitSelectEvent(t){var i,s;const e=new ne(t);this.emit("select",e),(s=(i=this.callbacks).onVertexSelect)==null||s.call(i,e)}_emitDeselectEvent(t){var i,s;const e=new ae(t);this.emit("deselect",e),(s=(i=this.callbacks).onVertexDeselect)==null||s.call(i,e)}_emitVertexAddEvent(t,e,i){var r,o;const s=new pe(t,this.graphic,e,i);this.emit("vertex-add",s),(o=(r=this.callbacks).onVertexAdd)==null||o.call(r,s)}_emitVertexRemoveEvent(t,e,i){var r,o;const s=new he(t,this.graphic,e,i);this.emit("vertex-remove",s),(o=(r=this.callbacks).onVertexRemove)==null||o.call(r,s)}_logGeometryTypeError(){J.getLogger(this).error(new vt("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function B(t){const e=V(t.clone());if(t.type==="polygon")for(const i of e){const s=i[i.length-1];i[0][0]===s[0]&&i[0][1]===s[1]&&i.length>2&&i.pop()}return e}function Y({attributes:t}){return[(t==null?void 0:t.pathIndex)||0,(t==null?void 0:t.pointIndex)||0]}function X(t){return t instanceof $?[t]:[...t]}function le(t){const e=t.sourceLayer??t.layer;return It(e)?{graphic:t,layer:e}:null}function de(t){return t.toArray().map(e=>({pathIndex:e.attributes.pathIndex,vertexIndex:e.attributes.pointIndex}))}function me(t,e,i){const s=i.state.inverseTransform;return{dxMap:s[0]*t+s[2]*e,dyMap:s[1]*t+s[3]*e}}c([l()],m.prototype,"_activeOperationInfo",void 0),c([l()],m.prototype,"_connectedReshapeManager",void 0),c([l()],m.prototype,"_coordinateHelper",null),c([l()],m.prototype,"_editGeometryOperations",void 0),c([l()],m.prototype,"tooltip",void 0),c([l()],m.prototype,"tooltipInfos",void 0),c([l()],m.prototype,"activeTooltipInfo",void 0),c([l({constructOnly:!0})],m.prototype,"automaticAreaMeasurementUtils",void 0),c([l({constructOnly:!0})],m.prototype,"automaticLengthMeasurementUtils",void 0),c([l()],m.prototype,"_selectedVertex",null),c([l()],m.prototype,"_tooltipsContext",null),c([l()],m.prototype,"callbacks",void 0),c([l()],m.prototype,"connectedReshapeProviders",void 0),c([l()],m.prototype,"enableMidpoints",void 0),c([l()],m.prototype,"enableMovement",void 0),c([l()],m.prototype,"enableVertices",void 0),c([l()],m.prototype,"graphic",void 0),c([l()],m.prototype,"highlightName",void 0),c([l()],m.prototype,"highlightsEnabled",void 0),c([l()],m.prototype,"layer",void 0),c([l({readOnly:!0})],m.prototype,"midpointGraphics",void 0),c([l()],m.prototype,"midpointSymbol",void 0),c([l({readOnly:!0})],m.prototype,"selectedVertices",void 0),c([l()],m.prototype,"snappingManager",void 0),c([l({readOnly:!0})],m.prototype,"state",null),c([l()],m.prototype,"symbols",void 0),c([l({type:tt})],m.prototype,"sketchOptions",void 0),c([l({readOnly:!0})],m.prototype,"type",void 0),c([l({readOnly:!0})],m.prototype,"vertexGraphics",void 0),c([l()],m.prototype,"view",void 0),m=c([P("esri.views.draw.support.Reshape")],m);const qs=m;export{qs as default};
