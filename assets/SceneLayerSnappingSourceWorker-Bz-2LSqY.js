import{v as p,aw as y,c4 as m,c as L,d as x}from"./Identifiable-_3rFZ1o6.js";import{q as b,p as _,u as h}from"./vec32-soPbwaVZ.js";import{v as P,h as S,j as $}from"./lineSegment-Bl6I3b1d.js";import{E as I,U as l,i as E}from"./sphere-CxG2piVF.js";import{b as w}from"./Octree-COxfz12D.js";import{g as V}from"./edgeProcessing-DyyQHuWE.js";import"./index-BEHHhRxI.js";import"./common-DQOJ18NT.js";import"./vectorStacks-Cflk7ctu.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./vec2f64-Cgb6qxNH.js";import"./vec4f64-DPb6J-GU.js";import"./mat4-CEszlm-2.js";import"./vec42-CKs01hkn.js";import"./mat3-CruJiiUv.js";import"./plane-BnjjlcHJ.js";import"./BufferView-eGDukKmQ.js";import"./vec2-ChnYg_BJ.js";import"./deduplicate-Xkyt2L53.js";import"./Indices-CJx9tykA.js";import"./InterleavedLayout-sBpZXb9C.js";import"./types-BKo2foNY.js";import"./VertexAttribute-BfkzOMLV.js";import"./glUtil-DRNmC8Up.js";import"./enums-UBzvFP7O.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Normals-D5GIqjuf.js";const j=1e3;function T(t,o,i){const n=I(),e=l(n);return b(e,e,t,.5),b(e,e,o,.5),n[3]=_(e,t),h(e,e,i),n}let g=class{constructor(){this._idToComponent=new Map,this._components=new w(t=>t.bounds),this._edges=new w(t=>t.bounds),this._tmpLineSegment=P(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),y(o),await this._ensureEdgeLocations(t,o);const i=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,i),i.length<j),t.bounds),{result:{candidates:i}}}async _ensureEdgeLocations(t,o){const i=[];if(this._components.forEachNeighbor(s=>{if(s.info==null){const{id:c,uid:r}=s;i.push({id:c,uid:r})}return!0},t.bounds),!i.length)return;const n={components:i},e=await this.remoteClient.invoke("fetchAllEdgeLocations",n,o??{});for(const s of e.components)this._setFetchEdgeLocations(s)}async add(t){const o=new f(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const i=[];this._edges.forEachNeighbor(n=>(n.component===o&&i.push(n),!0),o.bounds),this._edges.remove(i),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const i=V.createView(t.locations),n=new Array(i.count),e=p(),s=p();for(let d=0;d<i.count;d++){i.position0.getVec(d,e),i.position1.getVec(d,s);const a=T(e,s,t.origin),v=new N(o,d,a);n[d]=v}this._edges.add(n);const{objectIds:c,origin:r}=t;o.info={locations:i,objectIds:c,origin:r}}_addCandidates(t,o,i){const{info:n}=o.component,{origin:e,objectIds:s}=n,c=n.locations,r=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);h(r,r,e),h(d,d,e);const a=s[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,a,r,d,i),C(t,a,r,i),C(t,a,d,i)}_addEdgeCandidate(t,o,i,n,e){if(!t.returnEdge)return;const s=l(t.bounds),c=S(i,n,this._tmpLineSegment),r=$(c,s,this._tmpP3);E(t.bounds,r)&&e.push({type:"edge",objectId:o,target:m(r),distance:_(s,r),start:m(i),end:m(n)})}};g=L([x("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const at=g;function C(t,o,i,n){if(!t.returnVertex||!E(t.bounds,i))return;const e=l(t.bounds);n.push({type:"vertex",objectId:o,target:m(i),distance:_(e,i)})}const u=class u{constructor(o,i){this.id=o,this.bounds=i,this.info=null,this.uid=++u.uid}};u.uid=0;let f=u;class N{constructor(o,i,n){this.component=o,this.index=i,this.bounds=n}}export{at as default};
