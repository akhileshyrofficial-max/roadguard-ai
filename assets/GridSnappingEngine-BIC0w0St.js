import{x as V,cm as U,i as X,at as Y,c as n,m as a,d as D}from"./Identifiable-BjM0PfdN.js";import{w as E}from"./vec32-rHWgUfNj.js";import{U as F,O as j}from"./projectionUtils-D3_kHwH-.js";import{P as W}from"./normalizeUtils-DfEBCyY7.js";import{u as H}from"./scaleUtils-FdYBOJJY.js";import{l as I,u as T,t as _}from"./gridUtils-DSoWmoQV.js";import{f as d,d as k,c as q}from"./hitTestSelectUtils-CCAzSamd.js";import{r as G,a as A}from"./RouteLayerInteraction-DD57Onr-.js";import"./index-CVvIVqY1.js";import"./common-DQOJ18NT.js";import"./normalizeUtilsCommon-Bp_cDVNc.js";import"./jsonUtils-DBuABSQZ.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";import"./geodesicUtils-Cr-plA6M.js";import"./Cyclical-B0bcmwRe.js";import"./quantityUtils-63xE9umB.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./projectVectorToVector-yd877UiC.js";import"./projectPointToVector-yyeyeVyg.js";import"./fieldUtils-Br-fPSxS.js";import"./Layer-CUjb8Y3m.js";import"./Query-duJofNa2.js";import"./typeUtils-U-Zf11cK.js";import"./Field-FVkerAtx.js";import"./fieldType-ClovGbuQ.js";import"./MapView-XXhq0wAO.js";import"./CollectionFlattener-CiW0r4Pq.js";import"./workers-BNUpPbJD.js";import"./Queue-DILFUEQB.js";import"./intl-ByqrfC_d.js";import"./number-CsIuR4Me.js";import"./TileInfo-gIGeOzNG.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-D4gVuCa_.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-DdU5IX8L.js";import"./asyncUtils-zc5DpkIL.js";import"./signal-CHoLd7Dm.js";import"./Map-C7AlwcQg.js";import"./Basemap-DEy_TBwO.js";import"./loadAll-tu8QdrIx.js";import"./PortalItem-5OKFVWCx.js";import"./writeUtils-DJnvrJq1.js";import"./layerUtils-CmDKJw7q.js";import"./persistable-Dy9UTZKT.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-B5tMzp3X.js";import"./PolygonCollection-CkOPuE2h.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-C8ai-EIY.js";import"./TablesMixin-N_koq_xq.js";import"./GraphicsCollection-B9Sj62PJ.js";import"./Graphic-C2Bnzy89.js";import"./PopupTemplate-CF36_3mn.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-CP9PJ8Sp.js";import"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-BrXqvn3i.js";import"./TextSymbol-DPyc43q3.js";import"./PictureMarkerSymbol-DOPylmLK.js";import"./HeightModelInfo-BaIW4m76.js";import"./timeZoneUtils-DMYcWBGI.js";import"./ReactiveMap-sVzP5DGX.js";import"./ViewingMode-Chk7YAAL.js";import"./enums-BuAlJCBy.js";import"./TileKey-DR2srngJ.js";import"./quickselect-QQC62dOK.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-COHy2lsX.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-I7zBxmlP.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-CKvAsRxn.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-CWer4Z2d.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./plane-D3quJIjf.js";import"./vectorStacks-DgNdV_6b.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-mLO_dKdC.js";import"./elevationInfoUtils-BM_SdJ-M.js";import"./ElevationInfo-B2ksLwBj.js";import"./lengthUtils-BDJ7rNGW.js";import"./spatialReferenceEllipsoidUtils-BYFAq5u2.js";import"./GraphicsLayer-B5Y1O4UM.js";import"./BlendLayer-DF9cB_oM.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DU1z6yLO.js";import"./parser-BAKViB6V.js";import"./ScaleRangeLayer-YHoThhHM.js";import"./Stop-CYiQeHox.js";import"./networkEnums-BEjCt5UC.js";import"./geodeticLengthOperator-BlQK6vk8.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-DlAvmH7a.js";import"./lineSegment-CP3RFx1A.js";let p=class extends V{constructor(t){super(t),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){var t;return(t=this.grid)!=null&&t.rotateWithMap?0:U(this.view.rotation??0)}get gridRotation(){var t;return U(((t=this.grid)==null?void 0:t.rotation)??0)}get gridCenter(){var r;const{spatialReference:t,grid:e}=this;if(!e||!t||!F(e.center.spatialReference,t))return null;try{const i=j(e.center,t),o=t.isWrappable&&((r=this.view)==null?void 0:r.center)!=null?W(i.x,this.view.center.x,t):i.x;return d(o,i.y,i.z)}catch(i){return X.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",i),null}}get offsetScaleFactor(){const{pixelsPerStride:t,grid:e}=this;if(!e||!t)return 1;const{majorLineInterval:r,dynamicScaling:i}=e;return r<1?null:I(r,t,i)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:t}=this;return t?Y(t.spacing,t.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:t}=this;return t==null?null:t*H(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:t}=this.view;return this.gridCenter?T(this.gridCenter[0],this.gridCenter[1],t):null}get pixelsPerStride(){const{gridMetersPerStride:t,viewMetersPerPixel:e}=this;return e&&t?t/e:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}async fetchCandidates(t,e,r){var l;const{options:i,view:o}=this;if(!(i!=null&&i.effectiveGridEnabled)||!o.grid||(l=r.feature)!=null&&l.attributes&&k in r.feature.attributes)return[];const s=r.coordinateHelper.arrayToPoint(t),m=i.distance*(r.pointer==="touch"?i.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(s,m)}fetchCandidatesSync(t,e){const r=[],{grid:i,effectiveViewRotation:o,gridRotation:s,gridCenter:m,viewMetersPerPixel:l,viewMetersPerSRUnit:f,offsetScaleFactor:S,spatialReference:g,gridMetersPerStride:C,pixelsPerStride:$}=this;if(!(i&&l&&f&&m&&g&&S&&C&&$)||!i.dynamicScaling&&$<_||!F(t.spatialReference,g))return r;const y=j(t,g),z=d(y.x,y.y,y.z),u=h(z,-s,m,-o),P=C/f*S,c=B(u,P,m),{shouldSnapX:w,shouldSnapY:v}=J(c,u,e,l,f);if(!w&&!v)return[];const L=d((w?c:u)[0],(v?c:u)[1]),M=h(L,s,m,o),b=h(c,s,m,o);if(v){const R=O(c,u,P,"y"),x=h(R,s,m,o);r.push(new G({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}if(w){const R=O(c,u,P,"x"),x=h(R,s,m,o);r.push(new G({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}return w&&v&&r.push(new A(M,r[0],r[1],!1)),r}};n([a({constructOnly:!0})],p.prototype,"view",void 0),n([a()],p.prototype,"options",void 0),n([a()],p.prototype,"grid",null),n([a()],p.prototype,"effectiveViewRotation",null),n([a()],p.prototype,"gridRotation",null),n([a()],p.prototype,"gridCenter",null),n([a()],p.prototype,"offsetScaleFactor",null),n([a()],p.prototype,"spatialReference",null),n([a()],p.prototype,"gridMetersPerStride",null),n([a()],p.prototype,"viewMetersPerPixel",null),n([a()],p.prototype,"viewMetersPerSRUnit",null),n([a()],p.prototype,"pixelsPerStride",null),n([a()],p.prototype,"updating",null),p=n([D("esri.views.interactive.snapping.GridSnappingEngine")],p);const h=(t,e,r,i)=>{const o=q(t[0],t[1],t[2]);return E(o,E(o,o,r,e),r,i)},B=(t,e,r)=>{const i=(t[0]-r[0])/e,o=(t[1]-r[1])/e,s=Math.trunc(i),m=Math.trunc(o),l=Math.round(i%1),f=Math.round(o%1),S=r[0]+(s+l)*e,g=r[1]+(m+f)*e;return d(S,g)},J=(t,e,r,i,o)=>{if(i<=0)return{shouldSnapX:!1,shouldSnapY:!1};const s=(t[0]-e[0])/i,m=(t[1]-e[1])/i;return{shouldSnapX:Math.abs(s*o)<r,shouldSnapY:Math.abs(m*o)<r}},O=(t,e,r,i)=>{if(i==="y"){const s=e[0]>t[0]?1:-1;return d(t[0]+r*s,t[1])}const o=e[1]>t[1]?1:-1;return d(t[0],t[1]+r*o)};export{p as GridSnappingEngine};
