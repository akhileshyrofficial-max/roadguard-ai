const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/mapImageLayerUtils-CfgBf-6e.js","assets/utils-DLby0kF6.js","assets/Identifiable-_3rFZ1o6.js","assets/index-BEHHhRxI.js","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/PortalItem-Dn4oT_Gd.js","assets/jsonContext-DKFyyNwn.js","assets/portalItemUtils-CHuQGePU.js","assets/projectionUtils-BdqPecQc.js","assets/saveUtils-2gkpyGz5.js"])))=>i.map(i=>d[i]);
import{_ as $}from"./index-BEHHhRxI.js";import{cs as E,E as P,M as x,br as g,ct as T,H as v,a3 as A,s as I,b as L,c as o,m as p,ac as M,ab as F,bi as R,d as j}from"./Identifiable-_3rFZ1o6.js";import{t as V}from"./loadAll-MI_JOpdU.js";import{S as N}from"./MultiOriginJSONSupport-uq7YIQYP.js";import{i as J}from"./scaleUtils-B8vcNDUc.js";import{u as U,h as q}from"./Layer--GugXUPW.js";import{i as k}from"./APIKeyMixin-CY_nGuXy.js";import{m as z,f as W,a as D}from"./SublayersOwner-BmxN4azM.js";import{l as G}from"./ArcGISService-vS49SR2m.js";import{p as H}from"./BlendLayer-DNv82dbV.js";import{e as Z}from"./CustomParametersMixin-BZBJ7Ucu.js";import{b as B,y as C}from"./OperationalLayer-Dmy6sOtR.js";import{j as K}from"./PortalLayer-DgoCliAY.js";import{f as Q}from"./RefreshableLayer-DF_vXnzd.js";import{t as X}from"./ScaleRangeLayer-5c4AXGq9.js";import{c as Y}from"./TemporalLayer-YoR144NV.js";import{y as tt}from"./ExportImageParameters-DWt4-sUL.js";import{t as rt}from"./imageBitmapUtils-DkaBBf2M.js";import{e as w}from"./sublayerUtils-B8JaGme3.js";import{t as et}from"./versionUtils-Dr1dBWld.js";import{c as it}from"./ElevationInfo-7Ug8ElGs.js";import{a as O}from"./timeZoneUtils-Cef7SfoB.js";import{A as f}from"./interfaces-CL2NbQte.js";import"./asyncUtils-CmphLL3n.js";import"./Version-BR-Ucixf.js";import"./portalItemUtils-CHuQGePU.js";import"./projectionUtils-BdqPecQc.js";import"./CollectionFlattener-kjXuGTXg.js";import"./PopupTemplate-B09IYibB.js";import"./fieldUtils-z3GG2R-H.js";import"./typeUtils-mxDsOnhk.js";import"./QueryTask-DTq4za05.js";import"./infoFor3D-dHKPbXlj.js";import"./Query-Dp8boimB.js";import"./jsonUtils-Cc67rW5Z.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";import"./utils-C73sopP7.js";import"./executeForIds-Bmt36WMa.js";import"./query-BK4ukVuP.js";import"./normalizeUtils-BS0bJnzn.js";import"./normalizeUtilsCommon-Ca72SEzL.js";import"./utils-UVgDzRJn.js";import"./pbfQueryUtils-G12Ca3sG.js";import"./pbf-CS5_6Vtc.js";import"./memoryEstimations-BG_NSMOj.js";import"./OptimizedFeature-C57xHwXW.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-yLGROW-s.js";import"./executeQueryJSON-C4FbUfhf.js";import"./FeatureSet-CZLo56w_.js";import"./Graphic-q_7OAYHf.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Buir9u-w.js";import"./SimpleMarkerSymbol-Drowg4jp.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-DNlIzH5i.js";import"./TextSymbol-keZwKiPd.js";import"./PictureMarkerSymbol-DlgeV3xL.js";import"./featureConversionUtils-scwmf_ir.js";import"./OrderedLayer-DcSF3ste.js";import"./OrderByInfo-CtU2L4kd.js";import"./labelingInfo-CkSgsIBo.js";import"./uuid-Cl5lrJ4c.js";import"./layerUtils-CFmFO8Du.js";import"./SimpleRenderer-Fz8G_PFF.js";import"./commonProperties-CEA2GgpB.js";import"./colorRamps-BmQEv1lz.js";import"./ColorStop-DY3WB4ha.js";import"./visualVariableUtils-DciVTowe.js";import"./lengthUtils-CrwfL9_h.js";import"./jsonUtils-MHL9p1Rq.js";import"./defaults3D-CE2uGgSa.js";import"./defaults-CSNv9gRz.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-CBLY0uWW.js";import"./diffUtils-C5CsICXC.js";import"./RendererLegendOptions-DWy2dLCX.js";import"./styleUtils-D7bnZHs6.js";import"./NormalizationBinParametersMixin-DdJue4AE.js";import"./labelUtils-BoctouOq.js";import"./FeatureType-BPPh_J9c.js";import"./FeatureTemplate-dMEKh0VK.js";import"./FieldsIndex-BTwzr3dJ.js";import"./UnknownTimeZone-CpPKXuRf.js";import"./LayerFloorInfo-cJezV6PW.js";import"./Relationship-C8higR9l.js";import"./serviceCapabilitiesUtils-DtEhtOqW.js";import"./typeUtils-cqQ4KuGR.js";import"./ClassBreaksRenderer-zodgNWUT.js";import"./LRUCache-eBEVKbNU.js";import"./MemCache-CUhFgUMJ.js";import"./DictionaryScriptEvaluator-B-exTvTE.js";import"./ArcadeExpression-u2IaIuRW.js";import"./TimeOnly-YXxQ25V6.js";import"./enum-DaKdEk_o.js";import"./utils-DrbBeUzW.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./heatmapUtils-D0hGWZT9.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./popupUtils-aSReiMof.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-CO8m00ps.js";import"./parser-BgHAYnRY.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CEszlm-2.js";import"./PortalItem-Dn4oT_Gd.js";import"./TimeInfo-Bt4YU_aA.js";import"./floorFilterUtils-DZ5C6FQv.js";let i=class extends H(Y(X(z(W(G(B(K(N(Q(k(Z(q)))))))))))){constructor(...t){super(...t),this._exportImageParameters=new tt({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new it({mode:"on-the-ground"}),this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null,this._debouncedSaveOperations=E(async(e,m,r)=>{const{save:a,saveAs:s}=await $(()=>import("./mapImageLayerUtils-CfgBf-6e.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]));switch(e){case f.SAVE:return a(this,m);case f.SAVE_AS:return s(this,r,m)}})}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},t).catch(P).then(()=>this._fetchService(e))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(t,e){const m=e.supportedImageFormatTypes;return m&&m.includes("PNG32")?"png32":"png24"}writeSublayers(t,e,m,r){var y,b,S;if(!this.loaded||!t)return;const a=t.slice().reverse().flatten(({sublayers:n})=>n&&n.toArray().reverse()).toArray();let s=!1;const h=x(r.origin);let d;if((y=this.capabilities)!=null&&y.operations.supportsExportMap&&((S=(b=this.capabilities)==null?void 0:b.exportMap)!=null&&S.supportsDynamicLayers)){if(h===g.PORTAL_ITEM){const n=this.createSublayersForOrigin("service").sublayers;s=w(a,n,g.SERVICE)}else if(h>g.PORTAL_ITEM){const n=this.createSublayersForOrigin("portal-item");s=w(a,n.sublayers,x(n.origin)),d=n.originWithPartialOverrides}}const u=[],c={writeSublayerStructure:s,...r,minimumWritableOrigin:d};let l=s||this.hasVisibleLayersForOrigin(h);a.forEach(n=>{const _=n.write({},c);u.push(_),l=l||n.originOf("visible")==="user"}),u.some(n=>Object.keys(n).length>1)&&(e.layers=u),l&&(e.visibleLayers=a.filter(n=>n.visible).map(n=>n.id))}createExportImageParameters(t,e,m,r){const a=(r==null?void 0:r.pixelRatio)||1;t&&this.version>=10&&(t=t.clone().shiftCentralMeridian()),this._exportImageParameters.floors=(r==null?void 0:r.floors)??null,this._exportImageParameters.scale=J({extent:t,width:e})*a;const s=this._exportImageParameters.toJSON(),h=!(r!=null&&r.rotation)||this.version<10.3?{}:{rotation:-r.rotation},d=t==null?void 0:t.spatialReference,u=T(d);s.dpi*=a;const c={};if(r!=null&&r.timeExtent){const{start:l,end:y}=r.timeExtent.toJSON();c.time=l&&y&&l===y?""+l:`${l??"null"},${y??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return{bbox:t?t.xmin+","+t.ymin+","+t.xmax+","+t.ymax:void 0,bboxSR:u,imageSR:u,size:e+","+m,...s,...h,...c}}async fetchImage(t,e,m,r){const{data:a}=await this._fetchImage("image",t,e,m,r);return a}async fetchImageBitmap(t,e,m,r){const{data:a,url:s}=await this._fetchImage("blob",t,e,m,r);return rt(a,s,r==null?void 0:r.signal)}async fetchRecomputedExtents(t={}){const e={...t,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:m}=await v(this.url,e),{extent:r,fullExtent:a,timeExtent:s}=m,h=r||a;return{fullExtent:h&&A.fromJSON(h),timeExtent:s&&U.fromJSON({start:s[0],end:s[1]})}}loadAll(){return V(this,t=>{t(this.allSublayers),t(this.subtables)})}async save(t){return this._debouncedSaveOperations(f.SAVE,t)}async saveAs(t,e){return this._debouncedSaveOperations(f.SAVE_AS,e,t)}serviceSupportsSpatialReference(t){return et(this,t)}async _fetchImage(t,e,m,r,a){var d,u,c;const s={responseType:t,signal:(a==null?void 0:a.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,m,r,a),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},h=this.parsedUrl.path+"/export";if(((d=s.query)==null?void 0:d.dynamicLayers)!=null&&!((c=(u=this.capabilities)==null?void 0:u.exportMap)!=null&&c.supportsDynamicLayers))throw new I("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:s.query});try{const{data:l}=await v(h,s);return{data:l,url:h}}catch(l){throw L(l)?l:new I("mapimagelayer:image-fetch-error",`Unable to load image: ${h}`,{error:l})}}async _fetchService(t){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:e,ssl:m}=await v(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:t});m&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=e,this.read(e,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(t){var e;return!(t==null||!((e=this.sublayersSourceJSON[t])!=null&&e.visibleLayers))}};o([p(O("dateFieldsTimeReference"))],i.prototype,"dateFieldsTimeZone",void 0),o([p({type:Boolean})],i.prototype,"datesInUnknownTimezone",void 0),o([p()],i.prototype,"dpi",void 0),o([p()],i.prototype,"elevationInfo",void 0),o([p()],i.prototype,"gdbVersion",void 0),o([p()],i.prototype,"imageFormat",void 0),o([M("imageFormat",["supportedImageFormatTypes"])],i.prototype,"readImageFormat",null),o([p({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],i.prototype,"imageMaxHeight",void 0),o([p({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],i.prototype,"imageMaxWidth",void 0),o([p()],i.prototype,"imageTransparency",void 0),o([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),o([p({json:{read:!1,write:!1}})],i.prototype,"labelsVisible",void 0),o([p({type:["ArcGISMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),o([p({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),o([p(O("preferredTimeReference"))],i.prototype,"preferredTimeZone",void 0),o([p()],i.prototype,"sourceJSON",void 0),o([p({json:{write:{ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),o([F("sublayers",{layers:{type:[D]},visibleLayers:{type:[R]}})],i.prototype,"writeSublayers",null),o([p({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],i.prototype,"listMode",void 0),o([p({json:{read:!1},readOnly:!0,value:"map-image"})],i.prototype,"type",void 0),o([p(C)],i.prototype,"url",void 0),i=o([j("esri.layers.MapImageLayer")],i);const me=i;export{me as default};
