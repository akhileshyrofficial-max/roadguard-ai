import{a as p,b as c,i as y,c as u,m as w,d as g}from"./Identifiable-BjM0PfdN.js";import{r as I,n as f}from"./imageUtils-CXZF7IG-.js";import{S,u as T}from"./LayerView-CLiTpaAu.js";import{h as V,p as v,r as x}from"./enums-BuAlJCBy.js";import{e as d}from"./TileKey-DR2srngJ.js";import{i as M}from"./RefreshableLayerView-CcWSvX7t.js";import{g as q}from"./Scheduler-COHy2lsX.js";import"./index-CVvIVqY1.js";import"./MapView-XXhq0wAO.js";import"./Cyclical-B0bcmwRe.js";import"./jsonUtils-DBuABSQZ.js";import"./typeUtils-U-Zf11cK.js";import"./CollectionFlattener-CiW0r4Pq.js";import"./workers-BNUpPbJD.js";import"./Queue-DILFUEQB.js";import"./intl-ByqrfC_d.js";import"./number-CsIuR4Me.js";import"./projectionUtils-D3_kHwH-.js";import"./TileInfo-gIGeOzNG.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-D4gVuCa_.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-DdU5IX8L.js";import"./asyncUtils-zc5DpkIL.js";import"./signal-CHoLd7Dm.js";import"./Map-C7AlwcQg.js";import"./Basemap-DEy_TBwO.js";import"./loadAll-tu8QdrIx.js";import"./PortalItem-5OKFVWCx.js";import"./writeUtils-DJnvrJq1.js";import"./layerUtils-CmDKJw7q.js";import"./persistable-Dy9UTZKT.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-B5tMzp3X.js";import"./PolygonCollection-CkOPuE2h.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-C8ai-EIY.js";import"./common-DQOJ18NT.js";import"./TablesMixin-N_koq_xq.js";import"./Layer-CUjb8Y3m.js";import"./GraphicsCollection-B9Sj62PJ.js";import"./Graphic-C2Bnzy89.js";import"./PopupTemplate-CF36_3mn.js";import"./fieldUtils-Br-fPSxS.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-CP9PJ8Sp.js";import"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-BrXqvn3i.js";import"./TextSymbol-DPyc43q3.js";import"./PictureMarkerSymbol-DOPylmLK.js";import"./HeightModelInfo-BaIW4m76.js";import"./timeZoneUtils-DMYcWBGI.js";import"./ReactiveMap-sVzP5DGX.js";import"./Query-duJofNa2.js";import"./Field-FVkerAtx.js";import"./fieldType-ClovGbuQ.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./normalizeUtils-DfEBCyY7.js";import"./normalizeUtilsCommon-Bp_cDVNc.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./vec32-rHWgUfNj.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-I7zBxmlP.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-CKvAsRxn.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-CWer4Z2d.js";import"./BitmapTechnique-DlfexCfL.js";import"./Container-Dh4YuLhU.js";import"./parser-BAKViB6V.js";import"./GraphShaderModule-vUIflZOb.js";import"./FramebufferObject-DxGXUHGJ.js";import"./ProgramTemplate-BJvNm4_p.js";import"./memoryEstimations-m6Z1UQ7X.js";import"./ShaderBuilder-CVhDmvmz.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-CFPo0AVB.js";import"./bitmapUtils-Mvsl7uVV.js";import"./WGLContainer-BfNvqaHf.js";import"./Utils-C7F0koJ1.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4LQ4gTA.js";import"./enums-BPiq_WIC.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CpHGKGMV.js";import"./OptimizedFeature-DwEGrxrA.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./TileContainer-D3qnVZFx.js";import"./layerViewUtils-BaHdVB92.js";import"./quickselect-QQC62dOK.js";const R=[0,0];let o=class extends M(I(S(T))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){var r;const{activeLayer:t}=this.layer,{tileMatrixSet:e}=t;if(e&&p((r=e.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference))return e;const i=this._getTileMatrixSetBySpatialReference(t);return i&&i.id!==t.tileMatrixSetId?(t.tileMatrixSetId=i.id,i):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){var e;const t=(e=this.tileMatrixSet)==null?void 0:e.tileInfo;t&&(this._tileInfoView=new V(t),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:16,process:(i,r)=>this.fetchTile(i,r),scheduler:this.scheduler,priority:q.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new x({cachePolicy:"keep",resampling:!0,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>{var i,r;return[(r=(i=this.layer)==null?void 0:i.activeLayer)==null?void 0:r.styleId,this.tileMatrixSet]},()=>this.doRefresh())),super.attach())}detach(){var t,e;super.detach(),(t=this._tileStrategy)==null||t.destroy(),(e=this._fetchQueue)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return((e=this.layer.activeLayer.tileMatrixSets)==null?void 0:e.some(i=>{var r;return p((r=i.tileInfo)==null?void 0:r.spatialReference,t)}))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(R,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:m=0}=e;if(!i)return this._fetchImage(t,r);const s=new d(0,0,0,0);let l;try{await i.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),l=await this._fetchImage(s,r)}catch(a){if(c(a))throw a;if(m<3){const h=this._tileInfoView.getTileParentId(t.id);if(h){const n=new d(h),_=await this.fetchTile(n,{...e,resamplingLevel:m+1});return f(this._tileInfoView,_,n,t)}}throw a}return f(this._tileInfoView,l,s,t)}canResume(){const t=super.canResume();return t&&this.tileMatrixSet!==null}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){c(e)||y.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}_getTileMatrixSetBySpatialReference(t){var e;return(e=t.tileMatrixSets)==null?void 0:e.find(i=>{var r;return p((r=i.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference)})}};u([w({readOnly:!0})],o.prototype,"tileMatrixSet",null),o=u([g("esri.views.2d.layers.WMTSLayerView2D")],o);const ve=o;export{ve as default};
