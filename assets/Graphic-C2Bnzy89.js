import{ad as m,T as y,ae as f,af as c,i as b,ag as d,g as u,c as s,m as o,d as v}from"./Identifiable-BjM0PfdN.js";import{q as _}from"./PopupTemplate-CF36_3mn.js";import{f as g}from"./jsonUtils-DBuABSQZ.js";import{l as T}from"./typeUtils-U-Zf11cK.js";import{i as M}from"./createFeatureId-BiB9j2WD.js";import{x}from"./typeUtils-CP9PJ8Sp.js";import"./index-CVvIVqY1.js";import"./fieldUtils-Br-fPSxS.js";import"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-BrXqvn3i.js";import"./TextSymbol-DPyc43q3.js";import"./PictureMarkerSymbol-DOPylmLK.js";var p;function L(a){if(!a)return null;const e={};for(const t in a){const i=g(a[t]);i&&(e[t]=i)}return Object.keys(e).length!==0?e:null}function G(a){if(a==null)return null;const e={};for(const t in a){const i=a[t];i&&(e[t]=i.toJSON())}return Object.keys(e).length!==0?e:null}var l;let r=(l=class extends m.ClonableMixin(y){constructor(e){super(e),this.isAggregate=!1,this.layer=null,this.origin=null,this.sourceLayer=null,this._version=0,Object.defineProperty(this,"uid",{value:f(),configurable:!0}),Object.defineProperty(this,"_lastMeshTransform",{value:{},configurable:!0,writable:!0,enumerable:!1}),arguments.length>1&&c(b.getLogger(this),"Graphic",{version:"4.30"})}initialize(){this._watchMeshGeometryChanges()}set aggregateGeometries(e){const t=this._get("aggregateGeometries");JSON.stringify(t)!==JSON.stringify(e)&&this._set("aggregateGeometries",e)}set attributes(e){const t=this._get("attributes");t!==e&&(this._set("attributes",e),this._notifyLayer("attributes",t,e))}set geometry(e){const t=this._get("geometry");t!==e&&(this._set("geometry",e),(e==null?void 0:e.type)!=="mesh"&&this._notifyLayer("geometry",t,e))}set popupTemplate(e){const t=this._get("popupTemplate");t!==e&&(this._set("popupTemplate",e),this._notifyLayer("popupTemplate",t,e))}set symbol(e){const t=this._get("symbol");t!==e&&(this._set("symbol",e),this._notifyLayer("symbol",t,e))}get version(){return this._version}set visible(e){const t=this._get("visible");t!==e&&(this._set("visible",e),this._notifyLayer("visible",t,e))}cloneShallow(){return new p({aggregateGeometries:this.aggregateGeometries,attributes:this.attributes,geometry:this.geometry,isAggregate:this.isAggregate,layer:this.layer,popupTemplate:this.popupTemplate,sourceLayer:this.sourceLayer,symbol:this.symbol,visible:this.visible,origin:this.origin})}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.origin&&"layer"in this.origin?this.origin.layer:null;for(const i of[t,this.sourceLayer,this.layer])if(i){if("popupTemplate"in i&&i.popupTemplate)return i.popupTemplate;if(e&&"defaultPopupTemplate"in i&&i.defaultPopupTemplate!=null)return i.defaultPopupTemplate}return null}getAttribute(e){var t;return(t=this.attributes)==null?void 0:t[e]}setAttribute(e,t){if(this.attributes){const i=this.getAttribute(e);this.attributes[e]=t,this._notifyLayer("attributes",i,t,e)}else this.attributes={[e]:t}}getObjectId(){const e=this.sourceLayer??this.layer;return e?M(this,e):null}getGlobalId(){const e=this.sourceLayer??this.layer;return e&&"globalIdField"in e&&e.globalIdField?this.getAttribute(e.globalIdField):null}toJSON(){var e;return{aggregateGeometries:G(this.aggregateGeometries),geometry:this.geometry!=null?this.geometry.toJSON():null,symbol:this.symbol!=null?this.symbol.toJSON():null,attributes:d(this.attributes)?this.attributes.toJSON():{...this.attributes},popupTemplate:((e=this.popupTemplate)==null?void 0:e.toJSON())??null}}notifyMeshTransformChanged(e={}){const{geometry:t}=this;if((t==null?void 0:t.type)==="mesh"){const i={origin:t.origin,transform:t.transform};this._notifyLayer("origin-transform",i,i,e.action)}}_notifyLayer(e,t,i,h){if(this._version++,!this.layer||!("graphicChanged"in this.layer))return;const n={graphic:this,property:e,oldValue:t,newValue:i};e==="origin-transform"&&(n.action=h),e==="attributes"&&(n.attributeName=h),this.layer.graphicChanged(n)}_watchMeshGeometryChanges(){this.addHandles([u(()=>{var e,t;return((e=this.geometry)==null?void 0:e.type)==="mesh"&&this.geometry.vertexSpace.origin?{localMatrix:(t=this.geometry.transform)==null?void 0:t.localMatrix,origin:this.geometry.vertexSpace.origin}:void 0},({localMatrix:e,origin:t})=>{this._lastMeshTransform.localMatrix===e&&this._lastMeshTransform.origin===t||(this._lastMeshTransform.localMatrix=e,this._lastMeshTransform.origin=t,this.notifyMeshTransformChanged())}),u(()=>{var e;return((e=this.geometry)==null?void 0:e.type)==="mesh"?{vertexAttributes:this.geometry.vertexAttributes}:void 0},()=>{var t;const e=this.geometry;(e==null?void 0:e.type)==="mesh"&&e.vertexSpace.origin?(this._lastMeshTransform.localMatrix=(t=e.transform)==null?void 0:t.localMatrix,this._lastMeshTransform.origin=e.vertexSpace.origin):(this._lastMeshTransform.localMatrix=void 0,this._lastMeshTransform.origin=void 0),this._notifyLayer("geometry",this.geometry,this.geometry)},{equals:(e,t)=>e===t,sync:!0})])}},p=l,l);s([o({value:null,json:{read:L}})],r.prototype,"aggregateGeometries",null),s([o({value:null})],r.prototype,"attributes",null),s([o({value:null,types:T,json:{read:g}})],r.prototype,"geometry",null),s([o({type:Boolean})],r.prototype,"isAggregate",void 0),s([o({clonable:!1})],r.prototype,"layer",void 0),s([o({clonable:"reference"})],r.prototype,"origin",void 0),s([o({type:_,value:null})],r.prototype,"popupTemplate",null),s([o({clonable:"reference"})],r.prototype,"sourceLayer",void 0),s([o({value:null,types:x})],r.prototype,"symbol",null),s([o({clonable:!1,json:{read:!1,write:!1}})],r.prototype,"_version",void 0),s([o({type:Boolean,value:!0})],r.prototype,"visible",null),r=p=s([v("esri.Graphic")],r);export{r as default};
