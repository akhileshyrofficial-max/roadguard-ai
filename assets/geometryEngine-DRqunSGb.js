import{cP as n,b0 as d,al as p}from"./Identifiable-_3rFZ1o6.js";import{G as t}from"./geometryEngineBase-DXq9NeSb.js";import{hydratedAdapter as i}from"./hydrated-HZ1o-QlP.js";import"./index-BEHHhRxI.js";import"./_commonjsHelpers-DCkdB7M8.js";function a(e){const r=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return r?d(p,r):p.WGS84}function x(e){return t.extendedSpatialReferenceInfo(e)}function S(e,r){return n(e),t.clip(i,a(e),e,r)}function y(e,r){return n(e),t.cut(i,a(e),e,r)}function A(e,r){return n(e),n(r),t.contains(i,a(e),e,r)}function D(e,r){return n(e),n(r),t.crosses(i,a(e),e,r)}function L(e,r,s){return n(e),n(r),t.distance(i,a(e),e,r,s)}function T(e,r){return n(e),n(r),t.equals(i,a(e),e,r)}function V(e,r){return n(e),n(r),t.intersects(i,a(e),e,r)}function v(e,r){return n(e),n(r),t.touches(i,a(e),e,r)}function z(e,r){return n(e),n(r),t.within(i,a(e),e,r)}function H(e,r){return n(e),n(r),t.disjoint(i,a(e),e,r)}function b(e,r){return n(e),n(r),t.overlaps(i,a(e),e,r)}function I(e,r,s){return n(e),n(r),t.relate(i,a(e),e,r,s)}function J(e){return n(e),t.isSimple(i,a(e),e)}function N(e){return n(e),t.simplify(i,a(e),e)}function O(e,r=!1){return t.convexHull(i,a(e),e,r)}function P(e,r){return n(r),t.difference(i,a(e),e,r)}function j(e,r){return n(r),t.symmetricDifference(i,a(e),e,r)}function q(e,r){return n(r),t.intersect(i,a(e),e,r)}function B(e){return t.union(i,a(e),e)}function C(e,r,s,c,o,f){return t.offset(i,a(e),e,r,s,c,o,f)}function E(e,r,s,c=!1){return t.buffer(i,a(e),e,r,s,c)}function G(e,r,s,c,o,f){return t.geodesicBuffer(i,a(e),e,r,s,c,o,f)}function W(e,r,s=!0){return n(e),t.nearestCoordinate(i,a(e),e,r,s)}function k(e,r){return n(e),t.nearestVertex(i,a(e),e,r)}function F(e,r,s,c){return n(e),t.nearestVertices(i,a(e),e,r,s,c)}function l(e){var r;return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?((r=e.extent)==null?void 0:r.center)??null:null}function K(e,r,s){if(e==null)throw new u;const c=e.spatialReference;if((s=s??l(e))==null)throw new u;const o=e.constructor.fromJSON(t.rotate(e,r,s));return o.spatialReference=c,o}function M(e,r){if(e==null)throw new u;const s=e.spatialReference;if((r=r??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.flipHorizontal(e,r));return c.spatialReference=s,c}function Q(e,r){if(e==null)throw new u;const s=e.spatialReference;if((r=r??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.flipVertical(e,r));return c.spatialReference=s,c}function U(e,r,s,c){return n(e),t.generalize(i,a(e),e,r,s,c)}function X(e,r,s){return n(e),t.densify(i,a(e),e,r,s)}function Y(e,r,s,c=0){return n(e),t.geodesicDensify(i,a(e),e,r,s,c)}function Z(e,r){return n(e),t.planarArea(i,a(e),e,r)}function _(e,r){return n(e),t.planarLength(i,a(e),e,r)}function $(e,r,s){return n(e),t.geodesicArea(i,a(e),e,r,s)}function ee(e,r,s){return n(e),t.geodesicLength(i,a(e),e,r,s)}function re(e,r){return t.intersectLinesToPoints(i,a(e),e,r)}function te(e,r){t.changeDefaultSpatialReferenceTolerance(e,r)}function ne(e){t.clearDefaultSpatialReferenceTolerance(e)}class u extends Error{constructor(){super("Illegal Argument Exception")}}export{E as buffer,te as changeDefaultSpatialReferenceTolerance,ne as clearDefaultSpatialReferenceTolerance,S as clip,A as contains,O as convexHull,D as crosses,y as cut,X as densify,P as difference,H as disjoint,L as distance,T as equals,x as extendedSpatialReferenceInfo,M as flipHorizontal,Q as flipVertical,U as generalize,$ as geodesicArea,G as geodesicBuffer,Y as geodesicDensify,ee as geodesicLength,q as intersect,re as intersectLinesToPoints,V as intersects,J as isSimple,W as nearestCoordinate,k as nearestVertex,F as nearestVertices,C as offset,b as overlaps,Z as planarArea,_ as planarLength,I as relate,K as rotate,N as simplify,j as symmetricDifference,v as touches,B as union,z as within};
