const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/RouteLayerInteraction-DhT-tUlj.js","assets/Identifiable-B58w9FD1.js","assets/index-VFfT8Aji.js","assets/UpdatingHandles-Lv1GUel8.js","assets/GraphicsLayer-DiGOhhuQ.js","assets/GraphicsCollection-CixPPU0K.js","assets/Graphic-sBrqQAPW.js","assets/PopupTemplate-D_WeQBNh.js","assets/fieldUtils-5LubkA3t.js","assets/jsonUtils-rvWrjUVI.js","assets/typeUtils-BD6Rtzmx.js","assets/createFeatureId-BiB9j2WD.js","assets/typeUtils-Du36Z1Jr.js","assets/SimpleMarkerSymbol-B18xir4G.js","assets/screenUtils-aQeO9QTD.js","assets/aaBoundingBox-CGMzNzJN.js","assets/TextSymbol-C7i9ol-5.js","assets/PictureMarkerSymbol-D6pzvUP4.js","assets/Layer-C63inyUN.js","assets/BlendLayer-ZjS29wea.js","assets/layerContainerType-C5CzMsLd.js","assets/jsonUtils-DI0kf7Dd.js","assets/parser-NZ6dFu80.js","assets/mat4f32-Djp3mnm5.js","assets/mat4-CggL8WYf.js","assets/common-DQOJ18NT.js","assets/ScaleRangeLayer-Ci7jgVw5.js","assets/ElevationInfo-0ccmO6of.js","assets/lengthUtils-DEvA7X52.js","assets/Stop-BWzFXSEc.js","assets/networkEnums-BDHMASSX.js","assets/projectionUtils-DsK_8mH5.js","assets/layerUtils-CAMu1s-2.js","assets/elevationInfoUtils-BpDJq1uD.js","assets/Map-BQwbVliJ.js","assets/Basemap-BLSYwfav.js","assets/loadAll-CbqpgDCk.js","assets/asyncUtils-C5b0g4Vr.js","assets/PortalItem-DLsR4Y2a.js","assets/number-kTr8sdcN.js","assets/intl-BHHnlw1J.js","assets/writeUtils-Bje94ctQ.js","assets/CollectionFlattener-DpJZcuE9.js","assets/uuid-Cl5lrJ4c.js","assets/persistable-glrbGfu8.js","assets/MD5-C9MwAd2G.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/resourceExtension-CXue4rJ6.js","assets/PolygonCollection-DoAtzYfB.js","assets/TablesMixin-CnCDLfmO.js","assets/MapView-xTo1x6Jl.js","assets/Cyclical-SUfr0Hlv.js","assets/workers-BRuHQO5o.js","assets/Queue-CM5__kwh.js","assets/TileInfo-D4DTS484.js","assets/TileKey-DZd6gJy7.js","assets/jsxFactory-MlcfH8Vy.js","assets/sanitizerUtils-CJlLEeXg.js","assets/jsxFactory-CQED0rIl.css","assets/signal-Cxu9Z1Kf.js","assets/HeightModelInfo-DBDBaZ2u.js","assets/timeZoneUtils-DlgpSZrP.js","assets/ReactiveMap-D39lG9XE.js","assets/Query-B1Zd9wiX.js","assets/Field-BoWr0HZE.js","assets/fieldType-CgljAswg.js","assets/ViewingMode-Chk7YAAL.js","assets/vec2-ChnYg_BJ.js","assets/vec2f64-Cgb6qxNH.js","assets/enums-oVqQqnoy.js","assets/TileKey-DZRgo92L.js","assets/quickselect-QQC62dOK.js","assets/normalizeUtils-DiYDtdl8.js","assets/normalizeUtilsCommon-BcGwSELE.js","assets/utils-DM3VuI_N.js","assets/utils-Kw6dbpdX.js","assets/mat3-CruJiiUv.js","assets/vec2f32-CaVKkSa6.js","assets/Scheduler-BH9l6DUT.js","assets/vec32-BBi6eWk8.js","assets/unitBezier-B1N-tmtC.js","assets/definitions-CASyCajO.js","assets/enums-UBzvFP7O.js","assets/Texture-BXXxnW90.js","assets/getDataTypeBytes-D2DiHx_d.js","assets/imageUtils-CcEg-3Il.js","assets/capabilities-Cggz07g5.js","assets/ILyr3DWasmPerSceneView-CIC-HPGZ.js","assets/Version-B0YYd6Ho.js","assets/hitTestSelectUtils-ByTX4qSK.js","assets/quantityUtils-CebuAsVX.js","assets/projectVectorToVector-_cm4joq-.js","assets/projectPointToVector-DXXhVA1_.js","assets/geodesicUtils-aAgfbhCp.js","assets/vec42-CKs01hkn.js","assets/vec4f64-DPb6J-GU.js","assets/plane-C4pzHMdp.js","assets/vectorStacks-BEpDSRxH.js","assets/mat3f64-B5o_lm6j.js","assets/mat4f64-q_b6UJoq.js","assets/quatf64-aQ5IuZRd.js","assets/sphere-BTK9a7ED.js","assets/spatialReferenceEllipsoidUtils-U_tEFhD2.js","assets/geodeticLengthOperator-DnIP1hCn.js","assets/geodeticCurveType-CirnHLSB.js","assets/earcut-D9gy186-.js","assets/triangle-BHW4KDad.js","assets/lineSegment-D4GoMluZ.js"])))=>i.map(i=>d[i]);
import{_ as g}from"./index-VFfT8Aji.js";import{V as c,l as p,bC as _,f as w,L as l,e as u,c as a,m as n,d as y}from"./Identifiable-B58w9FD1.js";import{l as f}from"./CollectionFlattener-DpJZcuE9.js";import{c as v,a as I,S as k,h as M,d as F,f as V,b as G}from"./Stop-BWzFXSEc.js";import{S as b,u as H}from"./LayerView-CflW_wQo.js";import{t as P}from"./GraphicContainer-B4ixlDiW.js";import{O as C}from"./GraphicsView2D-CyykMSq1.js";import"./Graphic-sBrqQAPW.js";import"./PopupTemplate-D_WeQBNh.js";import"./fieldUtils-5LubkA3t.js";import"./jsonUtils-rvWrjUVI.js";import"./typeUtils-BD6Rtzmx.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Du36Z1Jr.js";import"./SimpleMarkerSymbol-B18xir4G.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-CGMzNzJN.js";import"./TextSymbol-C7i9ol-5.js";import"./PictureMarkerSymbol-D6pzvUP4.js";import"./networkEnums-BDHMASSX.js";import"./Container-BtHpY2XJ.js";import"./MapView-xTo1x6Jl.js";import"./Cyclical-SUfr0Hlv.js";import"./workers-BRuHQO5o.js";import"./Queue-CM5__kwh.js";import"./intl-BHHnlw1J.js";import"./number-kTr8sdcN.js";import"./projectionUtils-DsK_8mH5.js";import"./TileInfo-D4DTS484.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-MlcfH8Vy.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-Lv1GUel8.js";import"./asyncUtils-C5b0g4Vr.js";import"./signal-Cxu9Z1Kf.js";import"./Map-BQwbVliJ.js";import"./Basemap-BLSYwfav.js";import"./loadAll-CbqpgDCk.js";import"./PortalItem-DLsR4Y2a.js";import"./writeUtils-Bje94ctQ.js";import"./layerUtils-CAMu1s-2.js";import"./persistable-glrbGfu8.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-CXue4rJ6.js";import"./PolygonCollection-DoAtzYfB.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CggL8WYf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-CnCDLfmO.js";import"./Layer-C63inyUN.js";import"./GraphicsCollection-CixPPU0K.js";import"./HeightModelInfo-DBDBaZ2u.js";import"./timeZoneUtils-DlgpSZrP.js";import"./ReactiveMap-D39lG9XE.js";import"./Query-B1Zd9wiX.js";import"./Field-BoWr0HZE.js";import"./fieldType-CgljAswg.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./enums-oVqQqnoy.js";import"./TileKey-DZRgo92L.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-DiYDtdl8.js";import"./normalizeUtilsCommon-BcGwSELE.js";import"./utils-DM3VuI_N.js";import"./utils-Kw6dbpdX.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-BH9l6DUT.js";import"./vec32-BBi6eWk8.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-BXXxnW90.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-CcEg-3Il.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-B0YYd6Ho.js";import"./parser-NZ6dFu80.js";import"./layerViewUtils-CVH0822Q.js";import"./AGraphicContainer-vW2U5EY5.js";import"./TechniqueInstance-iE4wc1kQ.js";import"./UpdateTracking2D-F8JbgN_O.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DFf7-Rrh.js";import"./memoryEstimations-ugfznLe2.js";import"./GeometryUtils-BFpPfjYL.js";import"./enums-BPiq_WIC.js";import"./utils-BM8mKO1R.js";import"./defaultCIMValues-BrbaHf9c.js";import"./rasterizingUtils-D6OowsbP.js";import"./floatRGBA-BQ7jCumf.js";import"./Rect-CUzevAry.js";import"./Utils-BklDQzCT.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./defaults-CXADZSqg.js";import"./defaultsJSON-GKolV7NZ.js";import"./FramebufferObject-BSWRnN9p.js";import"./ProgramTemplate-Aje1Ud3y.js";import"./TileContainer-DxYIfJB1.js";import"./WGLContainer-BDoDnL5o.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4LQ4gTA.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-De1fR0uF.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-CPqIPZhd.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-DzKjOYuG.js";import"./ShaderBuilder-Zhirjag-.js";import"./BindType-BBwFZqyN.js";import"./utils-Dpt2n9Oo.js";import"./constants-BFLErLYb.js";import"./lengthUtils-DEvA7X52.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BAVhxohG.js";import"./FieldsIndex-B99JmYLE.js";import"./UnknownTimeZone-BdyuEDG6.js";import"./OverrideHelper-CbnVTnJ6.js";import"./colorUtils-eX73JdBW.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-Cc_hp5dd.js";import"./TimeOnly-CBUwkOTd.js";import"./enum-CyvfDIjS.js";import"./quantizationUtils-ooNzAwDD.js";import"./AttributeStore-BAuXUiNx.js";import"./labelUtils-XzqWkuAo.js";import"./diffUtils-jeIEfUBl.js";import"./queryUtils-DGFW-0sq.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dd2Mh6SO.js";import"./normalizeUtilsSync-Dp8hnQC6.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-0ecwCeN_.js";const L=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],h={graphic:null,property:null,oldValue:null,newValue:null};function d(t){return t instanceof v||t instanceof I||t instanceof k||t instanceof M||t instanceof F||t instanceof V||t instanceof G}function $(t){return c.isCollection(t)&&t.length&&d(t.at(0))}function O(t){return Array.isArray(t)&&t.length>0&&d(t[0])}const U=new Set(["default"]);let s=class extends b(H){constructor(){super(...arguments),this._graphics=new c,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map,this._interaction=null,this._loadInteractionPromise=null,this.interactive=!1}get _routeItems(){return new f({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new c([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.addHandles(p(()=>{const{interactive:t,suspended:i}=this;return{interactive:t,suspended:i}},({interactive:t,suspended:i})=>{const e=t&&!i;e&&this._getInteractionLoadPromise().then(r=>{r.enabled=this.interactive&&!this.suspended}),this._interaction&&(this._interaction.enabled=e)},_)),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),w)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){var t;this._destroyGraphicsView(),(t=this._interaction)!=null&&t.enabled&&(this._interaction.enabled=!1)}get selectedNetworkFeatures(){var t;return((t=this._interaction)==null?void 0:t.selectedNetworkFeatures)??null}async create(t){if(this.interactive)return(await this._getInteractionLoadPromise()).create(t)}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter(({popupTemplate:e})=>!!e)}highlight(t){let i;i=d(t)?[this._getNetworkFeatureUid(t)]:O(t)?t.map(r=>this._getNetworkFeatureUid(r)):$(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const e=i.filter(l);return e.length?(this._addHighlight(e),u(()=>this._removeHighlight(e))):u()}async hitTest(t,i){if(this.suspended)return null;const e=this._graphicsView.hitTest(t).filter(l).map(o=>this._networkGraphicMap.get(o));if(!e.length)return null;const{layer:r}=this;return e.reverse().map(o=>({type:"route",layer:r,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}remove(t){var i;(i=this._interaction)==null||i.remove(t)}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i);this._highlightIds.set(i,e+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),e=new P(t.featuresTilingScheme);this._graphicsView=new C({container:e,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(e),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return L.indexOf(i.type)}_getInteractionLoadPromise(){return this._loadInteractionPromise||(this._loadInteractionPromise=this._loadInteraction(),this._updatingHandles.addPromise(this._loadInteractionPromise)),this._loadInteractionPromise}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}async _loadInteraction(){const{layer:t,view:i}=this,{RouteLayerInteraction:e}=await g(async()=>{const{RouteLayerInteraction:r}=await import("./RouteLayerInteraction-DhT-tUlj.js").then(o=>o.R);return{RouteLayerInteraction:r}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107]));return this._interaction=new e({view:i,layer:t}),this._interaction}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i)-1;e===0?this._highlightIds.delete(i):this._highlightIds.set(i,e)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const e=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(e),e}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const e=this._createGraphic(i);return e.symbol==null?null:(this._networkFeatureMap.set(i,e),this._networkGraphicMap.set(e,i),e)}).filter(l));for(const i of t.added)this.addHandles([p(()=>i.geometry,(e,r)=>{this._updateGraphic(i,"geometry",e,r)}),p(()=>i.symbol,(e,r)=>{this._updateGraphic(i,"symbol",e,r)}),p(()=>i.popupTemplate,e=>{this._networkFeatureMap.has(i)&&(this._networkFeatureMap.get(i).popupTemplate=e)}),p(()=>i.toGraphic().attributes,e=>{this._networkFeatureMap.has(i)&&(this._networkFeatureMap.get(i).attributes=e)})],i);this._graphics.sort((i,e)=>this._getDrawOrder(i)-this._getDrawOrder(e))}}_updateGraphic(t,i,e,r){if(!this._networkFeatureMap.has(t)){const m=this._createGraphic(t);return this._networkFeatureMap.set(t,m),this._networkGraphicMap.set(m,t),void this._graphics.add(m)}const o=this._networkFeatureMap.get(t);o[i]=e,h.graphic=o,h.property=i,h.oldValue=r,h.newValue=e,this._graphicsView.graphicUpdateHandler(h)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=this._getHighlightBits(U.values());this._graphicsView.setHighlight(t.map(e=>({objectId:e,highlightFlags:i})))}};a([n()],s.prototype,"_graphics",void 0),a([n()],s.prototype,"_routeItems",null),a([n()],s.prototype,"_interaction",void 0),a([n()],s.prototype,"interactive",void 0),a([n({readOnly:!0})],s.prototype,"selectedNetworkFeatures",null),s=a([y("esri.views.2d.layers.RouteLayerView2D")],s);const de=s;export{de as default};
