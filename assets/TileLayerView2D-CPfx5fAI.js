import{e as u,a as w,b as l,D as y,i as I,c as n,m as f,d as T}from"./Identifiable-B58w9FD1.js";import{c as V}from"./GraphicsCollection-CixPPU0K.js";import"./colorUtils-eX73JdBW.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./floatRGBA-BQ7jCumf.js";import"./definitions-CASyCajO.js";import"./UpdateTracking2D-F8JbgN_O.js";import"./TextSymbol-C7i9ol-5.js";import"./GeometryUtils-BFpPfjYL.js";import"./vec2f32-CaVKkSa6.js";import"./defaults-CXADZSqg.js";import"./OverrideHelper-CbnVTnJ6.js";import"./Container-BtHpY2XJ.js";import{h as H,p as v,r as C}from"./enums-oVqQqnoy.js";import"./WGLContainer-BDoDnL5o.js";import"./enums-UBzvFP7O.js";import"./Texture-BXXxnW90.js";import"./Utils-BklDQzCT.js";import{c as q}from"./MapView-xTo1x6Jl.js";import"./StyleDefinition-C4LQ4gTA.js";import"./constants-B-jzO-JJ.js";import"./GridShader-CRGqkotN.js";import"./pbf-6MtXQ4A6.js";import"./TechniqueType-CFPo0AVB.js";import"./FramebufferObject-BSWRnN9p.js";import"./FeatureCommandQueue-CPqIPZhd.js";import"./PieChartMeshWriter-C44FlOdL.js";import"./constants-BFLErLYb.js";import"./aaBoundingBox-CGMzNzJN.js";import"./TimeOnly-CBUwkOTd.js";import"./UnknownTimeZone-BdyuEDG6.js";import"./fieldUtils-5LubkA3t.js";import"./renderState-vHoqBeQT.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-Ctz9l635.js";import{O as U}from"./GraphicsView2D-CyykMSq1.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import"./normalizeUtilsCommon-BcGwSELE.js";import"./asyncUtils-C5b0g4Vr.js";import"./UpdatingHandles-Lv1GUel8.js";import"./projectionUtils-DsK_8mH5.js";import{r as b,o as m,n as d}from"./imageUtils-COWOyOf0.js";import{S as P,u as Q}from"./LayerView-CflW_wQo.js";import{a as S}from"./HighlightGraphicContainer-B-CEhhdY.js";import{e as _}from"./TileKey-DZRgo92L.js";import{i as G}from"./RefreshableLayerView-AeLvL8d4.js";import{_ as L,P as k,i as F}from"./MapServiceLayerViewHelper-Dhb6rryo.js";import{r as z}from"./drapedUtils-DNFlom92.js";import{g as E}from"./Scheduler-BH9l6DUT.js";import"./index-VFfT8Aji.js";import"./Graphic-sBrqQAPW.js";import"./PopupTemplate-D_WeQBNh.js";import"./jsonUtils-rvWrjUVI.js";import"./typeUtils-BD6Rtzmx.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Du36Z1Jr.js";import"./SimpleMarkerSymbol-B18xir4G.js";import"./screenUtils-aQeO9QTD.js";import"./PictureMarkerSymbol-D6pzvUP4.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DFf7-Rrh.js";import"./memoryEstimations-ugfznLe2.js";import"./utils-BM8mKO1R.js";import"./rasterizingUtils-D6OowsbP.js";import"./vec2-ChnYg_BJ.js";import"./Rect-CUzevAry.js";import"./ReactiveMap-D39lG9XE.js";import"./defaultsJSON-GKolV7NZ.js";import"./FieldsIndex-B99JmYLE.js";import"./timeZoneUtils-DlgpSZrP.js";import"./ArcadeExpression-Cc_hp5dd.js";import"./quantizationUtils-ooNzAwDD.js";import"./parser-NZ6dFu80.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CggL8WYf.js";import"./Queue-CM5__kwh.js";import"./signal-Cxu9Z1Kf.js";import"./quickselect-QQC62dOK.js";import"./Query-B1Zd9wiX.js";import"./Field-BoWr0HZE.js";import"./fieldType-CgljAswg.js";import"./Layer-C63inyUN.js";import"./ProgramTemplate-Aje1Ud3y.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./mat3-CruJiiUv.js";import"./vec32-BBi6eWk8.js";import"./config-DHajyIwB.js";import"./vec2f64-Cgb6qxNH.js";import"./featureConversionUtils-De1fR0uF.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./Cyclical-SUfr0Hlv.js";import"./CollectionFlattener-DpJZcuE9.js";import"./workers-BRuHQO5o.js";import"./intl-BHHnlw1J.js";import"./number-kTr8sdcN.js";import"./TileInfo-D4DTS484.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-MlcfH8Vy.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./Map-BQwbVliJ.js";import"./Basemap-BLSYwfav.js";import"./loadAll-CbqpgDCk.js";import"./PortalItem-DLsR4Y2a.js";import"./writeUtils-Bje94ctQ.js";import"./layerUtils-CAMu1s-2.js";import"./persistable-glrbGfu8.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-CXue4rJ6.js";import"./PolygonCollection-DoAtzYfB.js";import"./TablesMixin-CnCDLfmO.js";import"./HeightModelInfo-DBDBaZ2u.js";import"./ViewingMode-Chk7YAAL.js";import"./normalizeUtils-DiYDtdl8.js";import"./utils-DM3VuI_N.js";import"./utils-Kw6dbpdX.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-CcEg-3Il.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-B0YYd6Ho.js";import"./GraphShaderModule-DzKjOYuG.js";import"./ShaderBuilder-Zhirjag-.js";import"./BindType-BBwFZqyN.js";import"./utils-Dpt2n9Oo.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-Dy812U4G.js";import"./lengthUtils-DEvA7X52.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BAVhxohG.js";import"./libtess-BhuA-Z5F.js";import"./enum-CyvfDIjS.js";import"./basicInterfaces-CZwQPxTp.js";import"./AttributeStore-BAuXUiNx.js";import"./labelUtils-XzqWkuAo.js";import"./diffUtils-jeIEfUBl.js";import"./queryUtils-DGFW-0sq.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dd2Mh6SO.js";import"./normalizeUtilsSync-Dp8hnQC6.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-0ecwCeN_.js";import"./BitmapTechnique-Bw30MuDR.js";import"./bitmapUtils-BOY5NsfD.js";import"./TileContainer-DxYIfJB1.js";import"./layerViewUtils-CVH0822Q.js";import"./AGraphicContainer-vW2U5EY5.js";import"./TechniqueInstance-iE4wc1kQ.js";import"./scaleUtils-BWXUbMYz.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-B4Q6FuWS.js";import"./popupUtils-DRI08sKd.js";const W=[0,0];let s=class extends G(b(P(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:E.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>z(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:r,property:h})=>e.graphicUpdateHandler({graphic:r,property:h}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=F(t);if(e.length===0)return u();const r=(i==null?void 0:i.name)??q;return this._addHighlightGraphics(e,r),u(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return w((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(h){if(l(h))throw h;if(!this.resampling)return m(this._tileInfoView.tileInfo.size);if(r<3){const o=this._tileInfoView.getTileParentId(t.id);if(o){const p=new _(o),a=await this._fetchTileWithoutTilemapCache(p,{...i,resamplingLevel:r+1});return d(this._tileInfoView,a,p,t)}}return m(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i,o=new _(0,0,0,0);let p,a=null;try{if(a=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),!this.resampling&&o.level!==t.level)return await y(i),m(this._tileInfoView.tileInfo.size);p=await this._fetchImage(o,r)}catch(c){if(l(c))throw c;if(this.resampling&&a==="unknown"&&h<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){o.set(g);try{p=await this._fetchTileWithTilemapCache(o,{...i,resamplingLevel:h+1})}catch{}}}}return p?this.resampling?d(this._tileInfoView,p,o,t):p:m(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],s.prototype,"resampling",null),n([f()],s.prototype,"tilemapCache",null),s=n([T("esri.views.2d.layers.TileLayerView2D")],s);const ze=s;export{ze as default};
