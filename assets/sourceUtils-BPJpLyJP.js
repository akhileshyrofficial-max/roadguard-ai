const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/geometryEngineJSON-CcgrjWgh.js","assets/geometryEngineBase-DXq9NeSb.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/json-Wa8cmqdu.js"])))=>i.map(i=>d[i]);
import{_ as f}from"./index-VFfT8Aji.js";import{n as d}from"./date-Ctp1FiBW.js";import{bY as c}from"./Identifiable-B58w9FD1.js";import{S as g,U as m,f as y,g as h,F as I,I as E}from"./fieldUtils-5LubkA3t.js";class S{constructor(e){this.description=e,this.code=null}}class T{constructor(e){this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error=new S(e)}}function a(t){return new T(t)}class _{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function b(t){return new _(t)}const u=new Set;function F(t,e,n,p=!1){u.clear();for(const s in n){const r=t.get(s);if(!r)continue;const i=w(r,n[s]);if(u.add(r.name),r&&(p||r.editable)){const l=g(r,i);if(l)return a(m(l,r,i));e[r.name]=i}}for(const s of t.requiredFields??[])if(!u.has(s.name))return a(`missing required field "${s.name}"`);return null}function w(t,e){let n=e;return h(t)&&typeof e=="string"?n=parseFloat(e):I(t)&&e!=null&&typeof e!="string"?n=String(e):E(t)&&typeof e=="string"&&(n=d(e)),y(n)}let o;function P(t,e){if(!t||!c(e))return t;if("rings"in t||"paths"in t){if(o==null)throw new TypeError("geometry engine not loaded");return o.simplify(e,t)}return t}async function A(){return o==null&&(o=await f(()=>import("./geometryEngineJSON-CcgrjWgh.js").then(t=>t.g),__vite__mapDeps([0,1,2,3]))),o}async function q(t,e){!c(t)||e!=="esriGeometryPolygon"&&e!=="esriGeometryPolyline"||await A()}const D={supportsAutoIntervalBin:!0,supportsFixedIntervalBin:!0,supportsFixedBoundariesBin:!0,supportsDateBin:!0,supportsStackBy:!0,supportsSplitBy:!0,supportsNormalization:!0,supportedStatisticTypes:["COUNT","SUM","AVG","VAR","STDDEV","MIN","MAX","PERCENTILE_CONT","PERCENTILE_DISC","CentroidAggregate","EnvelopeAggregate","ConvexHullAggregate"],supportedNormalizationTypes:["field","log","naturalLog","percentOfTotal","squareRoot"]};export{q as E,D as S,F as d,b as f,P as h,a as p};
