import{V as u,L as f,e as n,l as p,f as h,a6 as w,c as y,d as _}from"./Identifiable-_3rFZ1o6.js";import V from"./Graphic-q_7OAYHf.js";import{S as v,u as C}from"./LayerView-DyDwgwDB.js";import{t as c}from"./GraphicContainer-DMs6IM9M.js";import{O as g}from"./GraphicsView2D-BkBvRhzC.js";import"./index-BEHHhRxI.js";import"./PopupTemplate-B09IYibB.js";import"./fieldUtils-z3GG2R-H.js";import"./jsonUtils-Cc67rW5Z.js";import"./typeUtils-mxDsOnhk.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Buir9u-w.js";import"./SimpleMarkerSymbol-Drowg4jp.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-DNlIzH5i.js";import"./TextSymbol-keZwKiPd.js";import"./PictureMarkerSymbol-DlgeV3xL.js";import"./Container-CcJYSbbJ.js";import"./MapView-DvC1rydD.js";import"./Cyclical-C1_PpBfH.js";import"./CollectionFlattener-kjXuGTXg.js";import"./workers-BcCT7nhd.js";import"./Queue-CJjQn74K.js";import"./intl-Beb5GWXc.js";import"./number-7p_O6jwX.js";import"./projectionUtils-BdqPecQc.js";import"./TileInfo-CvSYzqJL.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BbJVeaDA.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-BZb3Zh99.js";import"./asyncUtils-CmphLL3n.js";import"./signal-R7pX2aet.js";import"./Map-BfsPAzzq.js";import"./Basemap-xdFWd_Ef.js";import"./loadAll-MI_JOpdU.js";import"./PortalItem-Dn4oT_Gd.js";import"./writeUtils-CFLt5Al1.js";import"./layerUtils-CFmFO8Du.js";import"./persistable-DdbzkEuJ.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-a1-4zqTB.js";import"./PolygonCollection-CMbOuNoO.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CEszlm-2.js";import"./common-DQOJ18NT.js";import"./TablesMixin-DOSIq3qh.js";import"./Layer--GugXUPW.js";import"./GraphicsCollection-csXasQht.js";import"./HeightModelInfo-C8sA4bKM.js";import"./timeZoneUtils-Cef7SfoB.js";import"./ReactiveMap-DptZZMoQ.js";import"./Query-Dp8boimB.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./enums-NCSMZWP1.js";import"./TileKey-upwcIO5W.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BS0bJnzn.js";import"./normalizeUtilsCommon-Ca72SEzL.js";import"./utils-C73sopP7.js";import"./utils-UVgDzRJn.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-DH2YvKGe.js";import"./vec32-soPbwaVZ.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-BILrrMzS.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-DN-q3Lg0.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-BR-Ucixf.js";import"./parser-BgHAYnRY.js";import"./layerViewUtils-CSVHLqOP.js";import"./AGraphicContainer-sL5vbjCA.js";import"./TechniqueInstance-DAQJyYqb.js";import"./UpdateTracking2D-D5YHt5xb.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-C57xHwXW.js";import"./memoryEstimations-BG_NSMOj.js";import"./GeometryUtils-CiPYWcEQ.js";import"./enums-BPiq_WIC.js";import"./utils-DrbBeUzW.js";import"./defaultCIMValues-BrbaHf9c.js";import"./rasterizingUtils-CdiTAUhT.js";import"./floatRGBA-xT4oRKt0.js";import"./Rect-CUzevAry.js";import"./Utils-BG5m93IY.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./defaults-CSNv9gRz.js";import"./defaultsJSON-GKolV7NZ.js";import"./FramebufferObject-Dg06wJiA.js";import"./ProgramTemplate-Dv_NJ-sZ.js";import"./TileContainer-C_diT5X9.js";import"./WGLContainer-CidQwXho.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4LQ4gTA.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-scwmf_ir.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-C3gIm0uk.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-B0iY7h0y.js";import"./ShaderBuilder-CT-EKmsJ.js";import"./BindType-BBwFZqyN.js";import"./utils-BLo0aQ8v.js";import"./constants-BFLErLYb.js";import"./lengthUtils-CrwfL9_h.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BZCvf8_s.js";import"./FieldsIndex-BTwzr3dJ.js";import"./UnknownTimeZone-CpPKXuRf.js";import"./OverrideHelper-_hwADhTN.js";import"./colorUtils-DQQagumJ.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-u2IaIuRW.js";import"./TimeOnly-YXxQ25V6.js";import"./enum-DaKdEk_o.js";import"./quantizationUtils-C8uJ5ebt.js";import"./AttributeStore-BDrrFxke.js";import"./labelUtils-BoctouOq.js";import"./diffUtils-C5CsICXC.js";import"./queryUtils-Cag0ceeo.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Btk7Sbvt.js";import"./normalizeUtilsSync-2v9P1_zl.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-D_C0Fb3K.js";const d="sublayers",a="layerView",H=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const s=this._graphicsViewsFeatureCollectionMap.get(t);for(const o of e)!o.popupTemplate&&s.popupTemplate&&(o.popupTemplate=s.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof V?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):u.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(f);return e!=null&&e.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const s=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:s});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.addHandles([p(()=>e.visible,m=>o.container.visible=m,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],a)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(w(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(a);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const s=new c(this.view.featuresTilingScheme);s.fadeTransitionEnabled=!0;const o=new g({view:r,graphics:e.graphics,requestUpdateCallback:t,container:s});this.addHandles([e.on("graphic-update",o.graphicUpdateHandler),p(()=>e.visible,m=>o.container.visible=m,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],a),this.container.addChild(o.container),i.push(o)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(H.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=y([_("esri.views.2d.layers.MapNotesLayerView2D")],l);const ir=l;export{ir as default};
