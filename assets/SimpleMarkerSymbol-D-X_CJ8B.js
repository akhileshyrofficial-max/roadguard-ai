import{T as N,aS as b,ar as $,c as t,m as r,ac as O,d as u,bn as f,ab as j,n as g,dK as V}from"./Identifiable-BjM0PfdN.js";import{o as c}from"./screenUtils-aQeO9QTD.js";const z=new $({esriSMS:"simple-marker",esriPMS:"picture-marker",esriSLS:"simple-line",esriSFS:"simple-fill",esriPFS:"picture-fill",esriTS:"text",esriSHD:"shield-label-symbol",PointSymbol3D:"point-3d",LineSymbol3D:"line-3d",PolygonSymbol3D:"polygon-3d",WebStyleSymbol:"web-style",MeshSymbol3D:"mesh-3d",LabelSymbol3D:"label-3d",CIMSymbolReference:"cim"});let P=0,y=class extends N{constructor(s){super(s),this.id="sym"+P++,this.type=null,this.color=new b([0,0,0,1])}readColor(s){return(s==null?void 0:s[0])!=null?[s[0],s[1],s[2],s[3]/255]:s}async collectRequiredFields(s,o){}hash(){return JSON.stringify(this.toJSON())}clone(){}};t([r({type:z.apiValues,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,writer:z.write,isRequired:!0}}})],y.prototype,"type",void 0),t([r({type:b,json:{write:{allowNull:!0}}})],y.prototype,"color",void 0),t([O("color")],y.prototype,"readColor",null),y=t([u("esri.symbols.Symbol")],y);const T=["begin","end","begin-end"],q=["arrow","circle","square","diamond","cross","x"];let S=class extends y{constructor(s){super(s),this.type="simple-line",this.width=.75}hash(){return`${this.type}.${this.width}`}};t([f({esriSLS:"simple-line"},{readOnly:!0})],S.prototype,"type",void 0),t([r({type:Number,cast:c,json:{write:!0}})],S.prototype,"width",void 0),S=t([u("esri.symbols.LineSymbol")],S);var k;let n=k=class extends N{constructor(e){super(e),this.placement="begin-end",this.type="line-marker",this.style="arrow"}writeStyle(e,s,o,i){s[o]=(i==null?void 0:i.origin)==="web-map"?"arrow":e}set color(e){this._set("color",e)}readColor(e){return(e==null?void 0:e[0])!=null?[e[0],e[1],e[2],e[3]/255]:e}writeColor(e,s,o,i){(i==null?void 0:i.origin)==="web-map"||(s[o]=e)}clone(){return new k({color:g(this.color),placement:this.placement,style:this.style})}hash(){var e;return`${this.placement}.${(e=this.color)==null?void 0:e.hash()}.${this.style}`}};t([r({type:["begin","end","begin-end"],json:{write:!0}})],n.prototype,"placement",void 0),t([f({"line-marker":"line-marker"},{readOnly:!0}),r({json:{origins:{"web-map":{write:!1}}}})],n.prototype,"type",void 0),t([r({type:q})],n.prototype,"style",void 0),t([j("style")],n.prototype,"writeStyle",null),t([r({type:b,value:null,json:{write:{allowNull:!0}}})],n.prototype,"color",null),t([O("color")],n.prototype,"readColor",null),t([j("color")],n.prototype,"writeColor",null),n=k=t([u("esri.symbols.LineSymbolMarker")],n);const K=n;var x;const v=new $({esriSLSSolid:"solid",esriSLSDash:"dash",esriSLSDot:"dot",esriSLSDashDot:"dash-dot",esriSLSDashDotDot:"long-dash-dot-dot",esriSLSNull:"none",esriSLSShortDash:"short-dash",esriSLSShortDot:"short-dot",esriSLSShortDashDot:"short-dash-dot",esriSLSShortDashDotDot:"short-dash-dot-dot",esriSLSLongDash:"long-dash",esriSLSLongDashDot:"long-dash-dot"});let l=x=class extends S{constructor(...e){super(...e),this.type="simple-line",this.style="solid",this.cap="round",this.join="round",this.marker=null,this.miterLimit=2}normalizeCtorArgs(e,s,o,i,p,F){if(e&&typeof e!="string")return e;const d={};return e!=null&&(d.style=e),s!=null&&(d.color=s),o!=null&&(d.width=c(o)),i!=null&&(d.cap=i),p!=null&&(d.join=p),F!=null&&(d.miterLimit=c(F)),d}clone(){var e;return new x({color:g(this.color),style:this.style,width:this.width,cap:this.cap,join:this.join,miterLimit:this.miterLimit,marker:(e=this.marker)==null?void 0:e.clone()})}hash(){var e,s;return`${super.hash()}.${(e=this.color)==null?void 0:e.hash()}.${this.style}.${this.cap}.${this.join}.${this.miterLimit}.${(s=this.marker)==null?void 0:s.hash()}`}};t([f({esriSLS:"simple-line"},{readOnly:!0})],l.prototype,"type",void 0),t([r({type:v.apiValues,json:{read:v.read,write:v.write}})],l.prototype,"style",void 0),t([r({type:["butt","round","square"],json:{write:{overridePolicy:(e,s,o)=>({enabled:e!=="round"&&(o==null?void 0:o.origin)==null})}}})],l.prototype,"cap",void 0),t([r({type:["miter","round","bevel"],json:{write:{overridePolicy:(e,s,o)=>({enabled:e!=="round"&&(o==null?void 0:o.origin)==null})}}})],l.prototype,"join",void 0),t([r({types:{key:"type",base:null,defaultKeyValue:"line-marker",typeMap:{"line-marker":K}},json:{write:!0,origins:{"web-scene":{write:!1}}}})],l.prototype,"marker",void 0),t([r({type:Number,json:{read:!1,write:!1}})],l.prototype,"miterLimit",void 0),l=x=t([u("esri.symbols.SimpleLineSymbol")],l);let w=class extends y{constructor(e){super(e),this.outline=null,this.type=null}hash(){var e;return`${this.type}.${(e=this.outline)==null?void 0:e.hash()}`}};t([r({types:{key:"type",base:null,defaultKeyValue:"simple-line",typeMap:{"simple-line":l}},json:{default:null,write:!0}})],w.prototype,"outline",void 0),t([r({type:["simple-fill","picture-fill"],readOnly:!0})],w.prototype,"type",void 0),w=t([u("esri.symbols.FillSymbol")],w);let h=class extends y{constructor(e){super(e),this.angle=0,this.type=null,this.xoffset=0,this.yoffset=0,this.size=9}hash(){return`${this.type}.${this.angle}.${this.size}.${this.xoffset}.${this.yoffset}`}};t([r({type:Number,json:{read:e=>e&&-1*e,write:(e,s)=>s.angle=e&&-1*e}})],h.prototype,"angle",void 0),t([r({type:["simple-marker","picture-marker"],readOnly:!0})],h.prototype,"type",void 0),t([r({type:Number,cast:c,json:{write:!0}})],h.prototype,"xoffset",void 0),t([r({type:Number,cast:c,json:{write:!0}})],h.prototype,"yoffset",void 0),t([r({cast:e=>e==="auto"?e:V(c(e)),json:{write:!0}})],h.prototype,"size",void 0),h=t([u("esri.symbols.MarkerSymbol")],h);var M;const L=new $({esriSFSSolid:"solid",esriSFSNull:"none",esriSFSHorizontal:"horizontal",esriSFSVertical:"vertical",esriSFSForwardDiagonal:"forward-diagonal",esriSFSBackwardDiagonal:"backward-diagonal",esriSFSCross:"cross",esriSFSDiagonalCross:"diagonal-cross"});let m=M=class extends w{constructor(...e){super(...e),this.color=new b([0,0,0,.25]),this.outline=new l,this.type="simple-fill",this.style="solid"}normalizeCtorArgs(e,s,o){if(e&&typeof e!="string")return e;const i={};return e&&(i.style=e),s&&(i.outline=s),o&&(i.color=o),i}clone(){return new M({color:g(this.color),outline:this.outline&&this.outline.clone(),style:this.style})}hash(){return`${super.hash()}${this.style}.${this.color&&this.color.hash()}`}};t([r()],m.prototype,"color",void 0),t([r()],m.prototype,"outline",void 0),t([f({esriSFS:"simple-fill"},{readOnly:!0})],m.prototype,"type",void 0),t([r({type:L.apiValues,json:{read:L.read,write:L.write}})],m.prototype,"style",void 0),m=M=t([u("esri.symbols.SimpleFillSymbol")],m);var C;const D=new $({esriSMSCircle:"circle",esriSMSSquare:"square",esriSMSCross:"cross",esriSMSX:"x",esriSMSDiamond:"diamond",esriSMSTriangle:"triangle",esriSMSPath:"path"});let a=C=class extends h{constructor(...e){super(...e),this.color=new b([255,255,255,.25]),this.type="simple-marker",this.size=12,this.style="circle",this.outline=new l}normalizeCtorArgs(e,s,o,i){if(e&&typeof e!="string")return e;const p={};return e&&(p.style=e),s!=null&&(p.size=c(s)),o&&(p.outline=o),i&&(p.color=i),p}writeColor(e,s){e&&this.style!=="x"&&this.style!=="cross"&&(s.color=e.toJSON()),e===null&&(s.color=null)}set path(e){this.style="path",this._set("path",e)}clone(){return new C({angle:this.angle,color:g(this.color),outline:this.outline&&this.outline.clone(),path:this.path,size:this.size,style:this.style,xoffset:this.xoffset,yoffset:this.yoffset})}hash(){var e;return`${super.hash()}.${this.color&&this.color.hash()}.${this.path}.${this.style}.${(e=this.outline)==null?void 0:e.hash()}`}};t([r()],a.prototype,"color",void 0),t([j("color")],a.prototype,"writeColor",null),t([f({esriSMS:"simple-marker"},{readOnly:!0})],a.prototype,"type",void 0),t([r()],a.prototype,"size",void 0),t([r({type:D.apiValues,json:{read:D.read,write:D.write}})],a.prototype,"style",void 0),t([r({type:String,json:{write:!0}})],a.prototype,"path",null),t([r({types:{key:"type",base:null,defaultKeyValue:"simple-line",typeMap:{"simple-line":l}},json:{default:null,write:!0}})],a.prototype,"outline",void 0),a=C=t([u("esri.symbols.SimpleMarkerSymbol")],a);export{m as a,y as c,T as e,h as i,w as l,l as m,q as n,a as u};
