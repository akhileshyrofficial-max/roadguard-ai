import h from"./Graphic-q_7OAYHf.js";import{i as d,aN as l,a3 as S,al as g}from"./Identifiable-_3rFZ1o6.js";import E from"./Mesh-8g-iLF02.js";import{n as N,i as D}from"./External-DDkU23Di.js";import{s as M}from"./infoFor3D-dHKPbXlj.js";import{g as F}from"./FeatureSet-CZLo56w_.js";import{n as T,i as I}from"./meshFeatureAttributes-Cz53Szzr.js";import"./PopupTemplate-B09IYibB.js";import"./fieldUtils-z3GG2R-H.js";import"./index-BEHHhRxI.js";import"./jsonUtils-Cc67rW5Z.js";import"./typeUtils-mxDsOnhk.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Buir9u-w.js";import"./SimpleMarkerSymbol-Drowg4jp.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-DNlIzH5i.js";import"./TextSymbol-keZwKiPd.js";import"./PictureMarkerSymbol-DlgeV3xL.js";import"./axisAngleDegrees-DrFxHEi4.js";import"./mat4-CEszlm-2.js";import"./common-DQOJ18NT.js";import"./quat-9ZYTS2cW.js";import"./mat3f64-B5o_lm6j.js";import"./quatf64-aQ5IuZRd.js";import"./vec32-soPbwaVZ.js";import"./vec42-CKs01hkn.js";import"./MeshComponent-DM0Q0ytq.js";import"./imageUtils-DN-q3Lg0.js";import"./meshProperties-B4vupnXI.js";import"./MeshLocalVertexSpace-DhAtAXfe.js";import"./MeshTransform-tICMBwgD.js";import"./mat4f64-q_b6UJoq.js";import"./MeshVertexAttributes-C-z5VO3K.js";import"./meshVertexSpaceUtils-BPkMPmro.js";import"./triangulationUtils-CpgZtLii.js";import"./earcut-D9gy186-.js";import"./Indices-CJx9tykA.js";import"./plane-BnjjlcHJ.js";import"./vectorStacks-Cflk7ctu.js";import"./vec2f64-Cgb6qxNH.js";import"./vec4f64-DPb6J-GU.js";import"./deduplicate-Xkyt2L53.js";import"./projectPointToVector-BeChI4_x.js";import"./projectionUtils-BdqPecQc.js";import"./vertexSpaceConversion-zzk3KXPr.js";import"./mat3-CruJiiUv.js";import"./spatialReferenceEllipsoidUtils-DTRGV_GU.js";import"./computeTranslationToOriginAndRotation-BC1si6zj.js";import"./vec3-BskQ-MRq.js";import"./BufferView-eGDukKmQ.js";import"./vec2-ChnYg_BJ.js";import"./vec4-D2P2fOM6.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";const w=()=>d.getLogger("esri.rest.support.meshFeatureSet");function xt(t,o,r){const e=r.features;r.features=[],delete r.geometryType;const s=F.fromJSON(r);if(s.geometryType="mesh",!r.assetMaps)return s;const i=$(o,r.assetMaps),m=t.sourceSpatialReference??g.WGS84,u=r.globalIdFieldName,{outFields:n}=t,f=n!=null&&n.length>0?L(n.includes("*")?null:new Set(n)):()=>({});for(const p of e){const a=O(p,u,m,o,i);s.features.push(new h({geometry:a,attributes:f(p)}))}return s}function L(t){return({attributes:o})=>{if(!o)return{};if(!t)return o;for(const r in o)t.has(r)||delete o[r];return o}}function O(t,o,r,e,s){const i=t.attributes[o],m=s.get(i);if(m==null||!t.geometry)return null;const u=T(t.attributes,r,e.transformFieldRoles),n=S.fromJSON(t.geometry);n.spatialReference=r;const f=I(t.attributes,e.transformFieldRoles),p=r.isGeographic?"local":"georeferenced",a=b(m);return a?E.createWithExternalSource(u,a,{extent:n,transform:f,vertexSpace:p,unitConversionDisabled:!0}):E.createIncomplete(u,{extent:n,transform:f,vertexSpace:p})}var c;function $(t,o){const r=new Map;for(const e of o){const s=e.parentGlobalId;if(s==null)continue;const i=e.assetName,m=e.assetType,u=e.assetHash,n=e.assetURL,f=e.conversionStatus,p=e.seqNo,a=M(m,t.supportedFormats);if(!a){w().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${m}, but it does not list it as a supported type`);continue}const y=l(r,s,()=>({files:new Map}));l(y.files,i,()=>({name:i,type:m,mimeType:a,status:P(f),parts:[]})).parts[p]={hash:u,url:n}}return r}function b(t){const o=Array.from(t.files.values()),r=new Array;for(const e of o){if(e.status!==c.COMPLETED)return null;const s=new Array;for(const i of e.parts){if(!i)return null;s.push(new N(i.url,i.hash))}r.push(new D(e.name,e.mimeType,s))}return{type:"service",assets:r}}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return c.COMPLETED;case"INPROGRESS":return c.PENDING;default:return c.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(c||(c={}));export{$ as assetMapFromAssetMapsJSON,O as extractMesh,xt as meshFeatureSetFromJSON};
