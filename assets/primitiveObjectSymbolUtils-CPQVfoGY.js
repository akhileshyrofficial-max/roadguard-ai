import{v as G,cp as O,eR as p}from"./Identifiable-B58w9FD1.js";import{m as B,B as E,e as T,f as U,a as R,C as I,s as V}from"./dehydratedFeatureUtils-6zrpJg_p.js";import{i as C,y as M}from"./memoryEstimations-ugfznLe2.js";import{E as l,i as P}from"./IntersectorType-gQim6TH1.js";import{n as b}from"./mat4-CggL8WYf.js";import{e as A,r as W}from"./mat4f64-q_b6UJoq.js";import{r as D,g as w,u as N,A as _,s as d}from"./vec32-BBi6eWk8.js";import{z as J}from"./vec42-CKs01hkn.js";import{n as j}from"./vec4f64-DPb6J-GU.js";import{b as z,v}from"./sphere-BTK9a7ED.js";import{e as k}from"./VertexAttribute-BfkzOMLV.js";class q{get ray(){return this._ray}get distanceInRenderSpace(){return this.distance==null?null:(w(f,this.ray.direction,this.distance),D(f))}withinDistance(e){return!!x(this)&&this.distanceInRenderSpace<=e}getIntersectionPoint(e){return!!x(this)&&(w(f,this.ray.direction,this.distance),N(e,this.ray.origin,f),!0)}getTransformedNormal(e){return d(h,this.normal),h[3]=0,J(h,h,this.transformation),d(e,h),_(e,e)}constructor(e){this.intersector=l.OBJECT,this.normal=G(),this.transformation=A(),this._ray=z(),this.init(e)}init(e){this.distance=this.target=this.drapedLayerOrder=this.renderPriority=null,this.intersector=l.OBJECT,v(e,this._ray)}set(e,r,t,i,n,a,o){this.intersector=e,this.distance=t,d(this.normal,i??O),b(this.transformation,n??W),this.target=r,this.drapedLayerOrder=a,this.renderPriority=o}copy(e){v(e.ray,this._ray),this.intersector=e.intersector,this.distance=e.distance,this.target=e.target,this.drapedLayerOrder=e.drapedLayerOrder,this.renderPriority=e.renderPriority,d(this.normal,e.normal),b(this.transformation,e.transformation)}}function x(s){return(s==null?void 0:s.distance)!=null}const f=G(),h=j();let F=class{constructor(e){this.layerViewUid=e}};class H extends F{constructor(e,r){super(e),this.graphicUid=r}}class K extends H{constructor(e,r,t,i,n){super(e,r),this.layerViewUid=e,this.graphicUid=r,this.triangleNr=t,this.baseBoundingSphere=i,this.numLodLevels=n}}let Q=class{constructor(e,r,t,i){this.material=e,this.bufferWriter=e.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=r,this.elementCount=t,this.boundingInfo=i}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+M}getRenderGeometry(){return this}intersect(e,r,t,i,n,a,o,c){const u=this.bufferWriter,m=this.buffer;u.intersect(m,this.material.parameters,null,e,t,i,(g,y,$)=>L(g,y,$,e,r,a,o,n,c))}};class X{constructor(e){this.engineGeometry=e}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(k.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((e,r)=>e+C(r.data,r.indices),0)}getRenderGeometry(){const e=this.material,r=this.engineGeometry,t=r.attributes,i=r.boundingInfo,n=e.createBufferWriter(),a=n.vertexBufferLayout,o=n.elementCount(t),c=a.createBuffer(o);return n.write(null,null,t,null,c,0),new Q(e,c.buffer,o,i)}intersect(e,r,t,i,n,a,o,c){const u=this.engineGeometry;this.material.intersect(u,e.transform.transform,e,t,i,(m,g,y)=>L(m,g,y,e,r,a,o,n,c))}}function L(s,e,r,t,i,n,a,o,c){if(s<0||i&&!i(t.rayBegin,t.rayEnd,s))return;const u=new K(n.layerViewUid,n.graphicUid(o),r,a,c);if((t.results.min.distance==null||s<t.results.min.distance)&&t.results.min.set(l.LOD,u,s,e,t.transform.transform),(t.results.max.distance==null||s>t.results.max.distance)&&t.results.max.set(l.LOD,u,s,e,t.transform.transform),t.options.store===P.ALL){const m=new q(t.results.min.ray);m.set(l.LOD,u,s,e,t.transform.transform),t.results.all.push(m)}}let Y=class{constructor(e,r=null){this.geometry=e,this.textures=r}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}};class Z{constructor(e,r,t){this.components=e,this.minScreenSpaceRadius=r,this.pivotOffset=t;const i=p(this.components.map(n=>n.geometry));this.numVertices=i.reduce((n,a)=>n+a.numVertices,0)}}class ee{constructor(e){this.levels=e,this.levels.sort((r,t)=>r.minScreenSpaceRadius===t.minScreenSpaceRadius?r.numVertices-t.numVertices:r.minScreenSpaceRadius-t.minScreenSpaceRadius)}getMaterials(){const e=[];return this.levels.forEach(r=>r.components.forEach(t=>e.push(t.geometry.material))),p(e)}getTextures(){const e=new Array;return this.levels.forEach(r=>r.components.forEach(t=>{t.textures!=null&&e.push(...t.textures)})),p(e)}getGeometries(){const e=new Array;return this.levels.forEach(r=>r.components.forEach(t=>{e.push(t.geometry)})),p(e)}getEngineGeometries(){return this.getGeometries().map(e=>e.engineGeometry).filter(e=>e!=null)}computeUsedMemory(){const e=this.getGeometries(),r=this.getTextures(),t=e.reduce((i,n)=>i+n.computeUsedMemory(),0);return r.reduce((i,n)=>i+n.usedMemory,0)+t}}function pe(s){switch(s){case"sphere":case"cube":case"diamond":case"cylinder":case"cone":case"inverted-cone":case"tetrahedron":return!0}return!1}function ge(s,e){const r=(t,i,n=!1)=>new ee(t.map(a=>{const o=i(a.tesselation);return n&&B(o),new Z([new Y(new X(o))],a.minScreenSpaceRadius)}));switch(s){case"sphere":return r([{tesselation:0,minScreenSpaceRadius:0},{tesselation:1,minScreenSpaceRadius:8},{tesselation:2,minScreenSpaceRadius:16},{tesselation:3,minScreenSpaceRadius:50},{tesselation:4,minScreenSpaceRadius:250}],t=>V(e,.5,t));case"cube":return r([{tesselation:0,minScreenSpaceRadius:0}],()=>I(e,1));case"cone":return r(S,t=>R(e,1,.5,t,!1),!0);case"inverted-cone":return r(S,t=>R(e,1,.5,t,!0),!0);case"cylinder":return r(S,t=>U(e,1,.5,t,[0,0,1],[0,0,.5]));case"tetrahedron":return r([{tesselation:0,minScreenSpaceRadius:0}],()=>T(e,1),!0);case"diamond":return r([{tesselation:0,minScreenSpaceRadius:0}],()=>E(e,1),!0);default:return}}const S=[{tesselation:6,minScreenSpaceRadius:0},{tesselation:18,minScreenSpaceRadius:7},{tesselation:64,minScreenSpaceRadius:65}];export{pe as S,Y as a,X as b,Z as f,ee as h,ge as l,q as p};
