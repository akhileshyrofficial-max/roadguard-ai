import{V as f,l as D,U as _,E as S,s as l,br as y,cr as L,i as c,aN as b,cq as v,M as A,J as T,Y as k,Q as N,c as r,m as d,ac as E,ab as I,d as C}from"./Identifiable-B58w9FD1.js";import{I as w,i as M,E as G,m as $,h as R}from"./KnowledgeGraphSublayer-B-GOHMa5.js";import{S as O}from"./MultiOriginJSONSupport-BZVrWF1x.js";import{n as x}from"./uuid-Cl5lrJ4c.js";import{h as U}from"./Layer-C63inyUN.js";import{l as K}from"./ArcGISService-81SDMnEP.js";import{p as F}from"./BlendLayer-ZjS29wea.js";import{e as j}from"./CustomParametersMixin-BzFiujo5.js";import{b as z,y as P}from"./OperationalLayer-CKgNO0NN.js";import{j as H}from"./PortalLayer-BNHO2Fz3.js";import{f as V}from"./RefreshableLayer-Dv7Ig4sw.js";import{t as q}from"./ScaleRangeLayer-Ci7jgVw5.js";import{u as B}from"./knowledgeGraphService-BZ-ys-cY.js";import"./index-VFfT8Aji.js";import"./aaBoundingBox-CGMzNzJN.js";import"./OptimizedFeature-DFf7-Rrh.js";import"./memoryEstimations-ugfznLe2.js";import"./fieldUtils-5LubkA3t.js";import"./projectionUtils-DsK_8mH5.js";import"./constants-B4mRqufT.js";import"./jsonUtils-rvWrjUVI.js";import"./featureConversionUtils-De1fR0uF.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./createFeatureId-BiB9j2WD.js";import"./Graphic-sBrqQAPW.js";import"./PopupTemplate-D_WeQBNh.js";import"./typeUtils-BD6Rtzmx.js";import"./typeUtils-Du36Z1Jr.js";import"./SimpleMarkerSymbol-B18xir4G.js";import"./screenUtils-aQeO9QTD.js";import"./TextSymbol-C7i9ol-5.js";import"./PictureMarkerSymbol-D6pzvUP4.js";import"./GraphicsLayer-DiGOhhuQ.js";import"./GraphicsCollection-CixPPU0K.js";import"./ElevationInfo-0ccmO6of.js";import"./lengthUtils-DEvA7X52.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DI0kf7Dd.js";import"./parser-NZ6dFu80.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CggL8WYf.js";import"./common-DQOJ18NT.js";import"./GraphQueryStreaming-C2UEcbT-.js";import"./Query-B1Zd9wiX.js";import"./Field-BoWr0HZE.js";import"./fieldType-CgljAswg.js";import"./workers-BRuHQO5o.js";import"./Queue-CM5__kwh.js";import"./intl-BHHnlw1J.js";import"./number-kTr8sdcN.js";import"./FeatureStore-BIcyufLs.js";import"./BoundsStore-BgVZuI7Q.js";import"./PooledRBush-BtNajwWz.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-Dd2Mh6SO.js";import"./queryUtils-DGFW-0sq.js";import"./normalizeUtils-DiYDtdl8.js";import"./normalizeUtilsCommon-BcGwSELE.js";import"./utils-DM3VuI_N.js";import"./utils-Kw6dbpdX.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-FcX9MQSS.js";import"./QueryEngine-BKgK64dC.js";import"./WhereClauseCache-Bc_wVtE4.js";import"./LRUCache-eBEVKbNU.js";import"./MemCache-CUhFgUMJ.js";import"./WhereClause-B1FQrEXk.js";import"./TimeOnly-CBUwkOTd.js";import"./enum-CyvfDIjS.js";import"./UnknownTimeZone-BdyuEDG6.js";import"./QueryEngineCapabilities-CsRUnGk7.js";import"./quantizationUtils-ooNzAwDD.js";import"./utils-D9g7bEvs.js";import"./heatmapUtils-GAAfYedV.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./utils-C6glyN2L.js";import"./timeZoneUtils-DlgpSZrP.js";import"./utils-DBr89D4K.js";import"./ClassBreaksDefinition-C6dHtvzz.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-_VwQFo1S.js";import"./NormalizationBinParametersMixin-2d45MFq8.js";import"./FieldsIndex-B99JmYLE.js";import"./Scheduler-BH9l6DUT.js";import"./signal-Cxu9Z1Kf.js";import"./clientSideDefaults-Dv0OPba4.js";import"./defaultsJSON-GKolV7NZ.js";import"./fieldProperties-BS1_JFoa.js";import"./labelingInfo-D218ARvW.js";import"./asyncUtils-C5b0g4Vr.js";import"./layerUtils-CAMu1s-2.js";import"./SimpleRenderer-Cedg0Xn2.js";import"./commonProperties-CL8iWgtU.js";import"./colorRamps-BwV5NB8A.js";import"./ColorStop-DBTLRnqQ.js";import"./visualVariableUtils-CiMe3o6k.js";import"./jsonUtils-BhRkbivh.js";import"./defaults3D-DzIVO-Cs.js";import"./defaults-CXADZSqg.js";import"./UniqueValueRenderer-C3cUyoso.js";import"./diffUtils-jeIEfUBl.js";import"./RendererLegendOptions-Bp93r_aZ.js";import"./styleUtils-CnCv1b7N.js";import"./labelUtils-XzqWkuAo.js";import"./DisplayFilteredLayer-hz3j_o46.js";import"./scaleUtils-BWXUbMYz.js";import"./displayFilterUtils-DBFDSivV.js";import"./FeatureEffectLayer-DTQSrZtt.js";import"./FeatureEffect-CyHRgGiw.js";import"./FeatureFilter-7aTMY5PN.js";import"./FeatureReductionLayer-1787HCPR.js";import"./FeatureReductionSelection-C5E5YiJT.js";import"./jsonUtils-DGQt529R.js";import"./typeUtils-CN-pQyH0.js";import"./ClassBreaksRenderer-BF27luvl.js";import"./DictionaryScriptEvaluator-MiN8zXta.js";import"./Version-B0YYd6Ho.js";import"./ArcadeExpression-Cc_hp5dd.js";import"./utils-BM8mKO1R.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-Dqu_ALs4.js";import"./OrderByInfo-BIQ3g3TT.js";import"./TemporalLayer-D2ke8r53.js";import"./TimeInfo-YCUOEfwp.js";import"./FeatureSet-DrLo5FjM.js";import"./popupUtils-XSnIyd1l.js";import"./utils-VkC7NvOP.js";import"./cimSymbolUtils-CeKBuNur.js";import"./PortalItem-DLsR4Y2a.js";import"./portalItemUtils-LGbTNR1x.js";import"./networkEnums-BDHMASSX.js";import"./GPMessage-COeWYNqA.js";let s=class extends F(q(V(K(z(H(O(j(U)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(f.ofType(w)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(f.ofType(w)),this.type="knowledge-graph",this.url=null,this.addHandles(D(()=>this.layers.concat(this.tables),(i,t)=>this._handleSublayersChange(i,t),_))}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(i){S(i)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await M(this)}async _fetchMetadata(){if(!this.url)throw new l("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await B(this.url);this.knowledgeGraph=e,this._forEachGraphType(i=>{i.name&&this._graphTypeLookup.set(i.name,i)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===y.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new G({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await $(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(i=>{const t=this._graphTypeLookup.get(i.graphTypeName);t&&!e.namedTypeDefinitions.has(t.name)&&e.namedTypeDefinitions.set(t.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,L(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:i}=e;if((i==null?void 0:i.size)>0)i.forEach((t,a)=>{const o=this._graphTypeLookup.get(a);if(!o)return c.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void i.delete(a);o.type!=="relationship"&&o.type!=="entity"&&(c.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),i.delete(a))});else if(!e.generateAllSublayers)throw new l("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var o,n;let e=[],i=[];const{inclusionModeDefinition:t}=this,a=t==null?void 0:t.namedTypeDefinitions;!t||t.generateAllSublayers?(e=((o=this.knowledgeGraph.dataModel)==null?void 0:o.entityTypes)??[],i=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):a&&a.size>0&&a.forEach((p,m)=>{const h=this._graphTypeLookup.get(m);switch(h==null?void 0:h.type){case"relationship":i.push(h);break;case"entity":e.push(h)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=i}_forEachGraphType(e){var i,t;[...((i=this.knowledgeGraph.dataModel)==null?void 0:i.entityTypes)??[],...((t=this.knowledgeGraph.dataModel)==null?void 0:t.relationshipTypes)??[]].forEach(a=>{e(a)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const i=new Set,t=[];for(const a of e)this._graphTypeLookup.has(a.typeName)&&(this.layers.concat(this.tables).some(o=>o.objectType.name===a.typeName)===!1&&(this.dataManager.sublayerCaches.set(a.typeName,new Map),i.add(a.typeName)),b(this.sublayerIdsCache,a.typeName,()=>new Set).add(a.id),t.push(a));this.dataManager.addToLayer(t);for(const a of i){const o=this._graphTypeLookup.get(a);o&&(this._addSublayer(o),o.type==="entity"?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a))}await M(this,Array.from(i)),this._refreshNamedTypes()}_createSublayers(e,i,t){e.forEach(a=>{const o=this._createSublayer(a);t(o)&&i.push(o),this._updateSublayerCaches(a)})}_addSublayer(e){const i=this._createSublayer(e);return i.geometryType?this.layers.push(i):this.tables.push(i),i}_createSublayer(e){return new w({objectType:e,parentCompositeLayer:this,graphType:e.type})}_updateSublayers(e,i){i.forEach(t=>{t.parentCompositeLayer=this;const a=e.find(o=>o.type===t.graphType&&o.name===t.graphTypeName);a&&(t.objectType=a,this._updateSublayerCaches(a))})}_updateSublayerCaches({name:e}){if(!e)return;const i=this.dataManager.sublayerCaches;i.has(e)||i.set(e,new Map)}_saveUrlAsNewResource(e,i,t,a){e[i]="<pending>",t.pendingOperations.push(J(this.inclusionModeDefinition).then(o=>{const n=Q(a);e[i]=n.itemRelativeUrl,t.toAdd.push({resource:n,content:{type:"blob",blob:o},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:i}]of e.namedTypeDefinitions)if(!i)return!1;return!0}_handleSublayersChange(e,i){i&&(i.forEach(t=>{t.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(t=>{t.parent=this}),this.addHandles([e.on("after-add",({item:t})=>{t.parent=this}),e.on("after-remove",({item:t})=>{t.parent=null})],"sublayers-owner"))}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=y.PORTAL_ITEM&&e<y.USER}readDefinitionSetMap(e,i,t){return v(e,t)}writeDefinitionSetMap(e,i,t,a){const o=a==null?void 0:a.portalItem,n=a==null?void 0:a.resources,p=A(a==null?void 0:a.origin);if(!o||!n||p==null)return void(e&&(i[t]=T(e,a)));const{inclusionModeDefinition:m}=this;if(!m||this._displaysAllRecords(m))return void(this.definitionSetMap=null);const h=this.originIdOf("inclusionModeDefinition");if(h===y.USER||this._namedTypesModified||p<h)this._saveUrlAsNewResource(i,t,n,o);else if(p===h&&e){const g=T(e,a);k(g)?this._saveUrlAsNewResource(i,t,n,o):i[t]=g}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):c.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var i,t;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.layers.length||this.originIdOf("tables")===y.DEFAULTS?this.originIdOf("layers")===y.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers):this.layers=new f,this.tables.length||this.originIdOf("layers")===y.DEFAULTS?this.originIdOf("tables")===y.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables):this.tables=new f,(t=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null||t.forEach((a,o)=>{var p;const n=b(this.sublayerIdsCache,o,()=>new Set);(p=a.members)==null||p.forEach(m=>{n.add(m.id)})})}async addRecords(e){await this.load(),await this._handleNewRecords(e)}async createSublayerForNamedType(e){await this.load();const i=this._graphTypeLookup.get(e);if(!i)throw new l("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(this.dataManager.sublayerCaches.has(e))throw new l("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),b(this.sublayerIdsCache,e,()=>new Set);const t=this._addSublayer(i);return i.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),await M(this,[e]),this._refreshNamedTypes(),t}convertSublayerToDynamicData(e){if(!this.dataManager.inclusionModeDefinition)throw new l("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new l("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(!this.dataManager.sublayerCaches.has(e))throw new l("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");const i=this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e);i!=null&&i.useAllData?c.getLogger(this).warn("This Knowledge Graph Layer already uses dynamic membership for the sublayer - no conversion was made"):(this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),this.sublayerIdsCache.delete(e),this._refreshNamedTypes())}convertSublayerToExplicitMembership(e){if(!this.dataManager.inclusionModeDefinition)throw new l("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new l("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");const i=this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e);if(!i||i.useAllData){if(!this.dataManager.sublayerCaches.has(e))throw new l("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");this.sublayerIdsCache.set(e,new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map}),this._refreshNamedTypes()}else c.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership for the sublayer - no conversion was made")}convertToFullyDynamicData(){this.dataManager.inclusionModeDefinition||c.getLogger(this).warn("This Knowledge Graph Layer already uses fully dynamic membership - no conversion was made"),this.sublayerIdsCache.clear(),this.dataManager.inclusionModeDefinition=null,this._refreshNamedTypes()}convertToExplicitMembership(){this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.size>0&&c.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership - no conversion was made"),this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map};for(const e of this.dataManager.sublayerCaches.keys())b(this.sublayerIdsCache,e,()=>new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map});this._refreshNamedTypes()}async removeRecords(e){var t,a,o,n,p,m,h,g;await this.load();const i=[];for(const u of e)((o=(a=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null?void 0:a.get(u.typeName))==null?void 0:o.useAllData)===!1&&((h=(m=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(u.typeName))==null?void 0:m.members)!=null&&h.has(u.id))&&i.push(u);this.dataManager.removeFromLayer(i);for(const u of i)(g=this.sublayerIdsCache.get(u.typeName))==null||g.delete(u.id);return this._refreshNamedTypes(),i}};r([d()],s.prototype,"dataManager",void 0),r([d({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],s.prototype,"definitionSetMap",void 0),r([E("definitionSetMap")],s.prototype,"readDefinitionSetMap",null),r([I("definitionSetMap")],s.prototype,"writeDefinitionSetMap",null),r([d()],s.prototype,"inclusionModeDefinition",null),r([d()],s.prototype,"knowledgeGraph",void 0),r([d({type:f.ofType(w),json:{write:{ignoreOrigin:!0}}})],s.prototype,"layers",void 0),r([d()],s.prototype,"memberEntityTypes",void 0),r([d()],s.prototype,"memberRelationshipTypes",void 0),r([d({type:["KnowledgeGraphLayer"]})],s.prototype,"operationalLayerType",void 0),r([d()],s.prototype,"sublayerIdsCache",void 0),r([d({type:f.ofType(w),json:{write:{ignoreOrigin:!0}}})],s.prototype,"tables",void 0),r([d({json:{read:!1}})],s.prototype,"type",void 0),r([d(P)],s.prototype,"url",void 0),s=r([C("esri.layers.KnowledgeGraphLayer")],s);const _t=s;async function J(e){const i=await R(e);return new Blob([i],{type:"application/x-protobuf"})}function Q(e){const i=`definitionSetMap-${x()}.dat`,t=N("knowledgeGraphLayer",i);return e.resourceFromPath(t)}export{_t as default};
