import{w as n,_ as p,D as s}from"./operatorConvexHull-hN7ODXRs.js";import{fromGeometry as f,toGeometry as r,fromGeometries as c,fromGeometryToGXGeometry as u}from"./jsonConverter-CrEPS5Ia.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-CvBsPtPg.js";import"./ProjectionTransformation-C2rsVPn5.js";import"./Envelope2D-Cq0k1qIA.js";import"./Transformation2D-BcN_JJet.js";import"./Identifiable-_3rFZ1o6.js";import"./index-BEHHhRxI.js";import"./OperatorDefinitions-DP7_WWTp.js";function D(e){const o=f(e);return r(n(o.getGeometry()),o.getSpatialReference())}function P(e,o={}){const{merge:t=!1}=o,[m,i]=c(e);return p(m,t).map(a=>r(a,i))}function R(e){return s(u(e))}export{D as execute,P as executeMany,R as isConvex};
