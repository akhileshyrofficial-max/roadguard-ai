import{c as i,m as p,d,l as a,s as l,cS as _,e as g}from"./Identifiable-B58w9FD1.js";import{g as h}from"./FeatureSet-DrLo5FjM.js";import{i as f}from"./fieldUtils-5LubkA3t.js";import{n as v,c as S}from"./FeatureLayerView2D-D9lqH3wm.js";import{d as C}from"./FeatureFilter-7aTMY5PN.js";import"./index-VFfT8Aji.js";import"./Graphic-sBrqQAPW.js";import"./PopupTemplate-D_WeQBNh.js";import"./jsonUtils-rvWrjUVI.js";import"./typeUtils-BD6Rtzmx.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Du36Z1Jr.js";import"./SimpleMarkerSymbol-B18xir4G.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-CGMzNzJN.js";import"./TextSymbol-C7i9ol-5.js";import"./PictureMarkerSymbol-D6pzvUP4.js";import"./Field-BoWr0HZE.js";import"./fieldType-CgljAswg.js";import"./UpdatingHandles-Lv1GUel8.js";import"./Container-BtHpY2XJ.js";import"./MapView-xTo1x6Jl.js";import"./Cyclical-SUfr0Hlv.js";import"./CollectionFlattener-DpJZcuE9.js";import"./workers-BRuHQO5o.js";import"./Queue-CM5__kwh.js";import"./intl-BHHnlw1J.js";import"./number-kTr8sdcN.js";import"./projectionUtils-DsK_8mH5.js";import"./TileInfo-D4DTS484.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-MlcfH8Vy.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./asyncUtils-C5b0g4Vr.js";import"./signal-Cxu9Z1Kf.js";import"./Map-BQwbVliJ.js";import"./Basemap-BLSYwfav.js";import"./loadAll-CbqpgDCk.js";import"./PortalItem-DLsR4Y2a.js";import"./writeUtils-Bje94ctQ.js";import"./layerUtils-CAMu1s-2.js";import"./persistable-glrbGfu8.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-CXue4rJ6.js";import"./PolygonCollection-DoAtzYfB.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CggL8WYf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-CnCDLfmO.js";import"./Layer-C63inyUN.js";import"./GraphicsCollection-CixPPU0K.js";import"./HeightModelInfo-DBDBaZ2u.js";import"./timeZoneUtils-DlgpSZrP.js";import"./ReactiveMap-D39lG9XE.js";import"./Query-B1Zd9wiX.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./enums-oVqQqnoy.js";import"./TileKey-DZRgo92L.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-DiYDtdl8.js";import"./normalizeUtilsCommon-BcGwSELE.js";import"./utils-DM3VuI_N.js";import"./utils-Kw6dbpdX.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-BH9l6DUT.js";import"./vec32-BBi6eWk8.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-BXXxnW90.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-CcEg-3Il.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-B0YYd6Ho.js";import"./parser-NZ6dFu80.js";import"./featureConversionUtils-De1fR0uF.js";import"./OptimizedFeature-DFf7-Rrh.js";import"./memoryEstimations-ugfznLe2.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./labelingInfo-D218ARvW.js";import"./SimpleRenderer-Cedg0Xn2.js";import"./commonProperties-CL8iWgtU.js";import"./colorRamps-BwV5NB8A.js";import"./ColorStop-DBTLRnqQ.js";import"./visualVariableUtils-CiMe3o6k.js";import"./lengthUtils-DEvA7X52.js";import"./jsonUtils-BhRkbivh.js";import"./defaults3D-DzIVO-Cs.js";import"./defaults-CXADZSqg.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-C3cUyoso.js";import"./diffUtils-jeIEfUBl.js";import"./RendererLegendOptions-Bp93r_aZ.js";import"./styleUtils-CnCv1b7N.js";import"./NormalizationBinParametersMixin-2d45MFq8.js";import"./labelUtils-XzqWkuAo.js";import"./timeSupport-mvpMbzaW.js";import"./AttributeBinsFeatureSet-CIqd8TL8.js";import"./AttributeBinsQuery-CK9PjgMw.js";import"./queryUtils-DGFW-0sq.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-_VwQFo1S.js";import"./LayerView-CflW_wQo.js";import"./layerViewUtils-CVH0822Q.js";import"./TechniqueInstance-iE4wc1kQ.js";import"./UpdateTracking2D-F8JbgN_O.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-BFpPfjYL.js";import"./enums-BPiq_WIC.js";import"./utils-BM8mKO1R.js";import"./defaultCIMValues-BrbaHf9c.js";import"./rasterizingUtils-D6OowsbP.js";import"./floatRGBA-BQ7jCumf.js";import"./Rect-CUzevAry.js";import"./Utils-BklDQzCT.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BSWRnN9p.js";import"./ProgramTemplate-Aje1Ud3y.js";import"./TileContainer-DxYIfJB1.js";import"./WGLContainer-BDoDnL5o.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4LQ4gTA.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-CPqIPZhd.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-DzKjOYuG.js";import"./ShaderBuilder-Zhirjag-.js";import"./BindType-BBwFZqyN.js";import"./utils-Dpt2n9Oo.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BAVhxohG.js";import"./CircularArray-CujHzHWW.js";import"./OrderByInfo-BIQ3g3TT.js";import"./heatmapUtils-GAAfYedV.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./SDFHelper-DQa8fUt9.js";import"./constants-B4mRqufT.js";import"./bundle-D2hyHz7d.js";import"./displayFilterUtils-DBFDSivV.js";import"./FeatureEffect-CyHRgGiw.js";import"./jsonUtils-DI0kf7Dd.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-DRI08sKd.js";import"./RefreshableLayerView-AeLvL8d4.js";const I=t=>{let r=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...e){super(...e),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(e){e?this._doPause():this._isUserPaused||this._doResume()}};return i([p()],r.prototype,"_isUserPaused",void 0),i([p({readOnly:!0})],r.prototype,"connectionStatus",null),i([p({type:C})],r.prototype,"filter",void 0),r=i([d("esri.views.layers.StreamLayerView")],r),r};let s=class extends I(S){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new l("stream-controller",this.pipelineErrorString):null}on(t,r){if(Array.isArray(t))return _(t.map(o=>this.on(o,r)));const e=["data-received","message-received"].includes(t);e&&this.getWorker().then(o=>o.streamMessenger.enableEvent(t,!0));const m=super.on(t,r),n=this;return g(()=>{m.remove(),e&&(n._workerProxy.closed||n.hasEventListener(t)||n.getWorker().then(o=>o.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,r){var m,n,o;if(!((m=this.layer.timeInfo)!=null&&m.endField||(n=this.layer.timeInfo)!=null&&n.startField||(o=this.layer.timeInfo)!=null&&o.trackIdField))throw new l("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const e=await this.getWorker();return v(e.features.executeQueryForLatestObservations(this._cleanUpQuery(t),r).then(y=>{const u=h.fromJSON(y);return u.features.forEach(c=>{c.layer=this.layer,c.sourceLayer=this.layer}),u}),new h({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(t,r){return(await super.queryObjectIds(t,r)).filter(f)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval==null&&(this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval))}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),r=this;return{...t,get container(){return r.featureContainer},setProperty:e=>{this.set(e.propertyName,e.value)}}}};i([p()],s.prototype,"pipelineConnectionStatus",void 0),i([p()],s.prototype,"pipelineErrorString",void 0),i([p({readOnly:!0})],s.prototype,"connectionError",null),i([p({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([d("esri.views.2d.layers.StreamLayerView2D")],s);const de=s;export{de as default};
