import{E as _,al as v,I as S,H as c,cy as T,s as u,p as b,bj as w,ca as O,c1 as $,c as o,m as a,ac as R,ab as W,cz as U,d as j}from"./Identifiable-B58w9FD1.js";import{t as P}from"./loadAll-CbqpgDCk.js";import{S as I}from"./MultiOriginJSONSupport-BZVrWF1x.js";import{h as L}from"./Layer-C63inyUN.js";import{i as A}from"./APIKeyMixin-BdBHvsIb.js";import{p as B}from"./ArcGISCachedService-CB1Q5B5L.js";import{m as M,f as N,a as k}from"./SublayersOwner-BL-npzth.js";import{l as C}from"./ArcGISService-81SDMnEP.js";import{p as D}from"./BlendLayer-ZjS29wea.js";import{e as J}from"./CustomParametersMixin-BzFiujo5.js";import{b as q,y as G}from"./OperationalLayer-CKgNO0NN.js";import{j as E}from"./PortalLayer-BNHO2Fz3.js";import{f as V}from"./RefreshableLayer-Dv7Ig4sw.js";import{t as x}from"./ScaleRangeLayer-Ci7jgVw5.js";import{o as y}from"./imageBitmapUtils-DQVkg5on.js";import{c as z}from"./ElevationInfo-0ccmO6of.js";import"./index-VFfT8Aji.js";import"./asyncUtils-C5b0g4Vr.js";import"./TileInfo-D4DTS484.js";import"./TileKey-DZd6gJy7.js";import"./TileInfoTilemapCache-CFOTYk1B.js";import"./TilemapCache-DTGg6S3N.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./LRUCache-eBEVKbNU.js";import"./MemCache-CUhFgUMJ.js";import"./memoryEstimations-ugfznLe2.js";import"./Version-B0YYd6Ho.js";import"./portalItemUtils-LGbTNR1x.js";import"./projectionUtils-DsK_8mH5.js";import"./CollectionFlattener-DpJZcuE9.js";import"./PopupTemplate-D_WeQBNh.js";import"./fieldUtils-5LubkA3t.js";import"./typeUtils-BD6Rtzmx.js";import"./QueryTask-CZDSywYD.js";import"./infoFor3D-dHKPbXlj.js";import"./Query-B1Zd9wiX.js";import"./jsonUtils-rvWrjUVI.js";import"./Field-BoWr0HZE.js";import"./fieldType-CgljAswg.js";import"./utils-DM3VuI_N.js";import"./executeForIds-4vMXykav.js";import"./query-DlUKcN7V.js";import"./normalizeUtils-DiYDtdl8.js";import"./normalizeUtilsCommon-BcGwSELE.js";import"./utils-Kw6dbpdX.js";import"./pbfQueryUtils-H9tI0GDN.js";import"./pbf-6MtXQ4A6.js";import"./OptimizedFeature-DFf7-Rrh.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-CxgQnwhw.js";import"./executeQueryJSON-C0R7nUkn.js";import"./FeatureSet-DrLo5FjM.js";import"./Graphic-sBrqQAPW.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Du36Z1Jr.js";import"./SimpleMarkerSymbol-B18xir4G.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-CGMzNzJN.js";import"./TextSymbol-C7i9ol-5.js";import"./PictureMarkerSymbol-D6pzvUP4.js";import"./featureConversionUtils-De1fR0uF.js";import"./OrderedLayer-Dqu_ALs4.js";import"./OrderByInfo-BIQ3g3TT.js";import"./labelingInfo-D218ARvW.js";import"./uuid-Cl5lrJ4c.js";import"./layerUtils-CAMu1s-2.js";import"./SimpleRenderer-Cedg0Xn2.js";import"./commonProperties-CL8iWgtU.js";import"./colorRamps-BwV5NB8A.js";import"./ColorStop-DBTLRnqQ.js";import"./visualVariableUtils-CiMe3o6k.js";import"./lengthUtils-DEvA7X52.js";import"./jsonUtils-BhRkbivh.js";import"./defaults3D-DzIVO-Cs.js";import"./defaults-CXADZSqg.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-C3cUyoso.js";import"./diffUtils-jeIEfUBl.js";import"./RendererLegendOptions-Bp93r_aZ.js";import"./styleUtils-CnCv1b7N.js";import"./NormalizationBinParametersMixin-2d45MFq8.js";import"./labelUtils-XzqWkuAo.js";import"./FeatureType-4Ocu4V47.js";import"./FeatureTemplate-CUotAowk.js";import"./FieldsIndex-B99JmYLE.js";import"./UnknownTimeZone-BdyuEDG6.js";import"./timeZoneUtils-DlgpSZrP.js";import"./LayerFloorInfo-bjpQyTla.js";import"./Relationship-BIOcV4FA.js";import"./serviceCapabilitiesUtils-M5jvhL5f.js";import"./typeUtils-CN-pQyH0.js";import"./ClassBreaksRenderer-BF27luvl.js";import"./DictionaryScriptEvaluator-MiN8zXta.js";import"./ArcadeExpression-Cc_hp5dd.js";import"./TimeOnly-CBUwkOTd.js";import"./enum-CyvfDIjS.js";import"./utils-BM8mKO1R.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./heatmapUtils-GAAfYedV.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./popupUtils-XSnIyd1l.js";import"./sublayerUtils-B4Q6FuWS.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DI0kf7Dd.js";import"./parser-NZ6dFu80.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CggL8WYf.js";import"./PortalItem-DLsR4Y2a.js";var d;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=d=class extends D(x(M(B(N(q(E(C(I(V(A(J(L)))))))))))){constructor(...r){super(...r),this.listMode="show",this.elevationInfo=new z({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(_).then(()=>this._fetchService(e))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=(e=this.parsedUrl)==null?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(r,e){var t;return(r=r||((t=e.tileInfo)==null?void 0:t.spatialReference))&&v.fromJSON(r)}writeSublayers(r,e,t,s){if(!this.loaded||!r)return;const p=r.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray(),n=[],m={writeSublayerStructure:!1,...s};p.forEach(l=>{const h=l.write({},m);n.push(h)}),n.some(l=>Object.keys(l).length>1)&&(e.layers=n)}get tileServers(){var r;return this._getDefaultTileServers((r=this.parsedUrl)==null?void 0:r.path)}castTileServers(r){return Array.isArray(r)?r.map(e=>S(e).path):null}fetchTile(r,e,t,s={}){const{signal:p}=s,n=this.getTileUrl(r,e,t),m={responseType:"image",signal:p,query:{...this.refreshParameters}};return c(n,m).then(l=>l.data)}async fetchImageBitmapTile(r,e,t,s={}){const{signal:p}=s;if(this.fetchTile!==d.prototype.fetchTile){const h=await this.fetchTile(r,e,t,s);return y(h,r,e,t,p)}const n=this.getTileUrl(r,e,t),m={responseType:"blob",signal:p,query:{...this.refreshParameters}},{data:l}=await c(n,m);return y(l,r,e,t,p)}getTileUrl(r,e,t){var m,l;const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,p=T({...(m=this.parsedUrl)==null?void 0:m.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),n=this.tileServers;return`${n&&n.length?n[e%n.length]:(l=this.parsedUrl)==null?void 0:l.path}/tile/${r}/${e}/${t}${p?"?"+p:""}`}loadAll(){return P(this,r=>{r(this.allSublayers)})}_fetchService(r){return new Promise((e,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void e({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const s=b(this.parsedUrl.path);if(s!=null&&s.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(e,t)}).then(e=>{let t=this.url;if(e.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!w(t))return this._fetchServerVersion(t,r).then(s=>{this.read({currentVersion:s})}).catch(()=>{})})}_fetchServerVersion(r,e){if(!O(r))return Promise.reject();const t=r.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(s=>{var p;if((p=s.data)!=null&&p.currentVersion)return s.data.currentVersion;throw new u("tile-layer:version-not-available","Server did not provide a version")})}_getMapName(r){const e=r.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return e?e[2]:void 0}_getDefaultAttribution(r){if(r==null)return null;let e;r=r.toLowerCase();for(let t=0,s=f.length;t<s;t++)if(e=f[t],e.toLowerCase().includes(r))return $("//static.arcgis.com/attribution/"+e);return null}_getDefaultTileServers(r){if(r==null)return[];const e=r.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=r.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return e||t?[r,r.replace(e?/server\.arcgisonline/i:/services\.arcgisonline/i,e?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};o([a({readOnly:!0})],i.prototype,"attributionDataUrl",null),o([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),o([a({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),o([a()],i.prototype,"elevationInfo",void 0),o([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),o([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),o([a({type:Boolean})],i.prototype,"resampling",void 0),o([a()],i.prototype,"sourceJSON",void 0),o([a({type:v})],i.prototype,"spatialReference",void 0),o([R("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),o([a({readOnly:!0})],i.prototype,"sublayers",void 0),o([W("sublayers",{layers:{type:[k]}})],i.prototype,"writeSublayers",null),o([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),o([a()],i.prototype,"tileServers",null),o([U("tileServers")],i.prototype,"castTileServers",null),o([a({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),o([a(G)],i.prototype,"url",void 0),i=d=o([j("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const Xe=i;export{Xe as default};
