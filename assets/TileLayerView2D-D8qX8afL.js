import{e as u,a as w,b as l,D as y,i as I,c as n,m as f,d as T}from"./Identifiable-BjM0PfdN.js";import{c as V}from"./GraphicsCollection-B9Sj62PJ.js";import"./colorUtils-Da3inJZr.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./floatRGBA-BCeZwSgH.js";import"./definitions-CASyCajO.js";import"./UpdateTracking2D-D-BklBCo.js";import"./TextSymbol-DPyc43q3.js";import"./GeometryUtils-DZ7Gm0us.js";import"./vec2f32-CaVKkSa6.js";import"./defaults-DZVYugxa.js";import"./OverrideHelper-Cpw4NAcE.js";import"./Container-Dh4YuLhU.js";import{h as H,p as v,r as C}from"./enums-BuAlJCBy.js";import"./WGLContainer-BfNvqaHf.js";import"./enums-UBzvFP7O.js";import"./Texture-I7zBxmlP.js";import"./Utils-C7F0koJ1.js";import{c as q}from"./MapView-XXhq0wAO.js";import"./StyleDefinition-C4LQ4gTA.js";import"./constants-B-jzO-JJ.js";import"./GridShader-CYevUP3Y.js";import"./pbf-nAs1algh.js";import"./TechniqueType-CFPo0AVB.js";import"./FramebufferObject-DxGXUHGJ.js";import"./FeatureCommandQueue-CD7SjxYe.js";import"./PieChartMeshWriter-h_jcvTHn.js";import"./constants-BFLErLYb.js";import"./aaBoundingBox-BrXqvn3i.js";import"./TimeOnly-BKNTMEoH.js";import"./UnknownTimeZone-C7APdNSb.js";import"./fieldUtils-Br-fPSxS.js";import"./renderState-vHoqBeQT.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-CfjOcJyp.js";import{O as U}from"./GraphicsView2D-3SzwPKyv.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import"./normalizeUtilsCommon-Bp_cDVNc.js";import"./asyncUtils-zc5DpkIL.js";import"./UpdatingHandles-DdU5IX8L.js";import"./projectionUtils-D3_kHwH-.js";import{r as b,o as m,n as d}from"./imageUtils-CXZF7IG-.js";import{S as P,u as Q}from"./LayerView-CLiTpaAu.js";import{a as S}from"./HighlightGraphicContainer-af0xn-xB.js";import{e as _}from"./TileKey-DR2srngJ.js";import{i as G}from"./RefreshableLayerView-CcWSvX7t.js";import{_ as L,P as k,i as F}from"./MapServiceLayerViewHelper-DOLltSzs.js";import{r as z}from"./drapedUtils-DZzMmPre.js";import{g as E}from"./Scheduler-COHy2lsX.js";import"./index-CVvIVqY1.js";import"./Graphic-C2Bnzy89.js";import"./PopupTemplate-CF36_3mn.js";import"./jsonUtils-DBuABSQZ.js";import"./typeUtils-U-Zf11cK.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-CP9PJ8Sp.js";import"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./screenUtils-aQeO9QTD.js";import"./PictureMarkerSymbol-DOPylmLK.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DwEGrxrA.js";import"./memoryEstimations-m6Z1UQ7X.js";import"./utils-Civwinu0.js";import"./rasterizingUtils-DbYVqSTS.js";import"./vec2-ChnYg_BJ.js";import"./Rect-CUzevAry.js";import"./ReactiveMap-sVzP5DGX.js";import"./defaultsJSON-GKolV7NZ.js";import"./FieldsIndex-CZ9IrKuX.js";import"./timeZoneUtils-DMYcWBGI.js";import"./ArcadeExpression-BVYrSaqO.js";import"./quantizationUtils-D70gL1s4.js";import"./parser-BAKViB6V.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-C8ai-EIY.js";import"./Queue-DILFUEQB.js";import"./signal-CHoLd7Dm.js";import"./quickselect-QQC62dOK.js";import"./Query-duJofNa2.js";import"./Field-FVkerAtx.js";import"./fieldType-ClovGbuQ.js";import"./Layer-CUjb8Y3m.js";import"./ProgramTemplate-BJvNm4_p.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./mat3-CruJiiUv.js";import"./vec32-rHWgUfNj.js";import"./config-DHajyIwB.js";import"./vec2f64-Cgb6qxNH.js";import"./featureConversionUtils-CpHGKGMV.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./Cyclical-B0bcmwRe.js";import"./CollectionFlattener-CiW0r4Pq.js";import"./workers-BNUpPbJD.js";import"./intl-ByqrfC_d.js";import"./number-CsIuR4Me.js";import"./TileInfo-gIGeOzNG.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-D4gVuCa_.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./Map-C7AlwcQg.js";import"./Basemap-DEy_TBwO.js";import"./loadAll-tu8QdrIx.js";import"./PortalItem-5OKFVWCx.js";import"./writeUtils-DJnvrJq1.js";import"./layerUtils-CmDKJw7q.js";import"./persistable-Dy9UTZKT.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-B5tMzp3X.js";import"./PolygonCollection-CkOPuE2h.js";import"./TablesMixin-N_koq_xq.js";import"./HeightModelInfo-BaIW4m76.js";import"./ViewingMode-Chk7YAAL.js";import"./normalizeUtils-DfEBCyY7.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-CKvAsRxn.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-CWer4Z2d.js";import"./GraphShaderModule-vUIflZOb.js";import"./ShaderBuilder-CVhDmvmz.js";import"./BindType-BBwFZqyN.js";import"./utils-CYQStVwU.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-ChDN30BI.js";import"./lengthUtils-BDJ7rNGW.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-7OvtbouS.js";import"./libtess-DcvfMkTF.js";import"./enum-C-GuSG8G.js";import"./basicInterfaces-CZwQPxTp.js";import"./AttributeStore-ChriEgvw.js";import"./labelUtils-NFOL2PSf.js";import"./diffUtils-B0wxD3C_.js";import"./queryUtils-BLXKDnEb.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CZ5VO20t.js";import"./normalizeUtilsSync-EBe9_AkK.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-DL7ak8y5.js";import"./BitmapTechnique-DlfexCfL.js";import"./bitmapUtils-Mvsl7uVV.js";import"./TileContainer-D3qnVZFx.js";import"./layerViewUtils-BaHdVB92.js";import"./AGraphicContainer-3lbOG70M.js";import"./TechniqueInstance-D5uticL1.js";import"./scaleUtils-FdYBOJJY.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-D6vhgRrU.js";import"./popupUtils-Bj0zNZkQ.js";const W=[0,0];let s=class extends G(b(P(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:E.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>z(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:r,property:h})=>e.graphicUpdateHandler({graphic:r,property:h}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=F(t);if(e.length===0)return u();const r=(i==null?void 0:i.name)??q;return this._addHighlightGraphics(e,r),u(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return w((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(h){if(l(h))throw h;if(!this.resampling)return m(this._tileInfoView.tileInfo.size);if(r<3){const o=this._tileInfoView.getTileParentId(t.id);if(o){const p=new _(o),a=await this._fetchTileWithoutTilemapCache(p,{...i,resamplingLevel:r+1});return d(this._tileInfoView,a,p,t)}}return m(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i,o=new _(0,0,0,0);let p,a=null;try{if(a=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),!this.resampling&&o.level!==t.level)return await y(i),m(this._tileInfoView.tileInfo.size);p=await this._fetchImage(o,r)}catch(c){if(l(c))throw c;if(this.resampling&&a==="unknown"&&h<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){o.set(g);try{p=await this._fetchTileWithTilemapCache(o,{...i,resamplingLevel:h+1})}catch{}}}}return p?this.resampling?d(this._tileInfoView,p,o,t):p:m(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],s.prototype,"resampling",null),n([f()],s.prototype,"tilemapCache",null),s=n([T("esri.views.2d.layers.TileLayerView2D")],s);const ze=s;export{ze as default};
