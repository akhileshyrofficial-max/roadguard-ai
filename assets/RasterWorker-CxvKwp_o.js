import{c as f,bn as p,d as u,a3 as l,a0 as S}from"./Identifiable-_3rFZ1o6.js";import{c as d}from"./GeographicTransformation-D6izncCS.js";import{c as i,f as y,I as x,R as h,T as O,D as N,j as J,u as B,s as P}from"./dataUtils-Dr5KRzjN.js";import{h as g,j as b,_ as k,p as v}from"./RasterSymbolizer-Dc3ArwNG.js";import{T as w}from"./rasterFunctionHelper-6S1OmDnr.js";import{v as z,s as T}from"./rasterProjectionHelper-BWJ4uK2N.js";import{t as D,m as $,n as I}from"./PolynomialTransform-gGC_3BAQ.js";import"./index-BEHHhRxI.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./colorUtils-DQQagumJ.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./jsonUtils-Cc67rW5Z.js";import"./typeUtils-mxDsOnhk.js";import"./clipUtils-CEFueasy.js";import"./colorRamps-BmQEv1lz.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";import"./projectionUtils-BdqPecQc.js";var c;let m=c=class extends D{constructor(){super(...arguments),this.type="identity"}clone(){return new c}};f([p({IdentityXform:"identity"})],m.prototype,"type",void 0),m=c=f([u("esri.layers.support.rasterTransforms.IdentityTransform")],m);const j={GCSShiftXform:I,IdentityXform:m,PolynomialXform:$};function F(n){if(!(n==null?void 0:n.type))return null;const e=j[n==null?void 0:n.type];if(e){const o=new e;return o.read(n),o}return null}class ot{convertVectorFieldData(t){const e=i.fromJSON(t.pixelBlock),o=y(e,t.type);return Promise.resolve(o!=null?o.toJSON():null)}computeStatisticsHistograms(t){const e=i.fromJSON(t.pixelBlock),o=g(e);return Promise.resolve(o)}async decode(t){const e=await b(t.data,t.options);return e&&e.toJSON()}symbolize(t){t.pixelBlock=i.fromJSON(t.pixelBlock),t.extent=t.extent?l.fromJSON(t.extent):null;const e=this.symbolizer.symbolize(t);return Promise.resolve(e!=null?e.toJSON():null)}async updateSymbolizer(t){var e;this.symbolizer=k.fromJSON(t.symbolizerJSON),t.histograms&&((e=this.symbolizer)==null?void 0:e.rendererJSON.type)==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=t.histograms)}async updateRasterFunction(t){this.rasterFunction=w(t.rasterFunctionJSON)}async process(t){var o;const e=this.rasterFunction.process({extent:l.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map(r=>r!=null?i.fromJSON(r):null),primaryPixelSizes:(o=t.primaryPixelSizes)==null?void 0:o.map(r=>r!=null?S.fromJSON(r):null),primaryRasterIds:t.primaryRasterIds});return e!=null?e.toJSON():null}stretch(t){const e=this.symbolizer.simpleStretch(i.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(e==null?void 0:e.toJSON())}estimateStatisticsHistograms(t){const e=v(i.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){const e=x(i.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel??0,t.useBilinear===!1);return e&&e.forEach((o,r)=>{e.set(r,o==null?void 0:o.toJSON())}),Promise.resolve(e)}clipTile(t){const e=i.fromJSON(t.pixelBlock),o=h({...t,pixelBlock:e});return Promise.resolve(o==null?void 0:o.toJSON())}async mosaicAndTransform(t){const e=t.srcPixelBlocks.map(a=>a?new i(a):null),o=O(e,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize});let r,s=o;return t.coefs&&(s=N(o,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(r=J(t.destDimension,t.gcsGrid),s=B(s,t.isUV?"vector-uv":"vector-magdir",r)),{pixelBlock:s==null?void 0:s.toJSON(),localNorthDirections:r}}async createFlowMesh(t,e){const o={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:r,indexData:s}=await P(t.meshType,t.simulationSettings,o,e.signal);return{result:{vertexBuffer:r.buffer,indexBuffer:s.buffer},transferList:[r.buffer,s.buffer]}}async getProjectionOffsetGrid(t){var a;const e=l.fromJSON(t.projectedExtent),o=l.fromJSON(t.srcBufferExtent);let r=null;(a=t.datumTransformationSteps)!=null&&a.length&&(r=new d({steps:t.datumTransformationSteps})),await z();const s=t.rasterTransform?F(t.rasterTransform):null;return T({...t,projectedExtent:e,srcBufferExtent:o,datumTransformation:r,rasterTransform:s})}}export{ot as default};
