import{e as u,a as w,b as l,D as y,i as I,c as n,m as f,d as T}from"./Identifiable-_3rFZ1o6.js";import{c as V}from"./GraphicsCollection-csXasQht.js";import"./colorUtils-DQQagumJ.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./floatRGBA-xT4oRKt0.js";import"./definitions-CASyCajO.js";import"./UpdateTracking2D-D5YHt5xb.js";import"./TextSymbol-keZwKiPd.js";import"./GeometryUtils-CiPYWcEQ.js";import"./vec2f32-CaVKkSa6.js";import"./defaults-CSNv9gRz.js";import"./OverrideHelper-_hwADhTN.js";import"./Container-CcJYSbbJ.js";import{h as H,p as v,r as C}from"./enums-NCSMZWP1.js";import"./WGLContainer-CidQwXho.js";import"./enums-UBzvFP7O.js";import"./Texture-BILrrMzS.js";import"./Utils-BG5m93IY.js";import{c as q}from"./MapView-DvC1rydD.js";import"./StyleDefinition-C4LQ4gTA.js";import"./constants-B-jzO-JJ.js";import"./GridShader-Dv5Fz5bs.js";import"./pbf-CS5_6Vtc.js";import"./TechniqueType-CFPo0AVB.js";import"./FramebufferObject-Dg06wJiA.js";import"./FeatureCommandQueue-C3gIm0uk.js";import"./PieChartMeshWriter-DnCRRp1U.js";import"./constants-BFLErLYb.js";import"./aaBoundingBox-DNlIzH5i.js";import"./TimeOnly-YXxQ25V6.js";import"./UnknownTimeZone-CpPKXuRf.js";import"./fieldUtils-z3GG2R-H.js";import"./renderState-vHoqBeQT.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-BPqm-Uh3.js";import{O as U}from"./GraphicsView2D-BkBvRhzC.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import"./normalizeUtilsCommon-Ca72SEzL.js";import"./asyncUtils-CmphLL3n.js";import"./UpdatingHandles-BZb3Zh99.js";import"./projectionUtils-BdqPecQc.js";import{r as b,o as m,n as d}from"./imageUtils-Cx4QjZJ2.js";import{S as P,u as Q}from"./LayerView-DyDwgwDB.js";import{a as S}from"./HighlightGraphicContainer-D7GDFClf.js";import{e as _}from"./TileKey-upwcIO5W.js";import{i as G}from"./RefreshableLayerView-GSOltMDM.js";import{_ as L,P as k,i as F}from"./MapServiceLayerViewHelper-CDmQsaSN.js";import{r as z}from"./drapedUtils-BVag5CrE.js";import{g as E}from"./Scheduler-DH2YvKGe.js";import"./index-BEHHhRxI.js";import"./Graphic-q_7OAYHf.js";import"./PopupTemplate-B09IYibB.js";import"./jsonUtils-Cc67rW5Z.js";import"./typeUtils-mxDsOnhk.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Buir9u-w.js";import"./SimpleMarkerSymbol-Drowg4jp.js";import"./screenUtils-aQeO9QTD.js";import"./PictureMarkerSymbol-DlgeV3xL.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-C57xHwXW.js";import"./memoryEstimations-BG_NSMOj.js";import"./utils-DrbBeUzW.js";import"./rasterizingUtils-CdiTAUhT.js";import"./vec2-ChnYg_BJ.js";import"./Rect-CUzevAry.js";import"./ReactiveMap-DptZZMoQ.js";import"./defaultsJSON-GKolV7NZ.js";import"./FieldsIndex-BTwzr3dJ.js";import"./timeZoneUtils-Cef7SfoB.js";import"./ArcadeExpression-u2IaIuRW.js";import"./quantizationUtils-C8uJ5ebt.js";import"./parser-BgHAYnRY.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CEszlm-2.js";import"./Queue-CJjQn74K.js";import"./signal-R7pX2aet.js";import"./quickselect-QQC62dOK.js";import"./Query-Dp8boimB.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";import"./Layer--GugXUPW.js";import"./ProgramTemplate-Dv_NJ-sZ.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./mat3-CruJiiUv.js";import"./vec32-soPbwaVZ.js";import"./config-DHajyIwB.js";import"./vec2f64-Cgb6qxNH.js";import"./featureConversionUtils-scwmf_ir.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./Cyclical-C1_PpBfH.js";import"./CollectionFlattener-kjXuGTXg.js";import"./workers-BcCT7nhd.js";import"./intl-Beb5GWXc.js";import"./number-7p_O6jwX.js";import"./TileInfo-CvSYzqJL.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BbJVeaDA.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./Map-BfsPAzzq.js";import"./Basemap-xdFWd_Ef.js";import"./loadAll-MI_JOpdU.js";import"./PortalItem-Dn4oT_Gd.js";import"./writeUtils-CFLt5Al1.js";import"./layerUtils-CFmFO8Du.js";import"./persistable-DdbzkEuJ.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-a1-4zqTB.js";import"./PolygonCollection-CMbOuNoO.js";import"./TablesMixin-DOSIq3qh.js";import"./HeightModelInfo-C8sA4bKM.js";import"./ViewingMode-Chk7YAAL.js";import"./normalizeUtils-BS0bJnzn.js";import"./utils-C73sopP7.js";import"./utils-UVgDzRJn.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-DN-q3Lg0.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-BR-Ucixf.js";import"./GraphShaderModule-B0iY7h0y.js";import"./ShaderBuilder-CT-EKmsJ.js";import"./BindType-BBwFZqyN.js";import"./utils-BLo0aQ8v.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-CnPSz6v-.js";import"./lengthUtils-CrwfL9_h.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BZCvf8_s.js";import"./libtess-B86nGuKR.js";import"./enum-DaKdEk_o.js";import"./basicInterfaces-CZwQPxTp.js";import"./AttributeStore-BDrrFxke.js";import"./labelUtils-BoctouOq.js";import"./diffUtils-C5CsICXC.js";import"./queryUtils-Cag0ceeo.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Btk7Sbvt.js";import"./normalizeUtilsSync-2v9P1_zl.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-D_C0Fb3K.js";import"./BitmapTechnique-xCyagY7Y.js";import"./bitmapUtils-DvN83-9m.js";import"./TileContainer-C_diT5X9.js";import"./layerViewUtils-CSVHLqOP.js";import"./AGraphicContainer-sL5vbjCA.js";import"./TechniqueInstance-DAQJyYqb.js";import"./scaleUtils-B8vcNDUc.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-B8JaGme3.js";import"./popupUtils-DzrmKBBc.js";const W=[0,0];let s=class extends G(b(P(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:E.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>z(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:r,property:h})=>e.graphicUpdateHandler({graphic:r,property:h}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=F(t);if(e.length===0)return u();const r=(i==null?void 0:i.name)??q;return this._addHighlightGraphics(e,r),u(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return w((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(h){if(l(h))throw h;if(!this.resampling)return m(this._tileInfoView.tileInfo.size);if(r<3){const o=this._tileInfoView.getTileParentId(t.id);if(o){const p=new _(o),a=await this._fetchTileWithoutTilemapCache(p,{...i,resamplingLevel:r+1});return d(this._tileInfoView,a,p,t)}}return m(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i,o=new _(0,0,0,0);let p,a=null;try{if(a=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),!this.resampling&&o.level!==t.level)return await y(i),m(this._tileInfoView.tileInfo.size);p=await this._fetchImage(o,r)}catch(c){if(l(c))throw c;if(this.resampling&&a==="unknown"&&h<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){o.set(g);try{p=await this._fetchTileWithTilemapCache(o,{...i,resamplingLevel:h+1})}catch{}}}}return p?this.resampling?d(this._tileInfoView,p,o,t):p:m(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],s.prototype,"resampling",null),n([f()],s.prototype,"tilemapCache",null),s=n([T("esri.views.2d.layers.TileLayerView2D")],s);const ze=s;export{ze as default};
