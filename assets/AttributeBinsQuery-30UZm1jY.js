import{ad as l,T as u,i as d,ar as m,c as e,m as r,bn as o,al as n,d as y,bs as c}from"./Identifiable-_3rFZ1o6.js";import{f as h}from"./jsonUtils-Cc67rW5Z.js";import{l as v}from"./typeUtils-mxDsOnhk.js";import{g as a}from"./queryUtils-Cag0ceeo.js";import{m as f,n as w,a as b,b as j,y as g}from"./FixedIntervalBinParameters-CqHG-zwl.js";import{p as S,s as $}from"./Query-Dp8boimB.js";import{u as R}from"./Layer--GugXUPW.js";import{p as T}from"./timeZoneUtils-Cef7SfoB.js";import"./index-BEHHhRxI.js";import"./projectionUtils-BdqPecQc.js";import"./normalizeUtils-BS0bJnzn.js";import"./normalizeUtilsCommon-Ca72SEzL.js";import"./utils-C73sopP7.js";import"./utils-UVgDzRJn.js";import"./json-Wa8cmqdu.js";import"./NormalizationBinParametersMixin-DdJue4AE.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";const B=new m({asc:"ascending",desc:"descending"}),x={base:g,key:"type",typeMap:{"auto-interval":j,date:b,"fixed-boundaries":w,"fixed-interval":f}};let t=class extends l.ClonableMixin(u){constructor(i){super(i),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(i){this._set("outTimeZone",i),i&&!T(i)&&d.getLogger(this).warn("#outTimeZone",`the parsed value '${i}' may not be a valid IANA time zone`)}};e([r({types:x,json:{name:"bin",write:!0}})],t.prototype,"binParameters",void 0),e([o(B)],t.prototype,"binOrder",void 0),e([r({type:Boolean,json:{write:!0}})],t.prototype,"cacheHint",void 0),e([r({json:{write:!0}})],t.prototype,"datumTransformation",void 0),e([r({type:n,json:{name:"defaultSR",write:!0}})],t.prototype,"defaultSpatialReference",void 0),e([r({type:Number,json:{write:{overridePolicy:i=>({enabled:i>0})}}})],t.prototype,"distance",void 0),e([r({types:v,json:{read:h,write:!0}})],t.prototype,"geometry",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"lowerBoundaryAlias",void 0),e([r({type:n,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([r({type:[S],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],t.prototype,"outStatistics",void 0),e([r({value:null,json:{name:"outTimeReference",read:{reader:i=>i.ianaTimeZone},write:{writer:(i,s,p)=>{i&&(s[p]={ianaTimeZone:i})}}}})],t.prototype,"outTimeZone",null),e([r({type:Boolean,json:{write:!0}})],t.prototype,"returnDistinctValues",void 0),e([o($,{name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([r({type:R,json:{write:!0}})],t.prototype,"timeExtent",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"upperBoundaryAlias",void 0),e([r({type:String,json:{read:a.read,write:{writer:a.write,overridePolicy(i){return{enabled:i!=null&&this.distance!=null}}}}})],t.prototype,"units",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([y("esri.rest.support.AttributeBinsQuery")],t),t.from=c(t);export{t as default};
