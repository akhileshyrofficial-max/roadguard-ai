const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/MapView-XXhq0wAO.js","assets/Identifiable-BjM0PfdN.js","assets/index-CVvIVqY1.js","assets/Cyclical-B0bcmwRe.js","assets/jsonUtils-DBuABSQZ.js","assets/typeUtils-U-Zf11cK.js","assets/CollectionFlattener-CiW0r4Pq.js","assets/workers-BNUpPbJD.js","assets/Queue-DILFUEQB.js","assets/intl-ByqrfC_d.js","assets/number-CsIuR4Me.js","assets/projectionUtils-D3_kHwH-.js","assets/TileInfo-gIGeOzNG.js","assets/TileKey-DZd6gJy7.js","assets/jsxFactory-D4gVuCa_.js","assets/uuid-Cl5lrJ4c.js","assets/sanitizerUtils-CJlLEeXg.js","assets/jsxFactory-CQED0rIl.css","assets/UpdatingHandles-DdU5IX8L.js","assets/asyncUtils-zc5DpkIL.js","assets/signal-CHoLd7Dm.js","assets/Map-C7AlwcQg.js","assets/Basemap-DEy_TBwO.js","assets/loadAll-tu8QdrIx.js","assets/PortalItem-5OKFVWCx.js","assets/writeUtils-DJnvrJq1.js","assets/layerUtils-CmDKJw7q.js","assets/persistable-Dy9UTZKT.js","assets/MD5-C9MwAd2G.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/resourceExtension-B5tMzp3X.js","assets/PolygonCollection-CkOPuE2h.js","assets/mat4f32-Djp3mnm5.js","assets/mat4-C8ai-EIY.js","assets/common-DQOJ18NT.js","assets/TablesMixin-N_koq_xq.js","assets/Layer-CUjb8Y3m.js","assets/GraphicsCollection-B9Sj62PJ.js","assets/Graphic-C2Bnzy89.js","assets/PopupTemplate-CF36_3mn.js","assets/fieldUtils-Br-fPSxS.js","assets/createFeatureId-BiB9j2WD.js","assets/typeUtils-CP9PJ8Sp.js","assets/SimpleMarkerSymbol-D-X_CJ8B.js","assets/screenUtils-aQeO9QTD.js","assets/aaBoundingBox-BrXqvn3i.js","assets/TextSymbol-DPyc43q3.js","assets/PictureMarkerSymbol-DOPylmLK.js","assets/HeightModelInfo-BaIW4m76.js","assets/timeZoneUtils-DMYcWBGI.js","assets/ReactiveMap-sVzP5DGX.js","assets/Query-duJofNa2.js","assets/Field-FVkerAtx.js","assets/fieldType-ClovGbuQ.js","assets/ViewingMode-Chk7YAAL.js","assets/vec2-ChnYg_BJ.js","assets/vec2f64-Cgb6qxNH.js","assets/enums-BuAlJCBy.js","assets/TileKey-DR2srngJ.js","assets/quickselect-QQC62dOK.js","assets/normalizeUtils-DfEBCyY7.js","assets/normalizeUtilsCommon-Bp_cDVNc.js","assets/utils-C83x6Enz.js","assets/utils-CFSOSud-.js","assets/mat3-CruJiiUv.js","assets/vec2f32-CaVKkSa6.js","assets/Scheduler-COHy2lsX.js","assets/vec32-rHWgUfNj.js","assets/unitBezier-B1N-tmtC.js","assets/definitions-CASyCajO.js","assets/enums-UBzvFP7O.js","assets/Texture-I7zBxmlP.js","assets/getDataTypeBytes-D2DiHx_d.js","assets/imageUtils-CKvAsRxn.js","assets/capabilities-Cggz07g5.js","assets/ILyr3DWasmPerSceneView-CIC-HPGZ.js","assets/Version-CWer4Z2d.js"])))=>i.map(i=>d[i]);
import{_ as Fe}from"./index-CVvIVqY1.js";import{i as ut,n as dt,dX as or,dd as B,b5 as ne,en as Er,H as we,A as zr,aB as kr,s as Me,aw as pt,b as yt,ao as Ar,aA as Ir,az as Fr,v as Xe,f2 as Br,u as Ne,gb as $r,B as vt,a0 as Lr,aS as Dr,ah as bt,gc as Nr,db as nr,z as Ur,l as ye,f as ot,at as Vr,a as xt,cm as wt}from"./Identifiable-BjM0PfdN.js";import{r as Gr}from"./signal-CHoLd7Dm.js";import{e as Ue,H as qr,I as Hr,J as Mt,K as Wr,L as jr}from"./MapView-XXhq0wAO.js";import{i as Xr}from"./colorUtils-Da3inJZr.js";import{C as Ie,D as Yr,a as fe,t as Jr,E as Kr,F as Qr,G as Zr,H as ei,I as ti}from"./UpdateTracking2D-D-BklBCo.js";import{u as de,e as ri}from"./screenUtils-aQeO9QTD.js";import{l as St,n as ii,q as si,r as ai,o as oi}from"./FeatureCommandQueue-CD7SjxYe.js";import{n as E}from"./defaultCIMValues-BrbaHf9c.js";import{s as lr,d as nt,i as Be,a as Re}from"./enums-BPiq_WIC.js";import{m as $e,h as Ct,c as ni,a as li,u as hi}from"./SDFHelper-BFs4x90l.js";import{Z as O,_ as Ot,b as Pt,U as hr,o as ci,M as D,p as ui,x as di,k as Ee,h as C,X as Ye,q as Je,d as se,G as Tt,A as pi,N as Rt,T as mi,L as fi,E as _i,v as gi,J as yi,j as vi,O as bi,R as cr,f as xi}from"./utils-Civwinu0.js";import{l as wi,f as Mi,m as Si,g as Ci}from"./rasterizingUtils-DbYVqSTS.js";import{_ as lt}from"./PieChartMeshWriter-h_jcvTHn.js";import{v as he}from"./OverrideHelper-Cpw4NAcE.js";import{o as ur,F as Oi,n as Et,t as te,p as Ke,U as Pi,u as zt,r as Ti,v as Ri,C as ht,E as Ei,H as ge,I as zi,Y as ki,S as kt,X as Ai,W as Ii,J as At,O as Fi}from"./definitions-CASyCajO.js";import{n as Bi,e as mt}from"./Container-Dh4YuLhU.js";import{A as ze,E as j}from"./enums-BuAlJCBy.js";import{c as $i,e as It,m as Ft,i as Li,d as Di}from"./WGLContainer-BfNvqaHf.js";import{L as q}from"./constants-B-jzO-JJ.js";import{e as Ni,b as Le,o as dr,E as pr}from"./ProgramTemplate-BJvNm4_p.js";import{glslifyDefineMap as Ve}from"./webglDeps-C9ED_iEO.js";import{e as Bt,r as Ui,h as Vi,D as Gi,t as qi,a as Hi,n as Wi,b as ji,E as Xi,_ as Yi}from"./GridShader-CYevUP3Y.js";import{p as ac,y as oc}from"./GridShader-CYevUP3Y.js";import{A as M,R as ve,Y as mr,M as L,P as k,X as ft,L as V,C as ct,_ as N,D as Qe,O as be,V as Ji,H as fr,T as $t,S as Ze,B as _r,e as Ki}from"./enums-UBzvFP7O.js";import{o as Qi,n as Se,v as Zi}from"./RenderingContext-DcajNlEA.js";import{QueueProcessor as es}from"./QueueProcessor-7OvtbouS.js";import{i as ts}from"./CIMResourceManager-qvNJrikL.js";import{t as W}from"./Rect-CUzevAry.js";import{a as A,S as K,d as rs}from"./Texture-I7zBxmlP.js";import{a as Lt}from"./pbf-nAs1algh.js";import{o as is}from"./floatRGBA-BCeZwSgH.js";import{r as ss}from"./AttributeStore-ChriEgvw.js";import{k as as,p as os,l as ns}from"./Utils-C7F0koJ1.js";import{c as ls}from"./utils-CHI_-_6S.js";import{u as hs}from"./common-DQOJ18NT.js";import{l as cs,f as Dt,h as gr,M as yr,m as us,b as ds}from"./mat3-CruJiiUv.js";import{r as ps,n as vr}from"./vec2f64-Cgb6qxNH.js";import{o as et}from"./vec32-rHWgUfNj.js";import{t as Ge}from"./utils-ehcGqGxa.js";import{t as qe}from"./GraphShaderModule-vUIflZOb.js";import{e as He}from"./TechniqueType-CFPo0AVB.js";import{t as xe}from"./VertexElementDescriptor-BLyltQyJ.js";import{R as X,i as _t,s as ms}from"./FramebufferObject-DxGXUHGJ.js";import{y as fs}from"./MeshWriterRegistry-Daijll1y.js";import{load as _s,execute as gs}from"./projectOperator-DBmh5KQk.js";import{O as lc}from"./GraphicsView2D-3SzwPKyv.js";import{t as cc}from"./GraphicContainer-sBPYGhV3.js";import{d as ys}from"./asyncUtils-zc5DpkIL.js";import{h as vs}from"./UpdatingHandles-DdU5IX8L.js";import{t as Nt}from"./requestImageUtils-DDbYZwJ1.js";import{o as Ut,B as bs,l as tt,I as rt}from"./vec2-ChnYg_BJ.js";import{a as it}from"./vec2f32-CaVKkSa6.js";import{U as xs,O as ws}from"./projectionUtils-D3_kHwH-.js";import{P as Ms}from"./normalizeUtils-DfEBCyY7.js";import{u as Ss}from"./scaleUtils-FdYBOJJY.js";import{t as Cs,u as Os,l as Ps}from"./gridUtils-DSoWmoQV.js";import"./Cyclical-B0bcmwRe.js";import"./jsonUtils-DBuABSQZ.js";import"./typeUtils-U-Zf11cK.js";import"./CollectionFlattener-CiW0r4Pq.js";import"./workers-BNUpPbJD.js";import"./Queue-DILFUEQB.js";import"./intl-ByqrfC_d.js";import"./number-CsIuR4Me.js";import"./TileInfo-gIGeOzNG.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-D4gVuCa_.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./Map-C7AlwcQg.js";import"./Basemap-DEy_TBwO.js";import"./loadAll-tu8QdrIx.js";import"./PortalItem-5OKFVWCx.js";import"./writeUtils-DJnvrJq1.js";import"./layerUtils-CmDKJw7q.js";import"./persistable-Dy9UTZKT.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-B5tMzp3X.js";import"./PolygonCollection-CkOPuE2h.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-C8ai-EIY.js";import"./TablesMixin-N_koq_xq.js";import"./Layer-CUjb8Y3m.js";import"./GraphicsCollection-B9Sj62PJ.js";import"./Graphic-C2Bnzy89.js";import"./PopupTemplate-CF36_3mn.js";import"./fieldUtils-Br-fPSxS.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-CP9PJ8Sp.js";import"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./aaBoundingBox-BrXqvn3i.js";import"./TextSymbol-DPyc43q3.js";import"./PictureMarkerSymbol-DOPylmLK.js";import"./HeightModelInfo-BaIW4m76.js";import"./timeZoneUtils-DMYcWBGI.js";import"./ReactiveMap-sVzP5DGX.js";import"./Query-duJofNa2.js";import"./Field-FVkerAtx.js";import"./fieldType-ClovGbuQ.js";import"./ViewingMode-Chk7YAAL.js";import"./Scheduler-COHy2lsX.js";import"./unitBezier-B1N-tmtC.js";import"./TileKey-DR2srngJ.js";import"./imageUtils-CKvAsRxn.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-CWer4Z2d.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DwEGrxrA.js";import"./memoryEstimations-m6Z1UQ7X.js";import"./GeometryUtils-DZ7Gm0us.js";import"./defaults-DZVYugxa.js";import"./defaultsJSON-GKolV7NZ.js";import"./utils-CYQStVwU.js";import"./constants-BFLErLYb.js";import"./lengthUtils-BDJ7rNGW.js";import"./streamLayerUtils-CKwt2uXH.js";import"./libtess-DcvfMkTF.js";import"./earcut-D9gy186-.js";import"./FieldsIndex-CZ9IrKuX.js";import"./UnknownTimeZone-C7APdNSb.js";import"./ArcadeExpression-BVYrSaqO.js";import"./TimeOnly-BKNTMEoH.js";import"./enum-C-GuSG8G.js";import"./quantizationUtils-D70gL1s4.js";import"./parser-BAKViB6V.js";import"./quickselect-QQC62dOK.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4LQ4gTA.js";import"./config-DHajyIwB.js";import"./featureConversionUtils-CpHGKGMV.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./NestedMap-C3hRTnZR.js";import"./CircularArray-CujHzHWW.js";import"./testSVGPremultipliedAlpha-CfjOcJyp.js";import"./SymbolFader-ChDN30BI.js";import"./renderState-vHoqBeQT.js";import"./basicInterfaces-CZwQPxTp.js";import"./glsl-Cj7KC756.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./labelUtils-NFOL2PSf.js";import"./diffUtils-B0wxD3C_.js";import"./queryUtils-BLXKDnEb.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CZ5VO20t.js";import"./ShaderBuilder-CVhDmvmz.js";import"./BindType-BBwFZqyN.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./normalizeUtilsSync-EBe9_AkK.js";import"./normalizeUtilsCommon-Bp_cDVNc.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-DL7ak8y5.js";import"./AGraphicContainer-3lbOG70M.js";import"./TechniqueInstance-D5uticL1.js";import"./TileContainer-D3qnVZFx.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";import"./geodesicUtils-Cr-plA6M.js";function ae(n,e,t){return{transform:Ds(n,e,t.transform),fromColor:Ns(n,e,t.fromColor),toColor:Us(n,e,t.toColor),colorMix:Vs(n,e,t.colorMix),toOpacity:Gs(n,e,t.toOpacity),opacityMix:qs(n,e,t.opacityMix),shift:Hs(n,e,t.shift),hasAnimations:t.hasAnimations||Ts(e),hasShiftAnimation:t.hasShiftAnimation||Rs(e),hasMotionAnimations:t.hasMotionAnimations||zs(e)}}function Ts(n){return!!n.animations&&n.animations.length>0}function Rs(n){return!!n.animations&&n.animations.some(e=>e.type==="CIMSymbolAnimationMoveAlongLine")}const Es=new Set(["CIMSymbolAnimationOffset","CIMSymbolAnimationRotation","CIMSymbolAnimationSize","CIMSymbolAnimationScale"]);function zs(n){return!!n.animations&&n.animations.some(e=>Es.has(e.type))}function br(n){return!St.forceStaticPath&&(St.forceAnimatedPath||n.hasAnimations)}function ks(n,e,t){if(e.type==="CIMCharacterMarker")return ut.getLogger("animationUtils").error("#handleMarker()","CIM character markers do not support animations"),t;const r=O(n,e,"OffsetX"),i=O(n,e,"OffsetY");if(e.type==="CIMPictureMarker")return{...t,transform:{type:"AnimatedTransform",relativeTranslation:!1,absoluteScale:!0,translation:P([r,i]),rotation:P(0),scale:P(O(n,e,"Size")),parent:t.transform}};const s=e.frame,a=s.ymax-s.ymin;return{...t,transform:{type:"AnimatedTransform",relativeTranslation:!1,absoluteScale:!1,translation:P([r,i]),rotation:P(0),scale:P({type:"Process",op:"Divide",left:O(n,e,"Size"),right:a}),parent:t.transform}}}function xr(n,e){let t=0,r=0;const i=n.anchorPointUnits!=="Absolute";return n.anchorPoint&&(t=-n.anchorPoint.x,r=-n.anchorPoint.y),{...e,transform:{type:"AnimatedTransform",relativeTranslation:i,absoluteScale:!1,translation:P([t,r]),rotation:P(0),scale:P(1),parent:e.transform}}}function As(n,e){return n.anchorPointUnits==="Absolute"?e:xr(n,e)}function Is(n,e){return n.anchorPointUnits!=="Absolute"?e:xr(n,e)}function Fs(n,e,t){return{...n,transform:{type:"AnimatedTransform",relativeTranslation:!1,absoluteScale:!1,translation:P([e,t]),rotation:P(0),scale:P(1),parent:n.transform}}}function Bs(n,e){const t=e?.5*-(e.xmin+e.xmax):0,r=e?.5*-(e.ymin+e.ymax):0;let i=0,s=0;if("x"in n&&"y"in n)i=n.x+t,s=n.y+r;else{const a=$e(n);a&&(i=(a[0]+a[2])/2+t,s=(a[1]+a[3])/2+r)}return[i,s]}function $s(n,e){switch(e.type){case"CIMPictureMarker":case"CIMVectorMarker":return O(n,e,"Rotation")}return 0}function Ls(n,e){switch(e.type){case"CIMPictureMarker":case"CIMVectorMarker":return O(n,e,"RotateClockwise")}return 0}function wr(n,e){switch(e.type){case"CIMPointSymbol":case"CIMVectorMarker":return[1,1,1,1];case"CIMSolidStroke":case"CIMSolidFill":return O(n,e,"Color");case"CIMPictureMarker":case"CIMPictureStroke":case"CIMPictureFill":return O(n,e,"TintColor")}return[1,1,1,1]}function Ds(n,e,t){return{type:"AnimatedTransform",relativeTranslation:!1,absoluteScale:!1,translation:js(n,e),rotation:Xs(n,e),scale:Ws(n,e),parent:t}}function Ns(n,e,t){return{type:"AnimatedColor",color:P(wr(n,e)),opacity:P(1),parent:t}}function Us(n,e,t){const{animations:r}=e;let i=wr(n,e);const s=r==null?void 0:r.filter(a=>a.type==="CIMSymbolAnimationColor")[0];return s&&(i=O(n,s,"ToColor")),{type:"AnimatedColor",color:P(i),opacity:P(1),parent:t}}function Vs(n,e,t){const{animations:r}=e,i=r==null?void 0:r.filter(s=>s.type==="CIMSymbolAnimationColor")[0];return i?{type:"AnimatedColor",color:P([1,1,1,1]),opacity:{from:0,to:1,timing:pe(n,i==null?void 0:i.animatedSymbolProperties)},parent:[1,1,1,1]}:t}function Gs(n,e,t){const{animations:r}=e;let i=P(1);const s=r==null?void 0:r.filter(a=>a.type==="CIMSymbolAnimationTransparency")[0];return s&&(i=P({type:"Process",op:"Transparency",value:O(n,s,"ToTransparency")})),{type:"AnimatedColor",color:P([1,1,1,1]),opacity:i,parent:t}}function qs(n,e,t){const{animations:r}=e,i=r==null?void 0:r.filter(s=>s.type==="CIMSymbolAnimationTransparency")[0];return i?{type:"AnimatedColor",color:P([1,1,1,1]),opacity:{from:0,to:1,timing:pe(n,i==null?void 0:i.animatedSymbolProperties)},parent:[1,1,1,1]}:t}function Hs(n,e,t){const{animations:r}=e,i=r==null?void 0:r.filter(p=>p.type==="CIMSymbolAnimationMoveAlongLine")[0];if(!i)return t;let s,a;const o=pe(n,i.animatedSymbolProperties),l=Ot(n,i,"DistanceAlong"),h=Ot(n,i,"Speed"),c=l&&O(n,i,"DistanceAlong"),u=h&&O(n,i,"Speed"),d=i.continuous===!0;if(c!==!1)s={type:"Process",op:"Divide",left:c,right:100},a=!0;else if(u!==!1)s={type:"Process",op:"Multiply",left:u,right:o.duration},a=!1;else{if(!d)throw new Error("Either distanceAlong, speed or continuous must be specified.");s=1,a=!0}return{type:"AnimatedShift",multiplyByLineLength:a,shift:{from:0,to:s,timing:o},parent:t}}function pe(n,e){if(!e)return{duration:1,startTimeOffset:0,repeatDelay:0,timeOriginSelector:Ie.Local,repeatType:nt.Loop,easing:lr.Linear,playAnimation:1,reverseAnimation:0};const t=O(n,e,"Duration");let r;O(n,e,"RandomizeStartTime")?r={type:"Process",op:"Random",min:0,max:t,seed:O(n,e,"RandomizeStartSeed")}:r=O(n,e,"StartTimeOffset");const i=O(n,e,"RepeatDelay"),s=O(n,e,"PlayAnimation"),a=O(n,e,"ReverseAnimation"),o=Pt(e.repeatType,E.CIMAnimatedSymbolProperties.repeattype);return{duration:t,startTimeOffset:r,repeatDelay:i,timeOriginSelector:o===nt.None?Ie.Local:Ie.Global,repeatType:o,easing:Pt(e.easing,E.CIMAnimatedSymbolProperties.easing),playAnimation:s,reverseAnimation:a}}function Ws(n,e){const{animations:t}=e;let r;r=e.type==="CIMPictureMarker"||e.type==="CIMVectorMarker"?O(n,e,"Size"):e.type==="CIMSolidStroke"||e.type==="CIMPictureStroke"?O(n,e,"Width"):hr(e)||10;const i=t==null?void 0:t.filter(s=>s.type==="CIMSymbolAnimationScale")[0];if(!i){const s=t==null?void 0:t.filter(a=>a.type==="CIMSymbolAnimationSize")[0];return s?{from:1,to:{type:"Process",op:"Divide",left:O(n,s,"ToSize"),right:r},timing:pe(n,s.animatedSymbolProperties)}:P(1)}return{from:1,to:O(n,i,"ScaleFactor"),timing:pe(n,i.animatedSymbolProperties)}}function js(n,e){const{animations:t}=e,r=t==null?void 0:t.filter(i=>i.type==="CIMSymbolAnimationOffset")[0];return r?{from:[0,0],to:[O(n,r,"OffsetX"),O(n,r,"OffsetY")],timing:pe(n,r.animatedSymbolProperties)}:P([0,0])}function Xs(n,e){const{animations:t}=e,r=Ls(n,e),i={type:"Process",op:"Divide",left:$s(n,e),right:{type:"Process",op:"Cond",condition:r,ifTrue:-1,ifFalse:1}},s=t==null?void 0:t.filter(o=>o.type==="CIMSymbolAnimationRotation")[0];if(!s)return P(i);const a={type:"Process",op:"Add",left:O(n,s,"ToRotation"),right:{type:"Process",op:"Divide",left:i,right:-1}};return{from:i,to:{type:"Process",op:"Add",left:i,right:{type:"Process",op:"Cond",condition:O(n,s,"RotateClockwise"),ifTrue:{type:"Process",op:"MatchWinding",sign:-1,angle:a},ifFalse:{type:"Process",op:"MatchWinding",sign:1,angle:a}}},timing:pe(n,s.animatedSymbolProperties)}}function P(n){return{from:n,to:n,timing:{duration:1,startTimeOffset:0,repeatDelay:0,timeOriginSelector:Ie.Local,repeatType:nt.Loop,easing:lr.Linear,playAnimation:1,reverseAnimation:0}}}function Mr(n){if(n==null||typeof n!="object")return!1;if(n.animations&&Array.isArray(n.animations)&&n.animations.length>0)return!0;for(const e in n)if(Mr(n[e]))return!0;return!1}const Ys=.01;function Js(n,e){if(!n.frame)return n;const{markerGraphics:t}=n;if(!t||t.length===0)return n;let r=0,i=0,s=0,a=0;for(const b of t){const{geometry:w,symbol:v}=b;if(!w||!v||!("symbolLayers"in v))continue;const{symbolLayers:S}=v;if(S)for(const T of S){const{effects:I}=T,z=lt.applyEffects(I,w,e),F=$e(z);F&&(r=Math.min(r,F[0]),i=Math.min(i,F[1]),s=Math.max(s,F[2]),a=Math.max(a,F[3]))}}const{xmin:o,ymin:l,xmax:h,ymax:c}=n.frame,u=(h-o)/2,d=(c-l)/2,p=(h+o)/2,m=(c+l)/2;if(u<=0||d<=0)return n;const _=(p-r)/u,g=(s-p)/u,y=(m-i)/d,f=(a-m)/d,x=Math.max(Math.max(_,g),Math.max(y,f));return x<=1+Ys||(n=dt(n)).frame&&(n.frame.xmin=(n.frame.xmin-p)*x+p,n.frame.ymin=(n.frame.ymin-m)*x+m,n.frame.xmax=(n.frame.xmax-p)*x+p,n.frame.ymax=(n.frame.ymax-m)*x+m,n.respectFrame!==!1&&(n.size*=x)),n}const Vt=()=>ut.getLogger("esri.symbols.cim.cimAnalyzer");function Ks(n){const e=n.markerPlacement;return e&&e.angleToLine?Be.MAP:Be.SCREEN}class Qs{constructor(e){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[],this._hasTextStringTemplates=!1,e&&(this._resourceManager=e)}analyzeSymbolReference(e,t,r){if(this._cimLayers=r??[],!e)return this._cimLayers;if(this._reset(),this._hasTextStringTemplates=e.hasTextStringTemplates??!1,e.primitiveOverrides){this._primitiveOverrides=e.primitiveOverrides;for(const i of this._primitiveOverrides){const s=i.valueExpressionInfo;if(s)this._setPoMap(i.primitiveName,i.propertyName,s);else if(i.value!=null){let a=i.value;i.propertyName.includes("Color")&&(Xr(a)&&(a=ci(a)),a=D(a)),this._setPoMap(i.primitiveName,i.propertyName,a)}}}return this._analyzeSymbol(e.symbol,t),this._cimLayers}_reset(){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[]}_analyzeSymbol(e,t){switch(e==null?void 0:e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":this._analyzeMultiLayerSymbol(e,t)}}_analyzeMultiLayerSymbol(e,t){const r=e==null?void 0:e.symbolLayers;if(!r)return;for(let c=0;c<r.length;c++){const u=r[c];u.type==="CIMVectorMarker"&&(r[c]=Js(u,this._resourceManager.geometryEngine))}const i=e.effects;let s=Be.SCREEN;const a=hr(e)??0;if(e.type==="CIMPointSymbol"&&e.angleAlignment==="Map"&&(s=Be.MAP),ia(r,i))return this._analyzeCompositeOutlineFill(r,i,a);let o={transform:[0,0,0,1],fromColor:[1,1,1,1],toColor:[1,1,1,1],colorMix:[0,0,0,0],toOpacity:[1,1,1,1],opacityMix:[0,0,0,0],shift:[1,1,1,1],hasAnimations:Mr(e),hasShiftAnimation:!1,hasMotionAnimations:!1};o=ae(this._poMap,e,o);const l=e.type==="CIMPolygonSymbol";let h=r.length;for(;h--;){const c=r[h];if(!c||c.enable===!1)continue;let u;i!=null&&i.length&&(u=[...i]);const d=c.effects;d!=null&&d.length&&(i?u.push(...d):u=[...d]);let p=null;if(u){p=[];for(const _ of u){const g=he.findEffectOverrides(_,this._primitiveOverrides);g&&p.push(g)}}const m=[];switch(he.findApplicableOverrides(c,this._primitiveOverrides,m),c.type){case"CIMSolidFill":this._analyzeSolidFill(c,p,o,di(r));break;case"CIMPictureFill":this._analyzePictureFill(c,p,o);break;case"CIMHatchFill":this._analyzeHatchFill(c,p);break;case"CIMGradientFill":this._analyzeGradientFill(c,p);break;case"CIMSolidStroke":this._analyzeSolidStroke(c,p,l,a,o);break;case"CIMPictureStroke":this._analyzePictureStroke(c,p,l,a,o);break;case"CIMGradientStroke":this._analyzeGradientStroke(c,p,l,a);break;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":{e.type!=="CIMLineSymbol"&&e.type!=="CIMPolygonSymbol"||(s=Ks(c));const _=[],g=c.primitiveName;g&&_.push(g);const y=l&&ui(c.markerPlacement);this._analyzeMarker(c,p,null,_,s,a,t,[],o,!1,y);break}default:Vt().error("Cannot analyze CIM layer",c.type)}}}_analyzeSolidFill(e,t,r,i){const{primitiveName:s,type:a}=e,o=D(e.color),l=ae(this._poMap,e,r);if(i||!(t!=null&&t.some(h=>h.effect.type==="CIMGeometricEffectTaperedPolygon")))this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!e.colorLocked,color:this._getValueOrOverrideExpression(a,s,"Color",o),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:t,applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!1,animationParams:ce(l)});else{const h=this._getValueOrOverrideExpression(a,s,"Color",o);this._cimLayers.push({type:"outlineFill",colorLocked:!!e.colorLocked,color:h,effects:t,outlineColor:h,outlineColorLocked:!!e.colorLocked,...wi,outlineEffects:t})}}_analyzePictureFill(e,t,r){const{primitiveName:i,type:s}=e,a=Ee(e),o=C(e.height,E.CIMPictureFill.height);let l=C(e.scaleX,1);if("width"in e&&typeof e.width=="number"){const u=e.width;let d=1;const p=this._resourceManager.getResource(e.url);p!=null&&(d=p.width/p.height),l/=d*(o/u)}const h={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(i,s)},c=ae(this._poMap,e,r);this._cimLayers.push({type:"fill",spriteRasterizationParam:h,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(s,i,"TintColor",a),height:this._getValueOrOverrideExpression(s,i,"Height",o),scaleX:this._getValueOrOverrideExpression(s,i,"ScaleX",l),angle:this._getValueOrOverrideExpression(s,i,"Rotation",C(e.rotation)),offsetX:this._getValueOrOverrideExpression(s,i,"OffsetX",C(e.offsetX)),offsetY:this._getValueOrOverrideExpression(s,i,"OffsetY",C(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1,animationParams:ce(c)})}_analyzeHatchFill(e,t){var c,u,d;const{primitiveName:r,type:i}=e,s=this._analyzeMaterialOverrides(r,["Rotation","OffsetX","OffsetY"]),a=Ye(s);let o=[255,255,255,1],l=!1;if((c=e.lineSymbol)!=null&&c.symbolLayers)for(const p of e.lineSymbol.symbolLayers){if(p.type!=="CIMSolidStroke")continue;const m=p.primitiveName??r;l||!m||p.colorLocked||((u=this._poMap[m])==null?void 0:u.Color)==null&&((d=this._poMap[m])==null?void 0:d.StrokeColor)==null||(o=D(p.color),o=this._maybeGetValueOrOverrideExpression(m,"StrokeColor")??this._getValueOrOverrideExpression(i,m,"Color",o),l=!0);const _=this._maybeGetValueOrOverrideExpression(m,"StrokeWidth");if(_){let g=null,y=null;typeof _=="number"?g=_:y=_.valueExpressionInfo;let f=a.find(x=>x.propertyName==="strokeWidth");f?f.propertyName="width":(f={type:"CIMPrimitiveOverride",primitiveName:m,propertyName:"width",valueExpressionInfo:y,value:g,defaultValue:Je(i,"width")},a.push(f))}}const h={type:"sprite-rasterization-param",resource:e,overrides:a};this._cimLayers.push({type:"fill",spriteRasterizationParam:h,colorLocked:!!e.colorLocked,effects:t,color:o,height:this._getValueOrOverrideExpression(i,r,"Separation",C(e.separation,E.CIMHatchFill.separation)),scaleX:1,angle:this._getValueOrOverrideExpression(i,r,"Rotation",C(e.rotation)),offsetX:this._getValueOrOverrideExpression(i,r,"OffsetX",C(e.offsetX)),offsetY:this._getValueOrOverrideExpression(i,r,"OffsetY",C(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!l})}_analyzeGradientFill(e,t){const{angle:r,gradientMethod:i,gradientSize:s,gradientSizeUnits:a,gradientType:o,interval:l,primitiveName:h,type:c}=e,u=E.CIMGradientFill,d=e.colorRamp;this._cimLayers.push({type:"gradientFill",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(h,c)},colorLocked:!1,effects:t,color:[255,255,255,1],gradientMethod:this._getValueOrOverrideExpression(c,h,"GradientMethod",i??"Linear"),angle:this._getValueOrOverrideExpression(c,h,"Angle",C(r,u.angle)),gradientType:this._getValueOrOverrideExpression(c,h,"GradientType",o??u.gradientType),interval:this._getValueOrOverrideExpression(c,h,"Interval",C(l,d.type==="CIMFixedColorRamp"?d.colors.length:u.interval)),gradientSize:this._getValueOrOverrideExpression(c,h,"GradientSize",C(s,u.gradientSize)),gradientSizeUnits:a==="Absolute"?Re.Absolute:a==="Relative"?Re.Relative:u.gradientSizeUnits})}_analyzeCompositeOutlineFill(e,t,r){const i=e.find(d=>d.type==="CIMSolidFill"),s=e.find(d=>d.type==="CIMSolidStroke");if(i==null||s==null)return;const a=[...t??[],...i.effects??[]].map(d=>he.findEffectOverrides(d,this._primitiveOverrides)).filter(d=>d!=null),o=[...t??[],...s.effects??[]].map(d=>he.findEffectOverrides(d,this._primitiveOverrides)).filter(d=>d!=null),l=C(s.width,E.CIMSolidStroke.width),h=se(s.capStyle,E.CIMSolidStroke.capstyle),c=se(s.joinStyle,E.CIMSolidStroke.joinstyle),u=s.miterLimit;this._cimLayers.push({type:"outlineFill",colorLocked:!!i.colorLocked,color:this._getValueOrOverrideExpression(i.type,i.primitiveName,"Color",D(i.color)),effects:a,outlineColorLocked:!!s.colorLocked,outlineColor:this._getValueOrOverrideExpression(s.type,s.primitiveName,"Color",D(s.color)),outlineWidth:this._getValueOrOverrideExpression(s.type,s.primitiveName,"Width",l),cap:this._getValueOrOverrideExpression(s.type,s.primitiveName,"CapStyle",h),join:this._getValueOrOverrideExpression(s.type,s.primitiveName,"JoinStyle",c),miterLimit:u&&this._getValueOrOverrideExpression(s.type,s.primitiveName,"MiterLimit",u),referenceWidth:r,outlineEffects:o})}_analyzeSolidStroke(e,t,r,i,s){const{primitiveName:a,type:o}=e,l=D(e.color),h=C(e.width,E.CIMSolidStroke.width),c=se(e.capStyle,E.CIMSolidStroke.capstyle),u=se(e.joinStyle,E.CIMSolidStroke.joinstyle),d=e.miterLimit;let p,m,_,g,y=[];if(this._analyzePrimitiveOverrides(a,t,null,null)&&(y=this._getPrimitiveMaterialOverrides(a,o)),t&&Array.isArray(t)&&t.length>0){const b=t[t.length-1].effect;b&&b.type==="CIMGeometricEffectDashes"&&b.lineDashEnding==="NoConstraint"&&(p=b.dashTemplate,m=b.scaleDash,_=b.offsetAlongLine,g=b.primitiveName,(t=[...t]).pop())}g!=null&&y.push(...this._getPrimitiveMaterialOverrides(g,o).filter(b=>b.propertyName==="dashTemplate"));const f=p!==void 0?{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:p,primitiveName:g},overrides:y}:null,x=ae(this._poMap,e,s);this._cimLayers.push({type:"line",spriteRasterizationParam:f,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(o,a,"Color",l),width:this._getValueOrOverrideExpression(o,a,"Width",h),cap:this._getValueOrOverrideExpression(o,a,"CapStyle",c),join:this._getValueOrOverrideExpression(o,a,"JoinStyle",u),miterLimit:d&&this._getValueOrOverrideExpression(o,a,"MiterLimit",d),referenceWidth:i,zOrder:Gt(e.name),dashTemplate:this._maybeGetValueOrOverrideExpression(g,"DashTemplate")??p,offsetAlongLine:this._getValueOrOverrideExpression(o,g,"OffsetAlongLine",_??0),scaleDash:m,sampleAlphaOnly:!0,animationParams:ce(x)})}_analyzePictureStroke(e,t,r,i,s){const{primitiveName:a,type:o}=e,l=Ee(e),h=C(e.width,E.CIMPictureStroke.width),c=se(e.capStyle,E.CIMPictureStroke.capstyle),u=se(e.joinStyle,E.CIMPictureStroke.joinstyle),d=e.miterLimit,p={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(a,o)},m=ae(this._poMap,e,s);this._cimLayers.push({type:"line",spriteRasterizationParam:p,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(o,a,"TintColor",l),width:this._getValueOrOverrideExpression(o,a,"Width",h),cap:this._getValueOrOverrideExpression(o,a,"CapStyle",c),join:this._getValueOrOverrideExpression(o,a,"JoinStyle",u),miterLimit:d&&this._getValueOrOverrideExpression(o,a,"MiterLimit",d),referenceWidth:i,zOrder:Gt(e.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1,animationParams:ce(m)})}_analyzeGradientStroke(e,t,r,i){const{gradientMethod:s,gradientSize:a,gradientSizeUnits:o,gradientType:l,interval:h,primitiveName:c,type:u}=e,d=E.CIMGradientStroke,p=C(e.width,d.width),m=se(e.capStyle,d.capstyle),_=se(e.joinStyle,d.joinstyle),g=e.miterLimit,y=e.colorRamp;this._cimLayers.push({type:"gradientStroke",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(c,u)},colorLocked:!!e.colorLocked,effects:t,color:[255,255,255,1],width:this._getValueOrOverrideExpression(u,c,"Width",p),cap:this._getValueOrOverrideExpression(u,c,"CapStyle",m),join:this._getValueOrOverrideExpression(u,c,"JoinStyle",_),miterLimit:g&&this._getValueOrOverrideExpression(u,c,"MiterLimit",g),referenceWidth:i,isOutline:r,gradientMethod:this._getValueOrOverrideExpression(u,c,"GradientMethod",s??d.gradientMethod),gradientType:this._getValueOrOverrideExpression(u,c,"GradientType",l??d.gradientType),interval:this._getValueOrOverrideExpression(u,c,"Interval",C(h,y.type==="CIMFixedColorRamp"?y.colors.length:d.interval)),gradientSize:this._getValueOrOverrideExpression(u,c,"GradientSize",C(a,d.gradientSize)),gradientSizeUnits:o==="Absolute"?Re.Absolute:o==="Relative"?Re.Relative:d.gradientSizeUnits})}_analyzeMarker(e,t,r,i,s,a,o,l,h,c=!1,u=!1){c||(c=!!e.colorLocked);let d=h;if(d=Is(e,d),d=ks(this._poMap,e,d),d=As(e,d),d=ae(this._poMap,e,d),this._analyzeMarkerInsidePolygon(e,t,c,d))return;const p=C(e.size,E.CIMVectorMarker.size),m=C(e.rotation),_=C(e.offsetX),g=C(e.offsetY),{primitiveName:y,type:f}=e,x=this._getValueOrOverrideExpression(f,y,"Size",p),b=this._getValueOrOverrideExpression(f,y,"Rotation",m),w=this._getValueOrOverrideExpression(f,y,"OffsetX",_),v=this._getValueOrOverrideExpression(f,y,"OffsetY",g);switch(e.type){case"CIMPictureMarker":this._analyzePictureMarker(e,t,r,i,s,a,x,b,w,v,l,d,c,u);break;case"CIMVectorMarker":this._analyzeVectorMarker(e,t,r,i,s,a,x,b,w,v,l,d,o,c,u)}}_analyzeMarkerInsidePolygon(e,t,r,i){const{markerPlacement:s,type:a}=e;if(!s||s.type!=="CIMMarkerPlacementInsidePolygon"||i.hasMotionAnimations)return!1;if(a==="CIMVectorMarker"||a==="CIMPictureMarker"){const p=e.primitiveName;if(p&&this._analyzePrimitiveOverrides([p],t,null,null))return!1;const m=s.primitiveName;if(m&&this._analyzePrimitiveOverrides([m],t,null,null))return!1;if(a==="CIMVectorMarker"){const{markerGraphics:_}=e;if(_)for(const g of _){const{symbol:y}=g;if((y==null?void 0:y.type)==="CIMPolygonSymbol"&&y.symbolLayers){const{symbolLayers:f}=y;for(const x of f)if(x.type==="CIMSolidStroke")return!1}}}else{const{animatedSymbolProperties:_}=e;if(_)return!1}}const o=Math.abs(s.stepX),l=Math.abs(s.stepY);if(o===0||l===0)return!0;let h,c;if(s.gridType==="Random"){const p=ri(Oi),m=Math.max(Math.floor(p/o),1);h=l*Math.max(Math.floor(p/l),1),c=m*o/h}else s.shiftOddRows?(h=2*l,c=o/l*.5):(h=l,c=o/l);const u=Ee(e),d=e.type==="CIMCharacterMarker"?null:{type:"sprite-rasterization-param",resource:e,overrides:[]};return this._cimLayers.push({type:"fill",spriteRasterizationParam:d,colorLocked:r,effects:t,color:u,height:h,scaleX:c,angle:s.gridAngle,offsetX:C(s.offsetX),offsetY:C(s.offsetY),applyRandomOffset:s.gridType==="Random",sampleAlphaOnly:e.type!=="CIMPictureMarker",hasUnresolvedReplacementColor:!0}),!0}_analyzePictureMarker(e,t,r,i,s,a,o,l,h,c,u,d,p,m){var z,F,U,R,G,$,J,Z;const{animatedSymbolProperties:_,primitiveName:g,type:y}=e;let f=C(e.scaleX,1);const x=Ee(e);r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));const b=this._createGIFAnimatedSymbolPropertiesOverrideExpression(_),w=e.anchorPoint??{x:0,y:0};if("width"in e&&typeof e.width=="number"){const re=e.width;let ie=1;const ee=this._resourceManager.getResource(e.url);ee!=null&&(ie=ee.width/ee.height),f/=ie*(C(e.size)/re)}const v=[...i];let S;e.primitiveName&&v.push(e.primitiveName),_||b?S={type:"animated",url:e.url,urlHash:"H"+or(e.url),playAnimation:(z=e.animatedSymbolProperties)==null?void 0:z.playAnimation,reverseAnimation:(F=e.animatedSymbolProperties)==null?void 0:F.reverseAnimation,randomizeStartTime:(U=e.animatedSymbolProperties)==null?void 0:U.randomizeStartTime,randomizeStartSeed:(R=e.animatedSymbolProperties)==null?void 0:R.randomizeStartSeed,startTimeOffset:(G=e.animatedSymbolProperties)==null?void 0:G.startTimeOffset,duration:($=e.animatedSymbolProperties)==null?void 0:$.duration,repeatType:(J=e.animatedSymbolProperties)==null?void 0:J.repeatType,repeatDelay:(Z=e.animatedSymbolProperties)==null?void 0:Z.repeatDelay}:(S=dt(e),S.markerPlacement=null);const T={type:"sprite-rasterization-param",resource:S,overrides:this._getMaterialOverrides(v,y)};b&&T.overrides.push(...b.overrides);const I=o;this._cimLayers.push({type:"marker",spriteRasterizationParam:T,colorLocked:p,effects:t,scaleSymbolsProportionally:!1,alignment:s,size:o,scaleX:this._getValueOrOverrideExpression(y,g,"ScaleX",f),rotation:l,offsetX:h,offsetY:c,transform:{type:"cim-marker-transform-param",params:u},color:this._getValueOrOverrideExpression(y,g,"TintColor",x),anchorPoint:{x:w.x,y:w.y},isAbsoluteAnchorPoint:e.anchorPointUnits!=="Relative",outlineColor:[0,0,0,0],outlineWidth:0,frameHeight:0,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:a,sizeRatio:1,isOutline:m,markerPlacement:r,animationParams:ce(d),baseSize:I})}_analyzeVectorMarker(e,t,r,i,s,a,o,l,h,c,u,d,p,m,_){const g=e.markerGraphics;if(!g)return;const y=e.frame;let f=0;f=y?y.ymax-y.ymin:a;const x=!!e.scaleSymbolsProportionally;if(f){const b={offsetX:h,offsetY:c,rotation:l,size:o,frameHeight:f,rotateClockWise:!!e.rotateClockwise,absoluteAnchorPoint:!1,scaleSymbolsProportionally:x};u=[...u,b]}r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));for(const b of g)if(b){const w=b.symbol;if(!w)continue;const v=b.primitiveName;v&&i.push(v);let S,T=d;if((w.type==="CIMPointSymbol"||w.type==="CIMTextSymbol")&&y){let U=0,R=0;const G=b.geometry;"x"in G&&"y"in G&&(U+=G.x-.5*(y.xmin+y.xmax),R+=G.y-.5*(y.ymin+y.ymax));const $=e.anchorPoint;let J=!1;$&&(e.anchorPointUnits==="Absolute"?(U-=$.x,R-=$.y,J=!0):y&&(U-=(y.xmax-y.xmin)*$.x,R-=(y.ymax-y.ymin)*$.y));const Z={offsetX:U,offsetY:R,rotation:0,size:0,frameHeight:0,rotateClockWise:!1,absoluteAnchorPoint:J,scaleSymbolsProportionally:x};S=[...u,Z]}const I=b.geometry,[z,F]=Bs(I,y);switch(z===0&&F===0||(T=Fs(T,z,F)),w.type==="CIMPointSymbol"&&(T=ae(this._poMap,w,T)),w.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":p||ta(w)?(T={...T,transform:{type:"AnimatedTransform",relativeTranslation:!1,absoluteScale:!0,translation:P([0,0]),rotation:P(0),scale:P(f),parent:d.transform}},this._analyzeMultiLayerGraphicNonSDF(e,t,r,b,i,s,a,S??u,T,f,m,_)):this._analyzeMultiLayerGraphic(e,t,r,b,i,s,a,S??u,T,f,m,_);break;case"CIMTextSymbol":this._analyzeTextGraphic(t,r,b,i,s,a,S??u,m)}v&&i.pop()}}_analyzeMultiLayerGraphic(e,t,r,i,s,a,o,l,h,c,u,d){const p=i.symbol.symbolLayers;p&&(!ea(p)||br(h)?ra(p)?this._analyzeMultiLayerGraphicNonSDF(e,t,r,i,s,a,o,l,h,c,!!u,d):this._analyzeMarkerGraphicSymbolLayers(e,t,r,i,s,a,o,l,h,c,u,d):this._analyzeCompositeMarkerGraphic(e,t,r,i,p,a,o,l,c,u,d))}_analyzeMarkerGraphicSymbolLayers(e,t,r,i,s,a,o,l,h,c,u,d){const p=i.symbol,m=p.symbolLayers;if(!m)return;const _=this._resourceManager.geometryEngine,g=lt.applyEffects(p.effects,i.geometry,_);if(!g)return;let y=m.length;for(;y--;){const f=m[y];if(!f||f.enable===!1)continue;const x=f.primitiveName;switch(x&&s.push(x),f.type){case"CIMSolidFill":case"CIMSolidStroke":{const b=lt.applyEffects(f.effects,g,_),w=$e(b);if(!w)continue;const v=e.anchorPointUnits!=="Relative",S=Tt(f)??0,{frameSizeRatio:T,anchorX:I,anchorY:z,widthRatio:F,sdfPaddingRatio:U}=Ct(w,e.frame,e.size,e.anchorPoint,v,S,e.scaleSymbolsProportionally),R=f.type==="CIMSolidFill",G={type:"sdf",geom:b,sdfPaddingRatio:U,asFill:R},{path:$}=f,J=R?D(pi(f)):$==null?D(Rt(f)):[0,0,0,0],Z=R?[0,0,0,0]:D(Rt(f));if(!R&&!S)break;const re=i.primitiveName;let ie=null;R&&!f.colorLocked&&(ie=this._maybeGetValueOrOverrideExpression(re,"FillColor"));let ee=null;R||f.colorLocked||(ee=this._maybeGetValueOrOverrideExpression(re,"StrokeColor"));const Ce=ie??this._getValueOrOverrideExpression(f.type,x,"Color",J),We=ee??this._getValueOrOverrideExpression(f.type,x,"Color",Z),_e=this._maybeGetValueOrOverrideExpression(re,"StrokeWidth")??this._getValueOrOverrideExpression(f.type,x,"Width",S),je=$?{type:"sprite-rasterization-param",resource:{type:"path",path:$,asFill:R},overrides:[]}:{type:"sprite-rasterization-param",resource:G,overrides:[]},Oe=ae(this._poMap,f,h),Pe=C(e.size,E.CIMVectorMarker.size),Te=this._getValueOrOverrideExpression(e.type,e.primitiveName,"Size",Pe);this._cimLayers.push({type:"marker",spriteRasterizationParam:je,colorLocked:!!f.colorLocked||!!u,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:a,anchorPoint:{x:I,y:z},isAbsoluteAnchorPoint:v,size:c,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:c,widthRatio:F,rotateClockwise:!1,referenceSize:o,sizeRatio:T,color:Ce,outlineColor:We,outlineWidth:_e,isOutline:d,markerPlacement:r,animationParams:ce(Oe),isStroke:f.type!=="CIMSolidFill",baseSize:Te,...ni(b,U)});break}case"CIMPictureMarker":case"CIMVectorMarker":if(f.markerPlacement){Vt().error("Error analyzing CIM, got unexpected marker placement");break}this._analyzeMarker(f,t,r,s,a,o,!1,l,h,u,d)}x&&s.pop()}}_analyzeTextGraphic(e,t,r,i,s,a,o,l){var Oe,Pe,Te;const h=[];he.findApplicableOverrides(r,this._primitiveOverrides,h);const c=r.geometry;if(!("x"in c)||!("y"in c))return;const u=r.symbol,d=mi(u),p=fi(u.fontStyleName),m=Yr(u.fontFamilyName);u.font={family:m,decoration:d,...p};const _=C(u.height,E.CIMTextSymbol.height),g=C(u.angle),y=C(u.offsetX),f=C(u.offsetY),{haloSymbol:x}=u,b=C(u.haloSize,0);let w=[0,0,0,0];if((Oe=x==null?void 0:x.symbolLayers)!=null&&Oe.length){const Y=x.symbolLayers;for(const Q of Y)if(Q.color){w=this._getValueOrOverrideExpression(((Pe=u==null?void 0:u.haloSymbol)==null?void 0:Pe.type)??"CIMPolygonSymbol",Q.primitiveName,"Color",D(Q.color));break}}const v=r.primitiveName;let S=[0,0,0,1],T=[0,0,0,0],I=0,z=!1;if((Te=u.symbol)!=null&&Te.symbolLayers)for(const Y of u.symbol.symbolLayers){const Q=Y.primitiveName;if(Y.type==="CIMSolidStroke")T=this._getValueOrOverrideExpression("CIMSolidStroke",Q,"Color",D(Y.color)),I=this._getValueOrOverrideExpression("CIMSolidStroke",Q,"Width",Tt(Y)??0);else if(Y.type==="CIMSolidFill"){const le=D(Y.color);z=z??!!Y.colorLocked,S=this._getValueOrOverrideExpression("CIMSolidFill",Q??v,"Color",le)}}let F=null,U=null,R=null,G=null,$=null;v&&(F=this._maybeGetValueOrOverrideExpression(v,"TextSize"),U=this._maybeGetValueOrOverrideExpression(v,"TextAngle"),R=this._maybeGetValueOrOverrideExpression(v,"TextOffsetX"),G=this._maybeGetValueOrOverrideExpression(v,"TextOffsetY"),z||($=this._maybeGetValueOrOverrideExpression(v,"FillColor")));const J=$??S;let Z=null,re=null,ie=0;if(u.callout&&u.callout.type==="CIMBackgroundCallout"){const Y=u.callout;if(Y.backgroundSymbol){const Q=Y.backgroundSymbol.symbolLayers;if(Q)for(const le of Q)le.type==="CIMSolidFill"?Z=D(le.color):le.type==="CIMSolidStroke"&&(re=D(le.color),ie=C(le.width,E.CIMSolidStroke.width))}}const ee=this._getValueOrOverrideExpression(u.type,r.primitiveName,"TextString",r.textString??"");if(ee==null)return;const{fontStyleName:Ce}=u,We=m+(Ce?"-"+Ce.toLowerCase():"-regular"),_e=this._getMaterialOverrides(i,u.type);_e.push(...this._getPrimitiveMaterialOverrides(r.primitiveName,u.type)),this._collectDictionaryTemplateOverrides(_e,r);const je={type:"text-rasterization-param",resource:{type:"text",textString:r.textString??"",font:u.font,symbol:u,primitiveName:r.primitiveName},overrides:_e};this._cimLayers.push({type:"text",lineWidth:u.lineWidth,textRasterizationParam:je,colorLocked:!!l||!!z,effects:e,alignment:s,anchorPoint:{x:0,y:0},isAbsoluteAnchorPoint:!1,fontName:We,decoration:d,haloSize:b,haloColor:w,weight:p.weight,style:p.style,size:F??_,angle:U??g,offsetX:R??y,offsetY:G??f,transform:{type:"cim-marker-transform-param",params:o},horizontalAlignment:gi(u.horizontalAlignment),verticalAlignment:_i(u.verticalAlignment),text:ee,color:J,outlineColor:T,outlineSize:I,backgroundColor:Z,borderLineColor:re,borderLineWidth:ie,referenceSize:a,sizeRatio:1,markerPlacement:t})}_collectDictionaryTemplateOverrides(e,t){if(t.textString&&this._hasTextStringTemplates){const r=yi(t.symbol);e.push({propertyName:"textString",defaultValue:"",valueExpressionInfo:{type:"dictionary-template",textCase:r,template:t.textString},primitiveName:t.primitiveName})}}_analyzeMultiLayerGraphicNonSDF(e,t,r,i,s,a,o,l,h,c,u,d){const p=Zs(e,i),m=e.primitiveName,_=this._analyzeMaterialOverrides(m,["Rotation","OffsetX","OffsetY"]),g=Ye(_),[y,f,x]=fe.getTextureAnchor(p,this._resourceManager,ur),b=this._getMaterialOverrides(s,e.type);b.push(...g);const w={type:"sprite-rasterization-param",resource:{...p,avoidSDFRasterization:!0},overrides:b},v=C(e.size,E.CIMVectorMarker.size),S=this._getValueOrOverrideExpression(e.type,m,"Size",v);this._cimLayers.push({type:"marker",spriteRasterizationParam:w,colorLocked:u,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:a,anchorPoint:{x:y,y:f},isAbsoluteAnchorPoint:!1,size:c,rotation:0,offsetX:0,offsetY:0,transform:{type:"cim-marker-transform-param",params:l},color:[255,255,255,1],outlineColor:[0,0,0,0],outlineWidth:0,scaleX:1,frameHeight:c,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:o,sizeRatio:x/de(e.size),isOutline:d,markerPlacement:r,animationParams:ce(h),baseSize:S})}_createMarkerPlacementOverrideExpression(e){if(!e)return null;const t=[];return he.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-marker-placement-param",placement:e,overrides:qt(t)}}_createGIFAnimatedSymbolPropertiesOverrideExpression(e){if(!e)return null;const t=[];return he.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-gif-animation-params",animation:e,overrides:qt(t)}}_analyzeCompositeMarkerGraphic(e,t,r,i,s,a,o,l,h,c,u){const d=i.geometry,p=s[0],m=s[1],_=$e(d);if(!_)return;const g=e.anchorPointUnits!=="Relative",y=C(p.width,E.CIMSolidStroke.width),{frameSizeRatio:f,anchorX:x,anchorY:b,widthRatio:w,sdfPaddingRatio:v}=Ct(_,e.frame,e.size,e.anchorPoint,g,y,e.scaleSymbolsProportionally),{path:S}=m,T=m.primitiveName,I=p.primitiveName,z=i.primitiveName;let F=null;m.colorLocked||c||(F=this._maybeGetValueOrOverrideExpression(z,"FillColor"));const U=F??this._getValueOrOverrideExpression(m.type,T,"Color",D(m.color));let R=null;p.colorLocked||c||(R=this._maybeGetValueOrOverrideExpression(z,"StrokeColor"));const G=R??this._getValueOrOverrideExpression(p.type,I,"Color",D(p.color)),$=this._maybeGetValueOrOverrideExpression(z,"StrokeWidth")??this._getValueOrOverrideExpression(p.type,I,"Width",y),J={type:"sprite-rasterization-param",resource:S?{type:"path",path:S,asFill:!0}:{type:"sdf",geom:d,sdfPaddingRatio:v,asFill:!0},overrides:[]};this._cimLayers.push({type:"marker",spriteRasterizationParam:J,colorLocked:c,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:a,anchorPoint:{x,y:b},isAbsoluteAnchorPoint:g,size:h,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:h,widthRatio:w,rotateClockwise:!1,referenceSize:o,sizeRatio:f,color:U,outlineColor:G,outlineWidth:$,isOutline:u,markerPlacement:r})}_setPoMap(e,t,r){let i;this._poMap[e]?i=this._poMap[e]:(i={},this._poMap[e]=i),i[t]=r}_maybeGetValueOrOverrideExpression(e,t,r){return this._getValueOrOverrideExpression("",e,t,r,!1)}_getValueOrOverrideExpression(e,t,r,i,s=!0){if(s&&!vi(i)&&(i=Je(e,r.toLowerCase())),t==null)return i;const a=this._poMap[t];if(a==null)return i;const o=a[r];return typeof o=="string"||typeof o=="number"||Array.isArray(o)?o:o?{valueExpressionInfo:o,defaultValue:i}:i}_analyzePrimitiveOverrides(e,t,r,i){if(e==null)return!1;typeof e=="string"&&(e=[e]);for(const s of this._primitiveOverrides)if(e.includes(s.primitiveName)&&s.valueExpressionInfo)return!0;if(t!=null){for(const s of t)if((s==null?void 0:s.overrides.length)>0)return!0}if(r!=null){for(const s of r)if((s==null?void 0:s.overrides.length)>0)return!0}if(i!=null){for(const s of i)if((s==null?void 0:s.overrides.length)>0)return!0}return!1}_getMaterialOverrides(e,t){if(!e)return[];const r=[];for(const i of e)r.push(...this._getPrimitiveMaterialOverrides(i,t));return r}_getPrimitiveMaterialOverrides(e,t){if(!e)return[];const r=Ye(this._primitiveOverrides.filter(i=>i.primitiveName===e));return r.forEach(i=>i.defaultValue=Je(t,i.propertyName.toLowerCase())),r}_analyzeMaterialOverrides(e,t){return this._primitiveOverrides.filter(r=>r.primitiveName!==e||!t.includes(r.propertyName))}}function Zs(n,e){return{type:n.type,enable:!0,name:n.name,colorLocked:n.colorLocked,primitiveName:n.primitiveName,anchorPoint:n.anchorPoint,anchorPointUnits:n.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:n.rotateClockwise,rotation:0,size:n.size,billboardMode3D:n.billboardMode3D,depth3D:n.depth3D,frame:n.frame,markerGraphics:[e],scaleSymbolsProportionally:n.scaleSymbolsProportionally,respectFrame:n.respectFrame,clippingPath:n.clippingPath}}function Gt(n){if(n&&n.indexOf("Level_")===0){const e=parseInt(n.slice(6),10);if(!isNaN(e))return e}return 0}const ea=n=>n&&n.length===2&&n[0].enable&&n[1].enable&&n[0].type==="CIMSolidStroke"&&n[1].type==="CIMSolidFill"&&n[0].path==null&&n[1].path==null&&!n[0].effects&&!n[1].effects&&!n[0].animations&&!n[1].animations;function ta(n){const e=n.symbolLayers;if(!e)return!1;const t=e.find(i=>{var s;return(s=i.effects)==null?void 0:s.find(a=>a.type==="CIMGeometricEffectDashes"&&a.dashTemplate!=null)}),r=e.find(i=>{var s;return(s=i.effects)==null?void 0:s.find(a=>a.type==="CIMGeometricEffectAddControlPoints")});return!!t||!!r}function ra(n){return n.some(e=>e.type!=="CIMSolidFill"&&e.type!=="CIMSolidStroke"&&(e.type!=="CIMVectorMarker"&&e.type!=="CIMPictureMarker"||e.markerPlacement!=null))}function ia(n,e){var t;if(e!=null&&e.some(r=>r.type==="CIMGeometricEffectRadial")&&(e!=null&&e.some(r=>r.type==="CIMGeometricEffectTaperedPolygon"))&&n.length===2){const r=n.find(a=>a.type==="CIMSolidFill"),i=n.find(a=>a.type==="CIMSolidStroke"),s=(t=i==null?void 0:i.effects)==null?void 0:t.some(a=>a.type==="CIMGeometricEffectDashes");if(r!=null&&i!=null&&!s)return!0}return!1}function qt(n){return dt(n).map(e=>({...e,propertyName:bi(e.propertyName)}))}function ce(n){return br(n)?{type:"animation-params",params:n}:null}const sa={background:{"background.frag":`#ifdef PATTERN
uniform lowp float u_opacity;
uniform lowp sampler2D u_texture;
varying mediump vec4 v_tlbr;
varying mediump vec2 v_tileTextureCoord;
#else
uniform lowp vec4 u_color;
#endif
void main() {
#ifdef PATTERN
mediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);
mediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);
lowp vec4 color = texture2D(u_texture, samplePos);
gl_FragColor = u_opacity * color;
#else
gl_FragColor = u_color;
#endif
}`,"background.vert":`precision mediump float;
attribute vec2 a_pos;
uniform highp mat3 u_dvsMat3;
uniform mediump float u_coord_range;
uniform mediump float u_depth;
#ifdef PATTERN
uniform mediump mat3 u_pattern_matrix;
varying mediump vec2 v_tileTextureCoord;
uniform mediump vec4 u_tlbr;
uniform mediump vec2 u_mosaicSize;
varying mediump vec4 v_tlbr;
#endif
void main() {
gl_Position = vec4((u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0)).xy, u_depth, 1.0);
#ifdef PATTERN
v_tileTextureCoord = (u_pattern_matrix * vec3(a_pos, 1.0)).xy;
v_tlbr             = u_tlbr / u_mosaicSize.xyxy;
#endif
}`},circle:{"circle.frag":`precision lowp float;
varying lowp vec4 v_color;
varying lowp vec4 v_stroke_color;
varying mediump float v_blur;
varying mediump float v_stroke_width;
varying mediump float v_radius;
varying mediump vec2 v_offset;
void main()
{
mediump float dist = length(v_offset);
mediump float alpha = smoothstep(0.0, -v_blur, dist - 1.0);
lowp float color_mix_ratio = v_stroke_width < 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));
gl_FragColor = alpha * mix(v_color, v_stroke_color, color_mix_ratio);
}`,"circle.vert":`precision mediump float;
attribute vec2 a_pos;
#pragma header
varying lowp vec4 v_color;
varying lowp vec4 v_stroke_color;
varying mediump float v_blur;
varying mediump float v_stroke_width;
varying mediump float v_radius;
varying mediump vec2 v_offset;
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform mediump vec2 u_circleTranslation;
uniform mediump float u_depth;
uniform mediump float u_antialiasingWidth;
void main()
{
#pragma main
v_color = color * opacity;
v_stroke_color = stroke_color * stroke_opacity;
v_stroke_width = stroke_width;
v_radius = radius;
v_blur = max(blur, u_antialiasingWidth / (radius + stroke_width));
mediump vec2 offset = vec2(mod(a_pos, 2.0) * 2.0 - 1.0);
v_offset = offset;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos * 0.5, 1.0) + u_displayMat3 * vec3((v_radius + v_stroke_width) * offset + u_circleTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
}`},fill:{"fill.frag":`precision lowp float;
#ifdef PATTERN
uniform lowp sampler2D u_texture;
varying mediump vec2 v_tileTextureCoord;
varying mediump vec4 v_tlbr;
#endif
varying lowp vec4 v_color;
vec4 mixColors(vec4 color1, vec4 color2) {
float compositeAlpha = color2.a + color1.a * (1.0 - color2.a);
vec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);
return vec4(compositeColor, compositeAlpha);
}
void main()
{
#ifdef PATTERN
mediump vec2 normalizedTextureCoord = fract(v_tileTextureCoord);
mediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);
lowp vec4 color = texture2D(u_texture, samplePos);
gl_FragColor = v_color[3] * color;
#else
gl_FragColor = v_color;
#endif
}`,"fill.vert":`precision mediump float;
attribute vec2 a_pos;
#pragma header
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform mediump float u_depth;
uniform mediump vec2 u_fillTranslation;
#ifdef PATTERN
#include <util/util.glsl>
uniform mediump vec2 u_mosaicSize;
uniform mediump float u_patternFactor;
varying mediump vec2 v_tileTextureCoord;
varying mediump vec4 v_tlbr;
#endif
varying lowp vec4 v_color;
void main()
{
#pragma main
v_color = color * opacity;
#ifdef PATTERN
float patternWidth = nextPOT(tlbr.z - tlbr.x);
float patternHeight = nextPOT(tlbr.w - tlbr.y);
float scaleX = 1.0 / (patternWidth * u_patternFactor);
float scaleY = 1.0 / (patternHeight * u_patternFactor);
mat3 patterMat = mat3(scaleX, 0.0,    0.0,
0.0,    -scaleY, 0.0,
0.0,    0.0,    1.0);
v_tileTextureCoord = (patterMat * vec3(a_pos, 1.0)).xy;
v_tlbr             = tlbr / u_mosaicSize.xyxy;
#endif
vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(u_fillTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
}`},icon:{"icon.frag":`precision mediump float;
uniform lowp sampler2D u_texture;
#ifdef SDF
uniform lowp vec4 u_color;
uniform lowp vec4 u_outlineColor;
#endif
varying mediump vec2 v_tex;
varying lowp float v_opacity;
varying mediump vec2 v_size;
varying lowp vec4 v_color;
#ifdef SDF
varying mediump flaot v_halo_width;
#endif
#include <util/encoding.glsl>
vec4 mixColors(vec4 color1, vec4 color2) {
float compositeAlpha = color2.a + color1.a * (1.0 - color2.a);
vec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);
return vec4(compositeColor, compositeAlpha);
}
void main()
{
#ifdef SDF
lowp vec4 fillPixelColor = v_color;
float d = rgba2float(texture2D(u_texture, v_tex)) - 0.5;
const float softEdgeRatio = 0.248062016;
float size = max(v_size.x, v_size.y);
float dist = d * softEdgeRatio * size;
fillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);
if (v_halo_width > 0.25) {
lowp vec4 outlinePixelColor = u_outlineColor;
const float outlineLimitRatio = (16.0 / 86.0);
float clampedOutlineSize = softEdgeRatio * min(v_halo_width, outlineLimitRatio * max(v_size.x, v_size.y));
outlinePixelColor *= clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);
gl_FragColor = v_opacity * mixColors(fillPixelColor, outlinePixelColor);
}
else {
gl_FragColor = v_opacity * fillPixelColor;
}
#else
lowp vec4 texColor = texture2D(u_texture, v_tex);
gl_FragColor = v_opacity * texColor;
#endif
}`,"icon.vert":`attribute vec2 a_pos;
attribute vec2 a_vertexOffset;
attribute vec4 a_texAngleRange;
attribute vec4 a_levelInfo;
attribute float a_opacityInfo;
#pragma header
varying lowp vec4 v_color;
#ifdef SDF
varying mediump float v_halo_width;
#endif
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform highp mat3 u_displayViewMat3;
uniform mediump vec2 u_iconTranslation;
uniform vec2 u_mosaicSize;
uniform mediump float u_depth;
uniform mediump float u_mapRotation;
uniform mediump float u_level;
uniform lowp float u_keepUpright;
uniform mediump float u_fadeDuration;
varying mediump vec2 v_tex;
varying lowp float v_opacity;
varying mediump vec2 v_size;
const float C_OFFSET_PRECISION = 1.0 / 8.0;
const float C_256_TO_RAD = 3.14159265359 / 128.0;
const float C_DEG_TO_RAD = 3.14159265359 / 180.0;
const float tileCoordRatio = 1.0 / 8.0;
uniform highp float u_time;
void main()
{
#pragma main
v_color = color;
v_opacity = opacity;
#ifdef SDF
v_halo_width = halo_width;
#endif
float modded = mod(a_opacityInfo, 128.0);
float targetOpacity = (a_opacityInfo - modded) / 128.0;
float startOpacity = modded / 127.0;
float interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);
v_opacity *= interpolatedOpacity;
mediump float a_angle         = a_levelInfo[1];
mediump float a_minLevel      = a_levelInfo[2];
mediump float a_maxLevel      = a_levelInfo[3];
mediump vec2 a_tex            = a_texAngleRange.xy;
mediump float delta_z = 0.0;
mediump float rotated = mod(a_angle + u_mapRotation, 256.0);
delta_z += (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated));
delta_z += 1.0 - step(a_minLevel, u_level);
delta_z += step(a_maxLevel, u_level);
delta_z += step(v_opacity, 0.0);
vec2 offset = C_OFFSET_PRECISION * a_vertexOffset;
v_size = abs(offset);
#ifdef SDF
offset = (120.0 / 86.0) * offset;
#endif
mediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayViewMat3 * vec3(size * offset, 0.0) + u_displayMat3 * vec3(u_iconTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);
v_tex = a_tex.xy / u_mosaicSize;
}`},line:{"line.frag":`precision lowp float;
varying mediump vec2 v_normal;
varying highp float v_accumulatedDistance;
varying mediump float v_lineHalfWidth;
varying lowp vec4 v_color;
varying mediump float v_blur;
#if defined (PATTERN) || defined(SDF)
varying mediump vec4 v_tlbr;
varying mediump vec2 v_patternSize;
varying mediump float v_widthRatio;
uniform sampler2D u_texture;
uniform mediump float u_antialiasing;
#endif
#ifdef SDF
#include <util/encoding.glsl>
#endif
void main()
{
mediump float fragDist = length(v_normal) * v_lineHalfWidth;
lowp float alpha = clamp((v_lineHalfWidth - fragDist) / v_blur, 0.0, 1.0);
#ifdef PATTERN
mediump float relativeTexX = fract(v_accumulatedDistance / (v_patternSize.x * v_widthRatio));
mediump float relativeTexY = 0.5 + v_normal.y * v_lineHalfWidth / (v_patternSize.y * v_widthRatio);
mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));
lowp vec4 color = texture2D(u_texture, texCoord);
gl_FragColor = alpha * v_color[3] * color;
#elif defined(SDF)
mediump float relativeTexX = fract((v_accumulatedDistance * 0.5) / (v_patternSize.x * v_widthRatio));
mediump float relativeTexY =  0.5 + 0.25 * v_normal.y;
mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));
mediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;
float dist = d * (v_lineHalfWidth + u_antialiasing / 2.0);
gl_FragColor = alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;
#else
gl_FragColor = alpha * v_color;
#endif
}`,"line.vert":`precision mediump float;
attribute vec2 a_pos;
attribute vec4 a_extrude_offset;
attribute vec4 a_dir_normal;
attribute vec2 a_accumulatedDistance;
#pragma header
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform highp mat3 u_displayViewMat3;
uniform mediump float u_zoomFactor;
uniform mediump vec2 u_lineTranslation;
uniform mediump float u_antialiasing;
uniform mediump float u_depth;
varying mediump vec2 v_normal;
varying highp float v_accumulatedDistance;
const float scale = 1.0 / 31.0;
const mediump float tileCoordRatio = 8.0;
#if defined (SDF)
const mediump float sdfPatternHalfWidth = 15.5;
#endif
#if defined (PATTERN) || defined(SDF)
uniform mediump vec2 u_mosaicSize;
varying mediump vec4 v_tlbr;
varying mediump vec2 v_patternSize;
varying mediump float v_widthRatio;
#endif
varying lowp vec4 v_color;
varying mediump float v_lineHalfWidth;
varying mediump float v_blur;
void main()
{
#pragma main
v_color = color * opacity;
v_blur = blur + u_antialiasing;
v_normal = a_dir_normal.zw * scale;
#if defined (PATTERN) || defined(SDF)
v_tlbr          = tlbr / u_mosaicSize.xyxy;
v_patternSize   = vec2(tlbr.z - tlbr.x, tlbr.y - tlbr.w);
#if defined (PATTERN)
v_widthRatio = width / v_patternSize.y;
#else
v_widthRatio = width / sdfPatternHalfWidth / 2.0;
#endif
#endif
v_lineHalfWidth = (width + u_antialiasing) * 0.5;
mediump vec2 dir = a_dir_normal.xy * scale;
mediump vec2 offset_ = a_extrude_offset.zw * scale * offset;
mediump vec2 dist = v_lineHalfWidth * scale * a_extrude_offset.xy;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos + offset_ * tileCoordRatio / u_zoomFactor, 1.0) + u_displayViewMat3 * vec3(dist, 0.0) + u_displayMat3 * vec3(u_lineTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
#if defined (PATTERN) || defined(SDF)
v_accumulatedDistance = a_accumulatedDistance.x * u_zoomFactor / tileCoordRatio + dot(dir, dist + offset_);
#endif
}`},outline:{"outline.frag":`varying lowp vec4 v_color;
varying mediump vec2 v_normal;
void main()
{
lowp float dist = abs(v_normal.y);
lowp float alpha = smoothstep(1.0, 0.0, dist);
gl_FragColor = alpha * v_color;
}`,"outline.vert":`attribute vec2 a_pos;
attribute vec2 a_offset;
attribute vec2 a_xnormal;
#pragma header
varying lowp vec4 v_color;
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform mediump vec2 u_fillTranslation;
uniform mediump float u_depth;
uniform mediump float u_outline_width;
varying lowp vec2 v_normal;
const float scale = 1.0 / 15.0;
void main()
{
#pragma main
v_color = color * opacity;
v_normal = a_xnormal;
mediump vec2 dist = u_outline_width * scale * a_offset;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(dist + u_fillTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
}`},text:{"text.frag":`uniform lowp sampler2D u_texture;
varying lowp vec2 v_tex;
varying lowp vec4 v_color;
varying mediump float v_edgeWidth;
varying mediump float v_edgeDistance;
void main()
{
lowp float dist = texture2D(u_texture, v_tex).a;
mediump float alpha = smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist);
gl_FragColor = alpha * v_color;
}`,"text.vert":`attribute vec2 a_pos;
attribute vec2 a_vertexOffset;
attribute vec4 a_texAngleRange;
attribute vec4 a_levelInfo;
attribute float a_opacityInfo;
#pragma header
varying lowp vec4 v_color;
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform highp mat3 u_displayViewMat3;
uniform mediump vec2 u_textTranslation;
uniform vec2 u_mosaicSize;
uniform mediump float u_depth;
uniform mediump float u_mapRotation;
uniform mediump float u_level;
uniform lowp float u_keepUpright;
uniform mediump float u_fadeDuration;
varying lowp vec2 v_tex;
const float offsetPrecision = 1.0 / 8.0;
const mediump float edgePos = 0.75;
uniform mediump float u_antialiasingWidth;
varying mediump float v_edgeDistance;
varying mediump float v_edgeWidth;
uniform lowp float u_halo;
const float sdfFontScale = 1.0 / 24.0;
const float sdfPixel = 3.0;
uniform highp float u_time;
void main()
{
#pragma main
if (u_halo > 0.5)
{
v_color = halo_color * opacity;
halo_width *= sdfPixel;
halo_blur *= sdfPixel;
}
else
{
v_color = color * opacity;
halo_width = 0.0;
halo_blur = 0.0;
}
float modded = mod(a_opacityInfo, 128.0);
float targetOpacity = (a_opacityInfo - modded) / 128.0;
float startOpacity = modded / 127.0;
float interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);
v_color *= interpolatedOpacity;
mediump float a_angle       = a_levelInfo[1];
mediump float a_minLevel    = a_levelInfo[2];
mediump float a_maxLevel    = a_levelInfo[3];
mediump vec2 a_tex          = a_texAngleRange.xy;
mediump float a_visMinAngle    = a_texAngleRange.z;
mediump float a_visMaxAngle    = a_texAngleRange.w;
mediump float delta_z = 0.0;
mediump float angle = mod(a_angle + u_mapRotation, 256.0);
if (a_visMinAngle < a_visMaxAngle)
{
delta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) + (1.0 - step(a_visMinAngle, angle)));
}
else
{
delta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) * (1.0 - step(a_visMinAngle, angle)));
}
delta_z += 1.0 - step(a_minLevel, u_level);
delta_z += step(a_maxLevel, u_level);
delta_z += step(v_color[3], 0.0);
v_tex = a_tex.xy / u_mosaicSize;
v_edgeDistance = edgePos - halo_width / size;
v_edgeWidth = (u_antialiasingWidth + halo_blur) / size;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + sdfFontScale * u_displayViewMat3 * vec3(offsetPrecision * size * a_vertexOffset, 0.0) + u_displayMat3 * vec3(u_textTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);
}`},util:{"encoding.glsl":`const vec4 rgba2float_factors = vec4(
255.0 / (256.0),
255.0 / (256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0 * 256.0)
);
float rgba2float(vec4 rgba) {
return dot(rgba, rgba2float_factors);
}`,"util.glsl":`float nextPOT(in float x) {
return pow(2.0, ceil(log2(abs(x))));
}`}};function aa(n){let e=sa;return n.split("/").forEach(t=>{e&&(e=e[t])}),e}const oa=new Ni(aa);function H(n){return oa.resolveIncludes(n)}const Ht=n=>Ve({PATTERN:n.pattern}),na={shaders:n=>({vertexShader:Ht(n)+H("background/background.vert"),fragmentShader:Ht(n)+H("background/background.frag")})},la={shaders:n=>({vertexShader:H("circle/circle.vert"),fragmentShader:H("circle/circle.frag")})},Wt=n=>Ve({PATTERN:n.pattern}),ha={shaders:n=>({vertexShader:Wt(n)+H("fill/fill.vert"),fragmentShader:Wt(n)+H("fill/fill.frag")})},ca={shaders:n=>({vertexShader:H("outline/outline.vert"),fragmentShader:H("outline/outline.frag")})},jt=n=>Ve({SDF:n.sdf}),ua={shaders:n=>({vertexShader:jt(n)+H("icon/icon.vert"),fragmentShader:jt(n)+H("icon/icon.frag")})},Xt=n=>Ve({PATTERN:n.pattern,SDF:n.sdf}),da={shaders:n=>({vertexShader:Xt(n)+H("line/line.vert"),fragmentShader:Xt(n)+H("line/line.frag")})},pa={shaders:n=>({vertexShader:H("text/text.vert"),fragmentShader:H("text/text.frag")})};let ma=class{constructor(){this._programByKey=new Map}dispose(){this._programByKey.forEach(e=>e.dispose()),this._programByKey.clear()}getMaterialProgram(e,t,r){const i=t.key<<3|this._getMaterialOptionsValue(t.type,r);if(this._programByKey.has(i))return this._programByKey.get(i);const s=this._getProgramTemplate(t.type),{shaders:a}=s,{vertexShader:o,fragmentShader:l}=a(r),h=t.getShaderHeader(),c=t.getShaderMain(),u=o.replace("#pragma header",h).replace("#pragma main",c),d=e.programCache.acquire(u,l,t.getAttributeLocations());return this._programByKey.set(i,d),d}_getMaterialOptionsValue(e,t){switch(e){case q.BACKGROUND:return(t.pattern?1:0)<<1;case q.FILL:return(t.pattern?1:0)<<1;case q.OUTLINE:return 0;case q.LINE:{const r=t;return(r.sdf?1:0)<<2|(r.pattern?1:0)<<1}case q.ICON:return(t.sdf?1:0)<<1;case q.CIRCLE:case q.TEXT:default:return 0}}_getProgramTemplate(e){switch(e){case q.BACKGROUND:return na;case q.CIRCLE:return la;case q.FILL:return ha;case q.ICON:return ua;case q.LINE:return da;case q.OUTLINE:return ca;case q.TEXT:return pa;default:return null}}},Sr=class{constructor(){this._initialized=!1}dispose(){this._program=B(this._program),this._vertexArrayObject=B(this._vertexArrayObject)}render(e,t,r,i){e&&(this._initialized||this._initialize(e),e.setBlendFunctionSeparate(M.ONE,M.ONE_MINUS_SRC_ALPHA,M.ONE,M.ONE_MINUS_SRC_ALPHA),e.bindVAO(this._vertexArrayObject),e.useProgram(this._program),t.setSamplingMode(r),e.bindTexture(t,0),this._program.setUniform1i("u_tex",0),this._program.setUniform1f("u_opacity",i),e.drawArrays(ve.TRIANGLE_STRIP,0,4),e.bindTexture(null,0),e.bindVAO())}_initialize(e){if(this._initialized)return!0;const t=Le(e,Bt);if(!t)return!1;const r=new Int8Array(16);r[0]=-1,r[1]=-1,r[2]=0,r[3]=0,r[4]=1,r[5]=-1,r[6]=1,r[7]=0,r[8]=-1,r[9]=1,r[10]=0,r[11]=1,r[12]=1,r[13]=1,r[14]=1,r[15]=1;const i=Bt.attributes,s=new dr(e,i,$i,new Map([["geometry",pr.createVertex(e,mr.STATIC_DRAW,r)]]));return this._program=t,this._vertexArrayObject=s,this._initialized=!0,!0}};class fa{constructor(e){this._rctx=e,this._programByKey=new Map}dispose(){this._programByKey.forEach(e=>e.dispose()),this._programByKey.clear()}getProgram(e,t=[]){const r=e.vsPath+"."+e.fsPath+JSON.stringify(t);if(this._programByKey.has(r))return this._programByKey.get(r);const i={...t.map(c=>typeof c=="string"?{name:c,value:!0}:c).reduce((c,u)=>({...c,[u.name]:u.value}),{})},{vsPath:s,fsPath:a,attributes:o}=e,l=Qi(s,a,o,i),h=this._rctx.programCache.acquire(l.shaders.vertexShader,l.shaders.fragmentShader,l.attributes);if(!h)throw new Error("Unable to get program for key: ${key}");return this._programByKey.set(r,h),h}}const _a=512;let ga=class{constructor(e){this._resourceManager=e,this._cachedRasterizationCanvas=null}dispose(){this._cachedRasterizationCanvas=null}get _canvas(){return this._cachedRasterizationCanvas||(this._cachedRasterizationCanvas=document.createElement("canvas")),this._cachedRasterizationCanvas}rasterizeJSONResource(e){switch(e.type){case"dash":{const t=cr(e.dashTemplate),[r,i,s]=Si(t);return{size:[i,s],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}case"fill-style":{const[t,r,i,s]=Mi(this._canvas,e,Et);return{size:[r,i],image:new Uint32Array(t.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:s}}case"sdf":return Yt(e);case"CIMGradientFill":case"CIMGradientStroke":case"CIMHatchFill":case"CIMPictureMarker":case"CIMVectorMarker":return this._rasterizeCIMJSONResource(e)}}_rasterizeCIMJSONResource(e){var t;switch(e.type){case"CIMGradientFill":case"CIMGradientStroke":{const[r,i,s]=Ci(this._canvas,e);return{size:[i,s],image:new Uint32Array(r.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0,samplingMode:e.gradientType==="Discrete"||e.colorRamp.type==="CIMFixedColorRamp"?"Nearest":"Linear"}}case"CIMHatchFill":{const r=fe.fromCIMHatchFill(e,Et);return this._rasterizeCIMVectorMarker(r)}case"CIMPictureMarker":{const r=fe.fromCIMInsidePolygon(e);return this._rasterizeCIMVectorMarker(r)}case"CIMVectorMarker":{if(((t=e.markerPlacement)==null?void 0:t.type)==="CIMMarkerPlacementInsidePolygon"){const i=fe.fromCIMInsidePolygon(e);return this._rasterizeCIMVectorMarker(i)}const r=li(e);return r&&!e.avoidSDFRasterization?Yt(r):this._rasterizeCIMVectorMarker(e,!1,ur)}}}_rasterizeCIMVectorMarker(e,t=!0,r){const i=t?Jr.fromExtent(e.frame):null,[s,a,o,l,h]=fe.rasterize(this._canvas,e,i,this._resourceManager,!0,r);return s?{size:[a,o],image:new Uint32Array(s.buffer),sdf:!1,simplePattern:!1,anchorX:l,anchorY:h}:null}rasterizeImageResource(e,t,r,i){this._canvas.width=e,this._canvas.height=t;const s=this._canvas.getContext("2d",{willReadFrequently:!0});r instanceof ImageData?s.putImageData(r,0,0):(r.setAttribute("width",`${e}px`),r.setAttribute("height",`${t}px`),s.drawImage(r,0,0,e,t));const a=s.getImageData(0,0,e,t),o=new Uint8Array(a.data);if(i){for(const p of i)if(p&&p.oldColor&&p.oldColor.length===4&&p.newColor&&p.newColor.length===4){const[m,_,g,y]=p.oldColor,[f,x,b,w]=p.newColor;if(m===f&&_===x&&g===b&&y===w)continue;for(let v=0;v<o.length;v+=4)m===o[v]&&_===o[v+1]&&g===o[v+2]&&y===o[v+3]&&(o[v]=f,o[v+1]=x,o[v+2]=b,o[v+3]=w)}}let l;for(let p=0;p<o.length;p+=4)l=o[p+3]/255,o[p]=o[p]*l,o[p+1]=o[p+1]*l,o[p+2]=o[p+2]*l;let h=o,c=e,u=t;const d=_a;if(c>=d||u>=d){const p=c/u;p>1?(c=d,u=Math.round(d/p)):(u=d,c=Math.round(d*p)),h=new Uint8Array(4*c*u);const m=new Uint8ClampedArray(h.buffer);xi(o,e,t,m,c,u,!1)}return{size:[c,u],image:new Uint32Array(h.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}};function Yt(n){if(!n)return null;const{data:e,width:t,height:r,sdfPaddingRatio:i,sdfDecodeCoeff:s}=hi(n);return e?{size:[t,r],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,sdfPaddingRatio:i,sdfDecodeCoeff:s,anchorX:0,anchorY:0}:null}let De=class{constructor(e,t){this._width=0,this._height=0,this._free=[],this._width=e,this._height=t,this._free.push(new W(0,0,e,t))}get width(){return this._width}get height(){return this._height}allocate(e,t){if(e>this._width||t>this._height)return new W;let r=null,i=-1;for(let s=0;s<this._free.length;++s){const a=this._free[s];e<=a.width&&t<=a.height&&(r===null||a.y<=r.y&&a.x<=r.x)&&(r=a,i=s)}return r===null?new W:(this._free.splice(i,1),r.width<r.height?(r.width>e&&this._free.push(new W(r.x+e,r.y,r.width-e,t)),r.height>t&&this._free.push(new W(r.x,r.y+t,r.width,r.height-t))):(r.width>e&&this._free.push(new W(r.x+e,r.y,r.width-e,r.height)),r.height>t&&this._free.push(new W(r.x,r.y+t,e,r.height-t))),new W(r.x,r.y,e,t))}release(e){for(let t=0;t<this._free.length;++t){const r=this._free[t];if(r.y===e.y&&r.height===e.height&&r.x+r.width===e.x)r.width+=e.width;else if(r.x===e.x&&r.width===e.width&&r.y+r.height===e.y)r.height+=e.height;else if(e.y===r.y&&e.height===r.height&&e.x+e.width===r.x)r.x=e.x,r.width+=e.width;else{if(e.x!==r.x||e.width!==r.width||e.y+e.height!==r.y)continue;r.y=e.y,r.height+=e.height}this._free.splice(t,1),this.release(e)}this._free.push(e)}};const ya=256,va=n=>Math.floor(n/256);function ba(n){const e=new Set;for(const t of n)e.add(va(t));return e}function xa(n,e,t){return n.has(e)||n.set(e,t().then(()=>{n.delete(e)}).catch(r=>{n.delete(e),Er(r)})),n.get(e)}const wa=n=>({rect:new W(0,0,0,0),page:0,metrics:{left:0,width:0,height:0,advance:0,top:0},code:n,sdf:!0});let Ma=class{constructor(e,t,r){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphCache={},this._textures=[],this._rangePromises=new Map,this._preloadCache={},this.width=e,this.height=t,this._glyphSource=r,this._binPack=new De(e-4,t-4),this._glyphData.push(new Uint8Array(e*t)),this._dirties.push(!0),this._textures.push(null),this._initDecorationGlyphs()}dispose(){this._binPack=null;for(const e of this._textures)e&&e.dispose();this._textures.length=0,this._glyphData.length=0}_initDecorationGlyphs(){const e=[117,149,181,207,207,181,149,117],t=[],r=[];for(let a=0;a<e.length;a++){const o=e[a];for(let l=0;l<11;l++){const h=a>=3&&a<5&&l>=3&&l<8?255:0;t.push(o),r.push(h)}}const i={metrics:{width:5,height:2,left:0,top:0,advance:0},bitmap:new Uint8Array(t)},s={metrics:{width:5,height:2,left:0,top:0,advance:0},bitmap:new Uint8Array(r)};this._recordGlyph(i),this._recordGlyph(s)}getTexture(e,t){if(!this._textures[t]){const r=new A;r.pixelFormat=L.ALPHA,r.wrapMode=k.CLAMP_TO_EDGE,r.width=this.width,r.height=this.height,this._textures[t]=new K(e,r,new Uint8Array(this.width*this.height))}return this._dirties[t]&&(this._textures[t].setData(this._glyphData[t]),this._dirties[t]=!1),this._textures[t]}async getGlyphItems(e,t,r){const i=this._getGlyphCache(e);return await this._fetchRanges(e,t,r),t.map(s=>this._getMosaicItem(i,e,s))}bind(e,t,r,i){const s=this.getTexture(e,r);s.setSamplingMode(t),e.bindTexture(s,i)}preloadASCIIGlyphCache(e){const t=this._preloadCache[e];if(t!=null)return t;const r=this._glyphSource.preloadASCIIRange(e).then(()=>{const i=this._getGlyphCache(e);for(let s=0;s<256;s++)this._getMosaicItem(i,e,s)});return this._preloadCache[e]=r,r}_getGlyphCache(e){return this._glyphCache[e]||(this._glyphCache[e]={}),this._glyphCache[e]}_invalidate(){this._dirties[this._currentPage]=!0}async _fetchRanges(e,t,r){const i=ba(t),s=[];i.forEach(a=>{s.push(this._fetchRange(e,a,r))}),await Promise.all(s)}async _fetchRange(e,t,r){if(t>ya)return;const i=e+t;return xa(this._rangePromises,i,()=>this._glyphSource.getRange(e,t,r))}_getMosaicItem(e,t,r){if(!e[r]){const i=this._glyphSource.getGlyph(t,r);if(!(i!=null&&i.metrics))return wa(r);const s=this._recordGlyph(i),a=this._currentPage,o=i.metrics;e[r]={rect:s,page:a,metrics:o,code:r,sdf:!0},this._invalidate()}return e[r]}_recordGlyph(e){const t=e.metrics;let r;if(t.width===0)r=new W(0,0,0,0);else{const s=t.width+6,a=t.height+2*3;r=this._binPack.allocate(s,a),r.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(null),this._initDecorationGlyphs(),this._binPack=new De(this.width-4,this.height-4),r=this._binPack.allocate(s,a));const o=this._glyphData[this._currentPage],l=e.bitmap;let h,c;if(l)for(let u=0;u<a;u++){h=s*u,c=this.width*(r.y+u)+r.x;for(let d=0;d<s;d++)o[c+d]=l[h+d]}ne("esri-glyph-debug")&&this._showDebugPage(o)}return r}_showDebugPage(e){const t=document.createElement("canvas"),r=t.getContext("2d"),i=new ImageData(this.width,this.height),s=i.data;t.width=this.width,t.height=this.height,t.style.border="1px solid black";for(let a=0;a<e.length;++a)s[4*a]=e[a],s[4*a+1]=0,s[4*a+2]=0,s[4*a+3]=255;r.putImageData(i,0,0),document.body.appendChild(t)}},Jt=class{constructor(e){for(this._metrics=[],this._bitmaps=[];e.next();)switch(e.tag()){case 1:{const t=e.getMessage();for(;t.next();)switch(t.tag()){case 3:{const r=t.getMessage();let i,s,a,o,l,h,c;for(;r.next();)switch(r.tag()){case 1:i=r.getUInt32();break;case 2:s=r.getBytes();break;case 3:a=r.getUInt32();break;case 4:o=r.getUInt32();break;case 5:l=r.getSInt32();break;case 6:h=r.getSInt32();break;case 7:c=r.getUInt32();break;default:r.skip()}r.release(),i&&(this._metrics[i]={width:a,height:o,left:l,top:h,advance:c},this._bitmaps[i]=s);break}default:t.skip()}t.release();break}default:e.skip()}}getMetrics(e){return this._metrics[e]}getBitmap(e){return this._bitmaps[e]}},Sa=class{constructor(){this._ranges=[]}getRange(e){return this._ranges[e]}addRange(e,t){this._ranges[e]=t}},Ca=class{constructor(e){this._glyphInfo={},this._baseURL=e}getRange(e,t,r){const i=this._getFontStack(e);if(i.getRange(t))return Promise.resolve();const s=256*t,a=s+255,o=this._baseURL.replace("{fontstack}",e).replace("{range}",s+"-"+a);return we(o,{responseType:"array-buffer",...r}).then(l=>{i.addRange(t,new Jt(new Lt(new Uint8Array(l.data),new DataView(l.data))))})}async preloadASCIIRange(e){const t=this._getFontStack(e),r=0,i=255,s=this._baseURL.replace("{fontstack}",e).replace("{range}",r+"-"+i),a=await we(s,{responseType:"array-buffer"}),o=new Jt(new Lt(new Uint8Array(a.data),new DataView(a.data)));for(let l=r;l<=i;l++)t.getRange(l)||t.addRange(l,o)}getGlyph(e,t){const r=this._getFontStack(e);if(!r)return;const i=Math.floor(t/256),s=r.getRange(i);return s?{metrics:s.getMetrics(t),bitmap:s.getBitmap(t)}:void 0}_getFontStack(e){let t=this._glyphInfo[e];return t||(t=this._glyphInfo[e]=new Sa),t}};const Kt=1e20;let Oa=class{constructor(e,t=2){this._textureSize=e,this._rasterizationScale=t,this._canvasSize=this._textureSize*this._rasterizationScale,this._svg=null;const{_canvasSize:r}=this,i=document.createElement("canvas");i.width=i.height=r,this._context=i.getContext("2d",{willReadFrequently:!1}),this._gridOuter=new Float64Array(r*r),this._gridInner=new Float64Array(r*r),this._f=new Float64Array(r),this._d=new Float64Array(r),this._z=new Float64Array(r+1),this._v=new Int16Array(r)}dispose(){this._context=this._gridOuter=this._gridInner=this._f=this._d=this._z=this._v=null,this._svg=Kr(this._svg)}draw(e,t,r){const{_canvasSize:i,_textureSize:s,_rasterizationScale:a}=this,o=s/4;this._initSVG();const l=this.createSVGString(e,t);return new Promise((h,c)=>{const u=new Image;u.src="data:image/svg+xml; charset=utf8, "+encodeURIComponent(l),u.onload=()=>{u.onload=null,this._context.clearRect(0,0,i,i),this._context.drawImage(u,0,0,i,i);const p=this._context.getImageData(0,0,i,i),m=new Uint8Array(s*s*4);for(let _=0;_<i*i;_++){const g=p.data[4*_+3]/255;this._gridOuter[_]=g===1?0:g===0?Kt:Math.max(0,.5-g)**2,this._gridInner[_]=g===1?Kt:g===0?0:Math.max(0,g-.5)**2}this._edt(this._gridOuter,i,i),this._edt(this._gridInner,i,i);for(let _=0;_<s*s;_++){let g=0;for(let y=0;y<a;y++){const f=Math.floor(_/s)*a+y;for(let x=0;x<a;x++){const b=f*i+(_%s*a+x);g+=this._gridOuter[b]-this._gridInner[b]}}g/=a*a,g/=a,is(.5-g/(2*o),m,4*_)}h(m)};const d=r==null?void 0:r.signal;d&&zr(d,()=>c(kr()))})}_initSVG(){return this._svg||(this._svg=Qr()),this._svg}createSVGString(e,t){const r=this._initSVG(),i=Zr("path");i.setAttribute("d",e),r.appendChild(i);const s=i.getBBox(),a=s.width/s.height,o=this._canvasSize/2;let l,h,c;if(a>1){l=o/s.width;const m=o*(1/a);h=this._canvasSize/4,c=o-m/2}else l=o/s.height,h=o-o*a/2,c=this._canvasSize/4;const u=-s.x*l+h,d=-s.y*l+c;i.setAttribute("style",`transform: matrix(${l}, 0, 0, ${l}, ${u}, ${d})`),i.setAttribute("stroke-width",""+.5/l);const p=`<svg style="fill:${t?"red":"none"}; stroke:${t?"none":"red"}" height="${this._canvasSize}" width="${this._canvasSize}" xmlns="http://www.w3.org/2000/svg">${r.innerHTML}</svg>`;return r.removeChild(i),p}_edt(e,t,r){const i=this._f,s=this._d,a=this._v,o=this._z;for(let l=0;l<t;l++){for(let h=0;h<r;h++)i[h]=e[h*t+l];this._edt1d(i,s,a,o,r);for(let h=0;h<r;h++)e[h*t+l]=s[h]}for(let l=0;l<r;l++){for(let h=0;h<t;h++)i[h]=e[l*t+h];this._edt1d(i,s,a,o,t);for(let h=0;h<t;h++)e[l*t+h]=Math.sqrt(s[h])}}_edt1d(e,t,r,i,s){r[0]=0,i[0]=-1e20,i[1]=1e20;for(let a=1,o=0;a<s;a++){let l=(e[a]+a*a-(e[r[o]]+r[o]*r[o]))/(2*a-2*r[o]);for(;l<=i[o];)o--,l=(e[a]+a*a-(e[r[o]]+r[o]*r[o]))/(2*a-2*r[o]);o++,r[o]=a,i[o]=l,i[o+1]=1e20}for(let a=0,o=0;a<s;a++){for(;i[o+1]<a;)o++;t[a]=(a-r[o])*(a-r[o])+e[r[o]]}}};function oe(n){return n&&n.type==="static"}let Pa=class Cr{constructor(e,t,r=0){this._mosaicPages=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects=new Map,this._spriteCopyQueue=[],this.pixelRatio=1,this._pageWidth=e,this._pageHeight=t,r>0&&(this._maxItemSize=r),this.pixelRatio=window.devicePixelRatio||1,this._binPack=new De(this._pageWidth,this._pageHeight);const i=Math.floor(this._pageWidth),s=Math.floor(this._pageHeight);this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(i*s)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0})}getWidth(e){return e>=this._mosaicPages.length?-1:this._mosaicPages[e].size[0]}getHeight(e){return e>=this._mosaicPages.length?-1:this._mosaicPages[e].size[1]}getPageTexture(e){return e<this._mosaicPages.length?this._mosaicPages[e].texture:null}has(e){return this._mosaicRects.has(e)}get itemCount(){return this._mosaicRects.size}getSpriteItem(e){return this._mosaicRects.get(e)}addSpriteItem(e,t,r,i,s,a,o=1,l="Linear",h=.5,c=1){if(this._mosaicRects.has(e))return this._mosaicRects.get(e);let u,d,p;if(oe(r)?[u,d,p]=this._allocateImage(t[0],t[1]):(u=new W(0,0,t[0],t[1]),d=this._mosaicPages.length,this._mosaicPages.push({mosaicsData:r,size:[t[0]+2*te,t[1]+2*te],dirty:!0,texture:void 0})),u.width<=0||u.height<=0)return null;const m={type:"sprite",rect:u,width:t[0],height:t[1],sdf:s,simplePattern:a,rasterizationScale:o,samplingMode:l,sdfPaddingRatio:h,sdfDecodeCoeff:c,page:d};return this._mosaicRects.set(e,m),oe(r)&&(ne("esri-mosaic-debug")&&this._showDebugSprite(t,r.data),this._copy({rect:u,spriteSize:t,spriteData:r.data,page:d,pageSize:p,repeat:i,sdf:s})),m}hasItemsToProcess(){return this._spriteCopyQueue.length!==0}processNextItem(){const e=this._spriteCopyQueue.pop();e&&this._copy(e)}getMosaicItemPosition(e){const t=this.getSpriteItem(e),r=t==null?void 0:t.rect;if(!r)return null;r.width=t.width,r.height=t.height;const i=t.width,s=t.height,a=te,o=this._mosaicPages[t.page].size;return{size:[t.width,t.height],tl:[(r.x+a)/o[0],(r.y+a)/o[1]],br:[(r.x+a+i)/o[0],(r.y+a+s)/o[1]],page:t.page}}bind(e,t,r=0,i=0){const s=this._mosaicPages[r],a=s.mosaicsData;let o=s.texture;o||(o=Qt(e,s.size),s.texture=o),o.setSamplingMode(t),oe(a)?(e.bindTexture(o,i),s.dirty&&(o.setData(new Uint8Array(a.data.buffer)),o.generateMipmap(),ne("esri-mosaic-debug")&&this._showDebugPage(r))):(a.data.loadFrame(o),e.bindTexture(o,i),o.generateMipmap()),s.dirty=!1}getTexture(e,t=0){const r=this._mosaicPages[t],i=r.mosaicsData;let s=r.texture;return s||(s=Qt(e,r.size),r.texture=s),oe(i)?r.dirty&&(s.setData(new Uint8Array(i.data.buffer)),s.generateMipmap(),ne("esri-mosaic-debug")&&this._showDebugPage(t)):(i.data.loadFrame(s),s.generateMipmap()),r.dirty=!1,s}dispose(){this._binPack=null;for(const e of this._mosaicPages){const t=e.texture;t&&t.dispose();const r=e.mosaicsData;oe(r)||r.data.destroy()}this._mosaicPages=null,this._mosaicRects.clear()}static _copyBits(e,t,r,i,s,a,o,l,h,c,u){let d=i*t+r,p=l*a+o;if(u){p-=a;for(let m=-1;m<=c;m++,d=((m+c)%c+i)*t+r,p+=a)for(let _=-1;_<=h;_++)s[p+_]=e[d+(_+h)%h]}else for(let m=0;m<c;m++){for(let _=0;_<h;_++)s[p+_]=e[d+_];d+=t,p+=a}}_copy(e){if(e.page>=this._mosaicPages.length)return;const t=this._mosaicPages[e.page],r=t.mosaicsData;if(!oe(t.mosaicsData))throw new Me("mapview-invalid-resource","unsuitable data type!");const i=e.spriteData,s=r.data;Cr._copyBits(i,e.spriteSize[0],0,0,s,e.pageSize[0],e.rect.x+te,e.rect.y+te,e.spriteSize[0],e.spriteSize[1],e.repeat),t.dirty=!0}_allocateImage(e,t){e+=2*te,t+=2*te;const r=Math.max(e,t);if(this._maxItemSize&&this._maxItemSize<r){const s=2**Math.ceil(It(e)),a=2**Math.ceil(It(t)),o=new W(0,0,e,t);return this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(s*a)},size:[s,a],dirty:!0,texture:void 0}),[o,this._mosaicPages.length-1,[s,a]]}const i=this._binPack.allocate(e,t);if(i.width<=0){const s=this._mosaicPages[this._currentPage];return!s.dirty&&oe(s.mosaicsData)&&(s.mosaicsData.data=null),this._currentPage=this._mosaicPages.length,this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(this._pageWidth*this._pageHeight)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0}),this._binPack=new De(this._pageWidth,this._pageHeight),this._allocateImage(e,t)}return[i,this._currentPage,[this._pageWidth,this._pageHeight]]}_showDebugSprite([e,t],r){const i=document.createElement("canvas");i.width=e,i.height=t,i.setAttribute("style",`position: absolute; top: ${4+204*Ta++}px; right: 208px; width: 200px; height: 200px; border: 1px solid black;`);const s=i.getContext("2d"),a=new ImageData(e,t);a.data.set(new Uint8Array(r.buffer)),s.putImageData(a,0,0),document.body.appendChild(i)}_showDebugPage(e){const t=this._mosaicPages[e],{size:[r,i],mosaicsData:s}=t;if(!oe(s))return;const a=`mosaicDebugPage${e}`,o=document.getElementById(a)??document.createElement("canvas");o.id=a,o.width=r,o.height=i,o.setAttribute("style",`position: absolute; top: ${4+204*e}px; right: 4px; width: 200px; height: 200px; border: 1px solid black;`);const l=o.getContext("2d"),h=new ImageData(r,i);h.data.set(new Uint8Array(s.data.buffer)),l.putImageData(h,0,0),document.body.appendChild(o)}},Ta=0;function Qt(n,e){const t=new A;return t.width=e[0],t.height=e[1],t.wrapMode=k.CLAMP_TO_EDGE,new K(n,t,null)}let Ra=class{constructor(e,t,r,i){this._animation=e,this._frameData=null;const s=a=>{this._frameData=a,t.requestRender()};this.frameCount=this._animation.frameDurations.length,this.width=this._animation.width,this.height=this._animation.height,this._playHandle=ls(this._animation,r,i,s)}destroy(){this._playHandle.remove()}loadFrame(e){const t=this._frameData;if(t==null)return;const r="width"in t?t.width:t.codedWidth,i="height"in t?t.height:t.codedHeight;e.updateData(0,te,te,r,i,t),this._frameData=null}},Ea=class{constructor(){this._entries=new ka,this._nodes=new Map,this._book=new Aa}add(e){let t=this._entries.get(e);if(!t){const r=this._book.add(e),i=new Object;t={location:r,references:0,handle:i};const s=this._entries.set(e,t);this._nodes.set(i,s)}return t.references++,t}remove(e){const t=this._nodes.get(e.handle);t&&t.payload&&(t.payload.references--,t.payload.references===0&&(this._book.remove(t.payload.location),this._entries.delete(t),this._nodes.delete(e.handle)))}getTexture(e,t){return this._book.getTexture(e,t)}destroy(){this._book.destroy()}},za=class Or{constructor(e,t){this.parent=e,this.key=t,this.payload=null,this._children=new Map}get(e){return this._children.get(e)}ensure(e){let t=this._children.get(e);return t||(t=new Or(this,e),this._children.set(e,t)),t}delete(e){this._children.delete(e)}},ka=class{constructor(){this._root=new za(null,NaN)}set(e,t){let r=this._root;for(const i of e)for(const s of i)r=r.ensure(s);return r.payload=t,r}delete(e){var t;(t=e.parent)==null||t.delete(e.key)}get(e){let t=this._root;for(const r of e)for(const i of r){const s=t.get(i);if(!s)return;t=s}return t.payload||void 0}},Aa=class{constructor(){this._pages=[]}add(e){this._pages.length===0&&this._pages.push(new Zt);let t=this._pages.length-1,r=this._pages[t].add(e);if(r||(this._pages.push(new Zt),t=this._pages.length-1,r=this._pages[t].add(e)),!r)throw new Error("Data allocation failed.");return{...r,page:t}}remove(e){this._pages[e.page].remove(e)}getTexture(e,t){return this._pages[t].getTexture(e)}destroy(){}},Zt=class{constructor(){this._cursor={row:0,column:0},this._columns=1024,this._rows=1024,this._data=new Float32Array(this._columns*this._rows*4),this._texture=null,this._textureCursor={row:0,column:0}}add(e){if(e.length>this._columns)throw new Error(`The maximum allocation size is ${this._columns} texels.`);const t={...this._cursor};if(t.column+=e.length,t.column>=this._columns&&(t.column=e.length,t.row++),t.row>=this._rows)return null;this._cursor=t;const r={...this._cursor};r.column-=e.length;let i=4*(r.row*this._columns+r.column);for(let s=0;s<e.length;s++)this._data[i++]=e[s][0],this._data[i++]=e[s][1],this._data[i++]=e[s][2],this._data[i++]=e[s][3];return r}remove(e){}getTexture(e){if(!this._texture){const i=new A(this._columns,this._rows);i.pixelFormat=L.RGBA,i.dataType=ft.FLOAT,i.wrapMode=k.CLAMP_TO_EDGE,i.samplingMode=V.NEAREST,i.hasMipmap=!1;const s=new rs(e,i);this._texture=new K(e,s)}if(this._cursor.row===this._textureCursor.row&&this._cursor.column===this._textureCursor.column)return this._texture;const t=this._textureCursor.row,r=this._cursor.row-t+1;return this._texture.updateData(0,0,t,this._columns,r,this._data,t),this._textureCursor.row=this._cursor.row,this._textureCursor.column=this._cursor.column,this._texture}destroy(){var e;(e=this._texture)==null||e.dispose()}};const er="arial-unicode-ms-regular",Pr=()=>ut.getLogger("esri.views.MapView"),me=(n,e,t)=>Pr().error(new Me(n,e,t)),Ia=(n,e="")=>Pr().warnOnce(n,e);let Fa=class Tr{static fromMosaic(e,t){return new Tr(e,t.page,t.sdf,t.samplingMode)}constructor(e,t,r,i){this.mosaicType=e,this.page=t,this.sdf=r,this.samplingMode=i}};class Ba{constructor(e){this._requestRender=e,this._resourceManager=new ts,this._invalidFontsMap=new Map,this._sdfConverter=new Oa(Ke),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._ongoingRasterizations=new Map,this._imageRequestQueue=new es({concurrency:10,process:async(t,r)=>{pt(r);try{return await we(t,{responseType:"image",signal:r})}catch(i){throw yt(i)?i:new Me("mapview-invalid-resource",`Could not fetch requested resource at ${t}`,i)}}}),this.animationStore=new Ea,this._spriteMosaic=new Pa(2048,2048,500),this._glyphSource=new Ca(`${Ar.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new Ma(1024,1024,this._glyphSource),this._rasterizer=new ga(this.resourceManager)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null,this._resourceManager.destroy(),this.animationStore.destroy()}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}get resourceManager(){return this._resourceManager}async rasterizeItem(e,t){if(e==null)return me("mapview-null-resource","Unable to rasterize null resource"),null;if(e.type==="animation-info"){const{resource:s}=e,a=this.animationStore.add(s),{location:o}=a;return{rect:new W(o.column,o.row,s.length,1),page:o.page,type:"sprite",width:s.length,height:1,rasterizationScale:1,sdfPaddingRatio:.5,samplingMode:"Linear",sdfDecodeCoeff:1,simplePattern:!1}}if(e.type!=="cim-rasterization-info")return me("mapview-unexpected-resource","Unable to rasterize resource"),null;const{resource:r}=e;if(r.type==="text"){const s=await this._rasterizeText(r,t);for(const a of s.glyphs)this._setTextureBinding(ze.GLYPH,a);return s}const i=await this._rasterizeSprite(r,t);return i&&this._setTextureBinding(ze.SPRITE,i),i}getMosaicInfo(e,t,r=!1){const i=this._getTextureBindingInfo(e,t,r);return i?{size:i.size,texture:{texture:i.texture,unit:i.type==="sprite"?Pi:zt}}:(me("mapview-invalid-resource",`Unable to find resource for ${t}`),{size:[0,0],texture:{texture:null,unit:0}})}_getTextureBindingInfo(e,t,r){const i=this._bindingInfos[t-1],s=i.page,a=i.samplingMode==="Nearest"?V.NEAREST:r?V.LINEAR_MIPMAP_LINEAR:V.LINEAR;switch(i.mosaicType){case ze.SPRITE:{const o=[this.sprites.getWidth(s),this.sprites.getHeight(s)],l=this._spriteMosaic.getTexture(e,s);return l.setSamplingMode(a),{type:"sprite",texture:l,size:o}}case ze.GLYPH:{const o=[this.glyphs.width,this.glyphs.height],l=this._glyphMosaic.getTexture(e,s);return this._glyphMosaic.bind(e,a,s,zt),l.setSamplingMode(a),{type:"glyph",texture:l,size:o}}default:return me("mapview-texture-manager",`Cannot handle unknown type ${i.mosaicType}`),null}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|(t.samplingMode==="Nearest"?1:0)<<3|t.page<<4}_setTextureBinding(e,t){const r=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(r)){const i=Fa.fromMosaic(e,t),s=this._bindingInfos.length+1;this._hashToBindingIndex.set(r,s),this._bindingInfos.push(i)}t.textureBinding=this._hashToBindingIndex.get(r)}async _rasterizeText(e,t){const{font:r,textString:i}=e,s=ei(r),a=this._invalidFontsMap.has(s),[o,l]=ti(i),h=as(o);try{const c=a?er:s;return ne("esri-2d-stabilize-glyphs")&&await this._glyphMosaic.preloadASCIIGlyphCache(c),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(c,h,t),isRightToLeft:l}}catch{return Ia(`Font ${s} is not available on the web, using "Arial Unicode MS Regular"`),this._invalidFontsMap.set(s,!0),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(er,h,t),isRightToLeft:l}}}_hashSpriteResource(e){switch(e.type){case"path":return`path:${e.path}.${e.asFill?1:0}`;case"CIMPictureMarker":return`${e.type}:${e.url}:${e.size}:${os(e.markerPlacement)}`;case"CIMPictureFill":return`${e.type}:${e.url}:${e.height}`;case"CIMPictureStroke":return`${e.type}:${e.url}:${e.width}`;case"dash":return`dash:${e.capStyle}.${cr(e.dashTemplate).join("")}`;case"sdf":return`sdf:${JSON.stringify(e.geom)}.${e.asFill?1:0}`;case"fill-style":return`fill_style:${e.style}`;case"animated":return JSON.stringify(ss(e));case"CIMGradientFill":case"CIMGradientStroke":return`gradient:${JSON.stringify(e.colorRamp)}.${e.gradientType}.${e.interval}`;case"CIMHatchFill":case"CIMVectorMarker":return JSON.stringify(e)}}async _rasterizeSprite(e,t){var i;if(!e)return null;const r=or(this._hashSpriteResource(e));if(this._spriteMosaic.has(r))return this._spriteMosaic.getSpriteItem(r);if("url"in e&&e.url||e.type==="CIMPictureFill"||e.type==="CIMPictureStroke"||e.type==="CIMPictureMarker"||e.type==="CIMVectorMarker"){const s=[];fe.fetchResources({type:"CIMPointSymbol",symbolLayers:[e]},this._resourceManager,s),s.length>0&&await Promise.all(s)}switch(e.type){case"CIMPictureMarker":return((i=e.markerPlacement)==null?void 0:i.type)==="CIMMarkerPlacementInsidePolygon"?this._rasterizeJSONResource(r,e):this._handleAsyncResource(r,e,t);case"animated":case"CIMPictureFill":case"CIMPictureStroke":case"path":return this._handleAsyncResource(r,e,t);case"CIMGradientFill":case"CIMGradientStroke":case"CIMHatchFill":case"CIMVectorMarker":case"dash":case"fill-style":case"sdf":return this._rasterizeJSONResource(r,e)}}_rasterizeJSONResource(e,t){const r=this._rasterizer.rasterizeJSONResource(t);if(r){const{size:i,image:s,sdf:a,simplePattern:o,rasterizationScale:l,samplingMode:h,sdfPaddingRatio:c,sdfDecodeCoeff:u}=r;return this._addItemToMosaic(e,i,{type:"static",data:s},ke(t),a,o,l,h,c,u)}return null}async _handleAsyncResource(e,t,r){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let i;return i=t.type==="path"?this._handleSVG(t,e,r):this._handleImage(t,e,r),this._ongoingRasterizations.set(e,i),i.finally(()=>this._ongoingRasterizations.delete(e)),i}async _handleSVG(e,t,r){const i=[Ke,Ke],{asFill:s}=e,a=await this._sdfConverter.draw(e.path,s,r);return this._addItemToMosaic(t,i,{type:"static",data:new Uint32Array(a.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,r){const i=e.url,s=this.resourceManager.getResource(i);if(s==null)return null;const{width:a,height:o}=s;if(s instanceof HTMLImageElement){if(e.type==="animated")return me("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;const d="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:p,sdf:m,image:_}=this._rasterizer.rasterizeImageResource(a,o,s,d);return this._addItemToMosaic(t,p,{type:"static",data:_},ke(e),m,!1)}let l,h,c;e.type==="animated"?(l=!1,h={type:"CIMAnimatedSymbolProperties",playAnimation:e.playAnimation,reverseAnimation:e.reverseAnimation,randomizeStartTime:e.randomizeStartTime,randomizeStartSeed:e.randomizeStartSeed,startTimeOffset:e.startTimeOffset,duration:e.duration,repeatType:e.repeatType,repeatDelay:e.repeatDelay},c=e.startGroup||0):(l=ke(e),h={type:"CIMAnimatedSymbolProperties"},c=0);const u=new Ra(s,this._requestRender,h,c);return this._addItemToMosaic(t,[u.width,u.height],{type:"animated",data:u},l,!1,!1)}async _handleImage(e,t,r){const i=e.url;if(La(i)||Na(i))return this._handleGIFOrPNG(e,t,r);if(e.type==="animated")return me("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;try{let s;const a=this.resourceManager.getResource(i);if(a!=null&&a instanceof HTMLImageElement)s=a;else{const{data:p}=await this._imageRequestQueue.push(i,{...r});s=p}if(ns(i)){if("width"in e&&"height"in e)s.width=de(e.width),s.height=de(e.height);else if("cim"in e){const p=e;s.width=de(p.width??p.scaleX*p.size),s.height=de(p.size)}}if(!s.width||!s.height)return null;const o=s.width,l=s.height,h="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:c,sdf:u,image:d}=this._rasterizer.rasterizeImageResource(o,l,s,h);return this._addItemToMosaic(t,c,{type:"static",data:d},ke(e),u,!1)}catch(s){throw yt(s)?s:new Me("mapview-invalid-resource",`Could not fetch requested resource at ${i}. ${s.message}`)}}_addItemToMosaic(e,t,r,i,s,a,o,l,h,c){return this._spriteMosaic.addSpriteItem(e,t,r,i,s,a,o,l,h,c)}}function ke(n){switch(n.type){case"CIMVectorMarker":case"CIMPictureMarker":return Ua(n);default:return!0}}const $a=n=>n!=null&&n.startsWith("data:image/gif"),La=n=>n&&(n.includes(".gif")||$a(n)),Da=n=>n!=null&&n.startsWith("data:image/png"),Na=n=>n&&(n.includes(".png")||Da(n)),Ua=n=>n&&"markerPlacement"in n&&n.markerPlacement&&n.markerPlacement.type==="CIMMarkerPlacementInsidePolygon";let Va=class{constructor(e){this._queue=[],this._refreshable=e}destroy(){this._queue=[]}enqueueTextureUpdate(e,t){const r=Ir(),i=e,s=Ti,a=Math.ceil(i.height/s);pt(t);for(let o=0;o<a;o++){const l=o*s,h=o===a-1,c=h?i.height-s*o:s;this._queue.push({type:"chunk",request:e,resolver:r,chunk:o,chunkOffset:l,destHeight:c,chunkIsLast:h,options:t})}return Fr(t,o=>r.reject(o)),r.promise}upload(){const e=performance.now();let t=0;for(;this._queue.length;){const r=this._queue.shift();if(r){if(r.options.signal!=null&&r.options.signal.aborted)continue;switch(r.type){case"chunk":this._uploadChunk(r);break;case"no-chunk":this._uploadNoChunk(r)}++t;const i=performance.now()-e;if(i+i/t>=Ri)break}}this._queue.length&&this._refreshable.requestRender()}_uploadChunk(e){const{request:t,resolver:r,chunkOffset:i,chunkIsLast:s,destHeight:a}=e,{data:o,texture:l,width:h}=t;o!=null&&(l.updateData(0,0,i,h,a,o,i),s&&r.resolve())}_uploadNoChunk(e){const{request:t,resolver:r}=e,{data:i,texture:s}=t;s.setData(i),r.resolve()}};const Ga=ps(-.5,-.5);let qa=class{constructor(){this._centerNdc=Xe(),this._pxToNdc=Xe(),this._worldDimensionsPx=Xe(),this._mat3=Ue(),this._initialized=!1}dispose(){this._program=B(this._program),this._quad=B(this._quad)}render(e,t,r){const{context:i}=e,s=this._updateGeometry(e,r);if(t!=null){const{r:a,g:o,b:l,a:h}=t;i.setClearColor(h*a/255,h*o/255,h*l/255,h)}else i.setClearColor(0,0,0,0);if(i.setStencilFunction(ct.ALWAYS,0,255),i.setStencilWriteMask(255),!s)return i.setClearStencil(ht),void i.clear(N.STENCIL|N.COLOR);i.setClearStencil(Ei),i.clear(N.STENCIL|N.COLOR),this._initialized||this._initialize(i),i.setDepthWriteEnabled(!1),i.setDepthTestEnabled(!1),i.setColorMask(!1,!1,!1,!1),i.setBlendingEnabled(!1),i.setStencilOp(Qe.KEEP,Qe.KEEP,Qe.REPLACE),i.setStencilFunction(ct.ALWAYS,ht,255),i.setStencilTestEnabled(!0),i.useProgram(this._program),this._program.setUniformMatrix3fv("u_worldExtent",this._mat3),this._quad.bind(),this._quad.draw(),this._quad.unbind()}_initialize(e){if(this._initialized)return;const t=Le(e,Ui);t&&(this._program=t,this._quad=new Se(e,[0,0,1,0,0,1,1,1]),this._initialized=!0)}_updateGeometry(e,t){const{state:r,pixelRatio:i}=e,{size:s,rotation:a}=r,o=Math.round(s[0]*i),l=Math.round(s[1]*i);if(!r.spatialReference.isWrappable)return!1;const h=hs(a),c=Math.abs(Math.cos(h)),u=Math.abs(Math.sin(h)),d=Math.round(o*c+l*u),p=Math.round(i*r.worldScreenWidth);if(d<=p)return!1;const m=o*u+l*c,_=(t.left-t.right)*i/o,g=(t.bottom-t.top)*i/l;et(this._worldDimensionsPx,p,m,1),et(this._pxToNdc,2/o,-2/l,1),et(this._centerNdc,_,g,1);const y=this._mat3;return cs(y,this._centerNdc),Dt(y,y,this._pxToNdc),a!==0&&gr(y,y,h),Dt(y,y,this._worldDimensionsPx),yr(y,y,Ga),!0}},Ha=class extends qe{constructor(){super(...arguments),this.type=He.Blend,this._backBufferTexture=null,this.shaders={blend:new Gi,opacity:new Vi}}shutdown(){super.shutdown(),this._backBufferTexture!==null&&(this._backBufferTexture.dispose(),this._backBufferTexture=null)}render(e,t){const{context:r,state:i,pixelRatio:s,inFadeTransition:a,painter:o}=e,{size:l}=i,h=r.getBoundFramebufferObject();let c,u;h!=null?(c=h.width,u=h.height):(c=Math.round(s*l[0]),u=Math.round(s*l[1]));const{blendMode:d}=t;if(d==="normal"){const y={shader:this.shaders.opacity,uniforms:{config:{layerTexture:{texture:t.colorTexture,unit:0},opacity:t.config.opacity}},defines:null,optionalAttributes:null,useComputeBuffer:!1};return o.setPipelineState(Ge),void o.submitDrawMesh(r,y,o.quadMesh)}const p=this._createOrResizeTexture(e,c,u);h.copyToTexture(0,0,c,u,0,0,p);const m={color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:M.ONE,dstRGB:M.ZERO,srcAlpha:M.ONE,dstAlpha:M.ZERO}},depth:!1,stencil:!1};o.setPipelineState(m);const _={backbufferTexture:{texture:p,unit:0},layerTexture:{texture:t.colorTexture,unit:1},inFadeOpacity:a?1:0,...t.config},g={shader:this.shaders.blend,uniforms:{config:_},defines:{blendMode:d},optionalAttributes:null,useComputeBuffer:!1};o.submitDrawMesh(r,g,o.quadMesh)}_createOrResizeTexture(e,t,r){var s,a;const{context:i}=e;if(this._backBufferTexture!==null&&((s=this._backBufferTexture.descriptor)==null?void 0:s.width)===t&&((a=this._backBufferTexture.descriptor)==null?void 0:a.height)===r)return this._backBufferTexture;if(this._backBufferTexture===null){const o=new A;o.internalFormat=L.RGBA,o.wrapMode=k.CLAMP_TO_EDGE,o.width=t,o.height=r,this._backBufferTexture=new K(i,o)}else this._backBufferTexture.resize(t,r);return this._backBufferTexture}},Wa=class{constructor(){this._blendTechnique=new Ha}dispose(e){var t;(t=this._blendTechnique)==null||t.shutdown()}draw(e,t,r,i,s){this._blendTechnique.render(e,{colorTexture:t,config:{opacity:s,samplingMode:r},blendMode:i})}},gt=class{constructor(){this.name=this.constructor.name}createOptions(e,t){return null}},tr=class extends gt{constructor(e){super(),this.name=this.constructor.name,this.defines=[e]}dispose(){}bind({context:e,painter:t}){this._prev=e.getBoundFramebufferObject();const r=t.getFbos().effect0;e.bindFramebuffer(r),e.setColorMask(!0,!0,!0,!0),e.setClearColor(0,0,0,0),e.clear(N.COLOR)}unbind(){}draw(e,t){const{context:r,painter:i}=e,s=i.getPostProcessingEffects(t),a=r.getBoundFramebufferObject();for(const{postProcessingEffect:o,effect:l}of s)o.draw(e,a,l);r.bindFramebuffer(this._prev),r.setStencilTestEnabled(!1),i.blitTexture(r,a.colorTexture,V.NEAREST),r.setStencilTestEnabled(!0)}},ja=class{constructor(){this._width=void 0,this._height=void 0,this._resources=null}dispose(){this._resources&&(this._resources.quadGeometry.dispose(),this._resources.quadVAO.dispose(),this._resources.highlightProgram.dispose(),this._resources.blurProgram.dispose(),this._resources=null)}preBlur(e,t){e.bindTexture(t,ge),e.useProgram(this._resources.blurProgram),this._resources.blurProgram.setUniform4fv("u_direction",[1,0,1/this._width,0]),this._resources.blurProgram.setUniformMatrix4fv("u_channelSelector",qr),e.bindVAO(this._resources.quadVAO),e.drawArrays(ve.TRIANGLE_STRIP,0,4),e.bindVAO()}finalBlur(e,t){e.bindTexture(t,ge),e.useProgram(this._resources.blurProgram),this._resources.blurProgram.setUniform4fv("u_direction",[0,1,0,1/this._height]),this._resources.blurProgram.setUniformMatrix4fv("u_channelSelector",Hr),e.bindVAO(this._resources.quadVAO),e.drawArrays(ve.TRIANGLE_STRIP,0,4),e.bindVAO()}renderHighlight(e,t,r){e.bindTexture(t,ge),e.useProgram(this._resources.highlightProgram),r.applyHighlightOptions(e,this._resources.highlightProgram),e.bindVAO(this._resources.quadVAO),e.setBlendingEnabled(!0),e.setBlendFunction(M.ONE,M.ONE_MINUS_SRC_ALPHA),e.drawArrays(ve.TRIANGLE_STRIP,0,4),e.bindVAO()}_initialize(e,t,r){this._width=t,this._height=r;const i=pr.createVertex(e,mr.STATIC_DRAW,new Int8Array([-1,-1,0,0,1,-1,1,0,-1,1,0,1,1,1,1,1]).buffer),s=new dr(e,new Map([["a_position",0],["a_texcoord",1]]),new Map([["geometry",[new xe("a_position",2,be.BYTE,0,4),new xe("a_texcoord",2,be.UNSIGNED_BYTE,2,4)]]]),new Map([["geometry",i]])),a=Le(e,qi),o=Le(e,Hi);e.useProgram(a),a.setUniform1i("u_texture",ge),a.setUniform1i("u_shade",zi),a.setUniform1f("u_sigma",Mt),e.useProgram(o),o.setUniform1i("u_texture",ge),o.setUniform1f("u_sigma",Mt),this._resources={quadGeometry:i,quadVAO:s,highlightProgram:a,blurProgram:o}}setup(e,t,r){this._resources?(this._width=t,this._height=r):this._initialize(e,t,r)}};function rr(n,e,t){const r=new A(e,t);return r.wrapMode=k.CLAMP_TO_EDGE,new X(n,r,new _t(Ji.STENCIL_INDEX8,e,t))}let Xa=class{constructor(){this._width=void 0,this._height=void 0,this._resources=null}dispose(){this._resources&&(this._resources.sharedBlur1Fbo.dispose(),this._resources.sharedBlur2Fbo.dispose(),this._resources=null)}_initialize(e,t,r){this._width=t,this._height=r;const i=rr(e,t,r),s=rr(e,t,r);this._resources={sharedBlur1Fbo:i,sharedBlur2Fbo:s}}setup(e,t,r){!this._resources||this._width===t&&this._height===r||this.dispose(),this._resources||this._initialize(e,t,r)}get sharedBlur1Tex(){return this._resources.sharedBlur1Fbo.colorTexture}get sharedBlur1Fbo(){return this._resources.sharedBlur1Fbo}get sharedBlur2Tex(){return this._resources.sharedBlur2Fbo.colorTexture}get sharedBlur2Fbo(){return this._resources.sharedBlur2Fbo}};const ue=4,Ae=4/ue;let Ya=class extends gt{constructor(){super(...arguments),this.defines=["highlight"],this._hlRenderer=new ja,this._width=void 0,this._height=void 0,this._boundFBO=null,this._hlSurfaces=new Xa,this._adjustedWidth=void 0,this._adjustedHeight=void 0,this._blitRenderer=new Sr}dispose(){var e,t;(e=this._hlSurfaces)==null||e.dispose(),(t=this._hlRenderer)==null||t.dispose(),this._boundFBO=null}bind(e){const{context:t,painter:r}=e,{width:i,height:s}=t.getViewport(),a=r.getFbos().effect0;this.setup(e,i,s),t.bindFramebuffer(a),t.setColorMask(!0,!0,!0,!0),t.setClearColor(0,0,0,0),t.clear(N.COLOR)}unbind(){}setup({context:e},t,r){this._width=t,this._height=r;const i=t%ue,s=r%ue;t+=i<ue/2?-i:ue-i,r+=s<ue/2?-s:ue-s,this._adjustedWidth=t,this._adjustedHeight=r,this._boundFBO=e.getBoundFramebufferObject();const a=Math.round(t*Ae),o=Math.round(r*Ae);this._hlRenderer.setup(e,a,o),this._hlSurfaces.setup(e,a,o)}draw(e){const{context:t,passOptions:r}=e,i=r.activeGradient,s=t.getBoundFramebufferObject();t.setViewport(0,0,this._adjustedWidth*Ae,this._adjustedHeight*Ae),t.bindFramebuffer(this._hlSurfaces.sharedBlur1Fbo),t.setStencilTestEnabled(!1),t.setClearColor(0,0,0,0),t.clear(N.COLOR),this._blitRenderer.render(t,s.colorTexture,V.NEAREST,1),t.setStencilTestEnabled(!1),t.setBlendingEnabled(!1),t.setColorMask(!1,!1,!1,!0),t.bindFramebuffer(this._hlSurfaces.sharedBlur2Fbo),t.setClearColor(0,0,0,0),t.clear(N.COLOR),this._hlRenderer.preBlur(t,this._hlSurfaces.sharedBlur1Tex),t.bindFramebuffer(this._hlSurfaces.sharedBlur1Fbo),t.setClearColor(0,0,0,0),t.clear(N.COLOR),this._hlRenderer.finalBlur(t,this._hlSurfaces.sharedBlur2Tex),t.bindFramebuffer(this._boundFBO),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setViewport(0,0,this._width,this._height),this._hlRenderer.renderHighlight(t,this._hlSurfaces.sharedBlur1Tex,i),this._boundFBO=null}},Ja=class extends gt{constructor(){super(...arguments),this.name=this.constructor.name,this.defines=["hittest"]}dispose(){this._fbo!=null&&this._fbo.dispose()}createOptions({pixelRatio:e},t){if(!t.length)return null;const r=t.shift(),i=r.x,s=r.y;this._outstanding=r;const a=ne("esri-mobile");return{type:"hittest",distance:(a?kt:Ii)*e,smallSymbolDistance:(a?kt:Ai)*e,smallSymbolSizeThreshold:ki,position:[i,s]}}bind(e){const{context:t,attributeView:r}=e;if(!r.size)return;const i=r.getBlock(At.GPGPU);if(i==null)return;const s=i.getFBO(t);t.setViewport(0,0,r.size,r.size),t.bindFramebuffer(s),t.setColorMask(!0,!0,!0,!0),t.setClearColor(0,0,0,0),t.clear(N.COLOR|N.DEPTH)}unbind(){}draw(e){if(this._outstanding==null)return;const t=this._outstanding;this._outstanding=null,this._resolve(e,t.resolvers)}async _resolve(e,t){const{context:r,attributeView:i}=e,s=i.getBlock(At.GPGPU);if(s==null)return void t.forEach(h=>h.resolve([]));const a=s.getFBO(r),o=new Uint8Array(a.width*a.height*4);try{await a.readPixelsAsync(0,0,a.width,a.height,L.RGBA,ft.UNSIGNED_BYTE,o)}catch{return void t.forEach(c=>c.resolve([]))}const l=[];for(let h=0;h<o.length;h+=4){const c=h/4;o[h]&&l.push(c)}t.forEach(h=>h.resolve(l))}};const st=5,Ka=[1,0],Qa=[0,1],Za=[1,.8,.6,.4,.2],eo=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];let to=class{constructor(){this._intensityFBO=null,this._compositeFBO=null,this._mipsFBOs=new Array(st),this._nMips=st,this._kernelSizeArray=[3,5,7,9,11],this._size=[0,0],this._programDesc={luminosityHighPass:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/luminosityHighPass",attributes:new Map([["a_position",0]])},gaussianBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/gaussianBlur",attributes:new Map([["a_position",0]])},composite:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/composite",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){if(this._quad=B(this._quad),this._intensityFBO=B(this._intensityFBO),this._compositeFBO=B(this._compositeFBO),this._mipsFBOs){for(let e=0;e<this._nMips;e++)this._mipsFBOs[e]&&(this._mipsFBOs[e].horizontal.dispose(),this._mipsFBOs[e].vertical.dispose());this._mipsFBOs=null}}draw(e,t,r){const{width:i,height:s}=t,{context:a,painter:o}=e,{materialManager:l}=o,h=a.gl,c=this._programDesc,{strength:u,radius:d,threshold:p}=r;this._quad||(this._quad=new Se(a,[-1,-1,1,-1,-1,1,1,1])),this._createOrResizeResources(e,i,s),a.setStencilTestEnabled(!1),a.setBlendingEnabled(!0),a.setBlendFunction(M.ONE,M.ONE_MINUS_SRC_ALPHA),a.setStencilWriteMask(0);const m=this._quad;m.bind(),a.bindFramebuffer(this._intensityFBO);const _=l.getProgram(c.luminosityHighPass);a.useProgram(_),a.bindTexture(t.colorTexture,0),_.setUniform1i("u_texture",0),_.setUniform3fv("u_defaultColor",[0,0,0]),_.setUniform1f("u_defaultOpacity",0),_.setUniform1f("u_luminosityThreshold",p),_.setUniform1f("u_smoothWidth",.01);const g=[Math.round(i/2),Math.round(s/2)];a.setViewport(0,0,g[0],g[1]),a.setClearColor(0,0,0,0),a.clear(h.COLOR_BUFFER_BIT),m.draw(),a.setBlendingEnabled(!1);let y=this._intensityFBO.colorTexture;for(let b=0;b<this._nMips;b++){const w=l.getProgram(c.gaussianBlur,[{name:"radius",value:this._kernelSizeArray[b]}]);a.useProgram(w),a.bindTexture(y,b+1),w.setUniform1i("u_colorTexture",b+1),w.setUniform2fv("u_texSize",g),w.setUniform2fv("u_direction",Ka),a.setViewport(0,0,g[0],g[1]);const v=this._mipsFBOs[b];a.bindFramebuffer(v.horizontal),m.draw(),y=v.horizontal.colorTexture,a.bindFramebuffer(v.vertical),a.bindTexture(y,b+1),w.setUniform2fv("u_direction",Qa),m.draw(),y=v.vertical.colorTexture,g[0]=Math.round(g[0]/2),g[1]=Math.round(g[1]/2)}a.setViewport(0,0,i,s);const f=l.getProgram(c.composite,[{name:"nummips",value:st}]);a.bindFramebuffer(this._compositeFBO),a.useProgram(f),f.setUniform1f("u_bloomStrength",u),f.setUniform1f("u_bloomRadius",d),f.setUniform1fv("u_bloomFactors",Za),f.setUniform3fv("u_bloomTintColors",eo),a.bindTexture(this._mipsFBOs[0].vertical.colorTexture,1),f.setUniform1i("u_blurTexture1",1),a.bindTexture(this._mipsFBOs[1].vertical.colorTexture,2),f.setUniform1i("u_blurTexture2",2),a.bindTexture(this._mipsFBOs[2].vertical.colorTexture,3),f.setUniform1i("u_blurTexture3",3),a.bindTexture(this._mipsFBOs[3].vertical.colorTexture,4),f.setUniform1i("u_blurTexture4",4),a.bindTexture(this._mipsFBOs[4].vertical.colorTexture,5),f.setUniform1i("u_blurTexture5",5),m.draw(),a.bindFramebuffer(t),a.setBlendingEnabled(!0);const x=l.getProgram(c.blit);a.useProgram(x),a.bindTexture(this._compositeFBO.colorTexture,6),x.setUniform1i("u_texture",6),a.setBlendFunction(M.ONE,M.ONE),m.draw(),m.unbind(),a.setBlendFunction(M.ONE,M.ONE_MINUS_SRC_ALPHA),a.setStencilTestEnabled(!0)}_createOrResizeResources(e,t,r){const{context:i}=e;if(this._compositeFBO&&this._size[0]===t&&this._size[1]===r)return;this._size[0]=t,this._size[1]=r;const s=[Math.round(t/2),Math.round(r/2)];if(this._compositeFBO)this._compositeFBO.resize(t,r);else{const a=new A(t,r);a.internalFormat=L.RGBA,a.wrapMode=k.CLAMP_TO_EDGE,this._compositeFBO=new X(i,a)}if(this._intensityFBO)this._intensityFBO.resize(s[0],s[1]);else{const a=new A(s[0],s[1]);a.internalFormat=L.RGBA,a.wrapMode=k.CLAMP_TO_EDGE,this._intensityFBO=new X(i,a)}for(let a=0;a<this._nMips;a++){if(this._mipsFBOs[a])this._mipsFBOs[a].horizontal.resize(s[0],s[1]),this._mipsFBOs[a].vertical.resize(s[0],s[1]);else{const o=new A(s[0],s[1]);o.internalFormat=L.RGBA,o.wrapMode=k.CLAMP_TO_EDGE,this._mipsFBOs[a]={horizontal:new X(i,o),vertical:new X(i,o)}}s[0]=Math.round(s[0]/2),s[1]=Math.round(s[1]/2)}}};const ro=[1,0],io=[0,1];let so=class{constructor(){this._blurFBO=null,this._size=[0,0],this._programDesc={gaussianBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/gaussianBlur",attributes:new Map([["a_position",0]])},radialBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/radial-blur",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){this._blurFBO&&(this._blurFBO.dispose(),this._blurFBO=null)}draw(e,t,r){const{context:i}=e,{type:s,radius:a}=r;if(a===0)return;this._createOrResizeResources(e),this._quad||(this._quad=new Se(i,[-1,-1,1,-1,-1,1,1,1]));const o=this._quad;o.bind(),s==="blur"?this._gaussianBlur(e,t,a):this._radialBlur(e,t),o.unbind()}_gaussianBlur(e,t,r){const{context:i,state:s,painter:a,pixelRatio:o}=e,{size:l}=s,{materialManager:h}=a,c=this._programDesc,u=this._quad,d=[Math.round(o*l[0]),Math.round(o*l[1])],p=this._blurFBO,m=h.getProgram(c.gaussianBlur,[{name:"radius",value:Math.ceil(r)}]);i.useProgram(m),i.setBlendingEnabled(!1),i.bindFramebuffer(p),i.bindTexture(t.colorTexture,4),m.setUniform1i("u_colorTexture",4),m.setUniform2fv("u_texSize",d),m.setUniform2fv("u_direction",ro),m.setUniform1f("u_sigma",r),u.draw(),i.bindFramebuffer(t),i.setStencilWriteMask(0),i.setStencilTestEnabled(!1),i.setDepthWriteEnabled(!1),i.setDepthTestEnabled(!1),i.bindTexture(p==null?void 0:p.colorTexture,5),m.setUniform1i("u_colorTexture",5),m.setUniform2fv("u_direction",io),u.draw(),i.setBlendingEnabled(!0),i.setBlendFunction(M.ONE,M.ONE_MINUS_SRC_ALPHA),i.setStencilTestEnabled(!0)}_radialBlur(e,t){const{context:r,painter:i}=e,{materialManager:s}=i,a=this._programDesc,o=this._quad,l=this._blurFBO;r.bindFramebuffer(l);const h=s.getProgram(a.radialBlur);r.useProgram(h),r.setBlendingEnabled(!1),r.bindTexture(t.colorTexture,4),h.setUniform1i("u_colorTexture",4),o.draw(),r.bindFramebuffer(t),r.setStencilWriteMask(0),r.setStencilTestEnabled(!1),r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setBlendingEnabled(!0);const c=s.getProgram(a.blit);r.useProgram(c),r.bindTexture(l==null?void 0:l.colorTexture,5),c.setUniform1i("u_texture",5),r.setBlendFunction(M.ONE,M.ONE_MINUS_SRC_ALPHA),o.draw()}_createOrResizeResources(e){const{context:t,state:r,pixelRatio:i}=e,{size:s}=r,a=Math.round(i*s[0]),o=Math.round(i*s[1]);if(!this._blurFBO||this._size[0]!==a||this._size[1]!==o)if(this._size[0]=a,this._size[1]=o,this._blurFBO)this._blurFBO.resize(a,o);else{const l=new A(a,o);l.internalFormat=L.RGBA,l.wrapMode=k.CLAMP_TO_EDGE,this._blurFBO=new X(t,l)}}},ao=class{constructor(){this._layerFBOTexture=null,this._size=[0,0],this._programDesc={vsPath:"post-processing/pp",fsPath:"post-processing/filterEffect",attributes:new Map([["a_position",0]])}}dispose(){this._layerFBOTexture=B(this._layerFBOTexture)}draw(e,t,r){const{width:i,height:s}=t;this._createOrResizeResources(e,i,s);const{context:a,painter:o}=e,{materialManager:l}=o,h=this._programDesc,c=this._quad,u=r.colorMatrix;c.bind();const d=this._layerFBOTexture;a.bindFramebuffer(t),t.copyToTexture(0,0,i,s,0,0,d),a.setBlendingEnabled(!1),a.setStencilTestEnabled(!1);const p=l.getProgram(h);a.useProgram(p),a.bindTexture(d,2),p.setUniformMatrix4fv("u_coefficients",u),p.setUniform1i("u_colorTexture",2),c.draw(),a.setBlendingEnabled(!0),a.setBlendFunction(M.ONE,M.ONE_MINUS_SRC_ALPHA),a.setStencilTestEnabled(!0),c.unbind()}_createOrResizeResources(e,t,r){const{context:i}=e;if(!this._layerFBOTexture||this._size[0]!==t||this._size[1]!==r){if(this._size[0]=t,this._size[1]=r,this._layerFBOTexture)this._layerFBOTexture.resize(t,r);else{const s=new A;s.internalFormat=L.RGBA,s.wrapMode=k.CLAMP_TO_EDGE,s.width=t,s.height=r,this._layerFBOTexture=new K(i,s)}this._quad||(this._quad=new Se(i,[-1,-1,1,-1,-1,1,1,1]))}}};const oo=[1,0],no=[0,1];class lo{constructor(){this._layerFBOTexture=null,this._horizontalBlurFBO=null,this._verticalBlurFBO=null,this._size=[0,0],this._quad=null,this._programDesc={blur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/gaussianBlur",attributes:new Map([["a_position",0]])},composite:{vsPath:"post-processing/pp",fsPath:"post-processing/drop-shadow/composite",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){this._layerFBOTexture=B(this._layerFBOTexture),this._horizontalBlurFBO=B(this._horizontalBlurFBO),this._verticalBlurFBO=B(this._verticalBlurFBO)}draw(e,t,r){const{context:i,state:s,painter:a}=e,{materialManager:o}=a,l=this._programDesc,h=t.width,c=t.height,u=[Math.round(h),Math.round(c)],{blurRadius:d,offsetX:p,offsetY:m,color:_}=r,g=[de(p),de(m)];this._createOrResizeResources(e,h,c,u);const y=this._horizontalBlurFBO,f=this._verticalBlurFBO;i.setStencilWriteMask(0),i.setStencilTestEnabled(!1),i.setDepthWriteEnabled(!1),i.setDepthTestEnabled(!1);const x=this._layerFBOTexture;t.copyToTexture(0,0,h,c,0,0,x),this._quad||(this._quad=new Se(i,[-1,-1,1,-1,-1,1,1,1])),i.setViewport(0,0,u[0],u[1]);const b=this._quad;b.bind(),i.setBlendingEnabled(!1);const w=o.getProgram(l.blur,[{name:"radius",value:Math.ceil(d)}]);i.useProgram(w),i.bindFramebuffer(y),i.bindTexture(t.colorTexture,4),w.setUniform1i("u_colorTexture",4),w.setUniform2fv("u_texSize",u),w.setUniform2fv("u_direction",oo),w.setUniform1f("u_sigma",d),b.draw(),i.bindFramebuffer(f),i.bindTexture(y==null?void 0:y.colorTexture,5),w.setUniform1i("u_colorTexture",5),w.setUniform2fv("u_direction",no),b.draw(),i.bindFramebuffer(t),i.setViewport(0,0,h,c);const v=o.getProgram(l.composite);i.useProgram(v),i.bindTexture(f==null?void 0:f.colorTexture,2),v.setUniform1i("u_blurTexture",2),i.bindTexture(x,3),v.setUniform1i("u_layerFBOTexture",3),v.setUniform4fv("u_shadowColor",[_[3]*(_[0]/255),_[3]*(_[1]/255),_[3]*(_[2]/255),_[3]]),v.setUniformMatrix3fv("u_displayViewMat3",s.displayMat3),v.setUniform2fv("u_shadowOffset",g),b.draw(),i.setBlendingEnabled(!0),i.setStencilTestEnabled(!0),i.setBlendFunction(M.ONE,M.ONE_MINUS_SRC_ALPHA),b.unbind()}_createOrResizeResources(e,t,r,i){const{context:s}=e;if(!this._horizontalBlurFBO||this._size[0]!==t||this._size[1]!==r){if(this._size[0]=t,this._size[1]=r,this._horizontalBlurFBO)this._horizontalBlurFBO.resize(i[0],i[1]);else{const a=new A(i[0],i[1]);a.internalFormat=L.RGBA,a.wrapMode=k.CLAMP_TO_EDGE,this._horizontalBlurFBO=new X(s,a)}if(this._verticalBlurFBO)this._verticalBlurFBO.resize(i[0],i[1]);else{const a=new A(i[0],i[1]);a.internalFormat=L.RGBA,a.wrapMode=k.CLAMP_TO_EDGE,this._verticalBlurFBO=new X(s,a)}if(this._layerFBOTexture)this._layerFBOTexture.resize(t,r);else{const a=new A;a.internalFormat=L.RGBA,a.wrapMode=k.CLAMP_TO_EDGE,a.width=t,a.height=r,this._layerFBOTexture=new K(s,a)}}}}class ho{constructor(){this._size=[0,0],this._layerFBOTexture=null}dispose(){this._layerFBOTexture=B(this._layerFBOTexture)}draw(e,t,r){const{width:i,height:s}=t;this._createOrResizeResources(e,i,s);const{context:a,painter:o}=e,{amount:l}=r,h=a.gl,c=this._layerFBOTexture;a.bindFramebuffer(t),t.copyToTexture(0,0,i,s,0,0,c),a.setBlendingEnabled(!0),a.setStencilTestEnabled(!1),a.setDepthTestEnabled(!1),a.setClearColor(0,0,0,0),a.clear(h.COLOR_BUFFER_BIT),o.blitTexture(a,c,V.NEAREST,l)}_createOrResizeResources(e,t,r){const{context:i}=e;if(!this._layerFBOTexture||this._size[0]!==t||this._size[1]!==r)if(this._size[0]=t,this._size[1]=r,this._layerFBOTexture)this._layerFBOTexture.resize(t,r);else{const s=new A;s.internalFormat=L.RGBA,s.wrapMode=k.CLAMP_TO_EDGE,s.samplingMode=V.NEAREST,s.width=t,s.height=r,this._layerFBOTexture=new K(i,s)}}}function co(n){switch(n){case"bloom":case"blur":case"opacity":case"drop-shadow":return n;default:return"colorize"}}const uo={colorize:()=>new ao,blur:()=>new so,bloom:()=>new to,opacity:()=>new ho,"drop-shadow":()=>new lo};let po=class{constructor(){this._effectMap=new Map}dispose(){this._effectMap.forEach(e=>e.dispose()),this._effectMap.clear()}getPostProcessingEffects(e){if(!e||e.length===0)return[];const t=[];for(const r of e){const i=co(r.type);let s=this._effectMap.get(i);s||(s=uo[i](),this._effectMap.set(i,s)),t.push({postProcessingEffect:s,effect:r})}return t}};class mo{constructor(e,t){this.brushes=e,this.name=t.name,this.drawPhase=t.drawPhase||j.MAP,this._targetFn=t.target,this.effects=t.effects||[],this.enableDefaultDraw=t.enableDefaultDraw??(()=>!0),this.forceDrawByDisplayOrder=!!t.forceDrawByDisplayOrder}render(e){var a;const{context:t,profiler:r}=e,i=this._targetFn(),s=this.drawPhase&e.drawPhase;if(r.recordPassStart(this.name),s){this.enableDefaultDraw()&&this._doRender(e,i),r.recordPassEnd();for(const o of this.effects){if(!o.enable())continue;const l=o.apply,h=(a=o.args)==null?void 0:a.call(o),c=t.getViewport(),u=t.getBoundFramebufferObject(),d=e.passOptions;this._bindEffect(e,l,h),this._doRender(e,i,l.defines),this._drawAndUnbindEffect(e,l,c,u,d,h)}}}_doRender(e,t,r){if(t==null)return;const{profiler:i,context:s}=e;for(const a of this.brushes){if(i.recordBrushStart(a.name),a.brushEffect!=null){const o=s.getViewport(),l=s.getBoundFramebufferObject(),h=e.passOptions;this._bindEffect(e,a.brushEffect),this._drawWithBrush(a,e,t,r),this._drawAndUnbindEffect(e,a.brushEffect,o,l,h)}else this._drawWithBrush(a,e,t,r);i.recordBrushEnd()}}_drawWithBrush(e,t,r,i){Br(r)?(e.prepareState(t,i),e.drawMany(t,r,i)):r.visible&&(e.prepareState(t,i),e.draw(t,r,i))}_bindEffect(e,t,r){const{profiler:i}=e;i.recordPassStart(this.name+"."+t.name),t.bind(e,r);const s=t.createOptions(e,r);e.passOptions=s}_drawAndUnbindEffect(e,t,r,i,s,a){const{profiler:o,context:l}=e;e.passOptions=s,o.recordBrushStart(t.name),t.draw(e,a),t.unbind(e,a),l.bindFramebuffer(i);const{x:h,y:c,width:u,height:d}=r;l.setViewport(h,c,u,d),o.recordBrushEnd(),o.recordPassEnd()}}class ir{constructor(){this._programCache=new Map}destroy(){for(const e of this._programCache.values())e.destroy();this._programCache.clear()}getProgram(e,t,r,i,s){const a=e.getShaderKey(t,r,i,s);let o=this._programCache.get(a);return o||(o=e.getProgram(t,r,i,s),this._programCache.set(a,o)),o}}class fo{constructor(e,t){this.context=e,this._currentPipelineStateNeedsUpdate=!1,this._blitRenderer=new Sr,this._worldExtentRenderer=new qa,this._brushCache=new Map,this._lastWidth=null,this._lastHeight=null,this._vtlMaterialManager=new ma,this._blendEffect=new Wa,this._stencilBuf=null,this._prevBeforeLayerFBOStack=[],this._fboPool=[],this.effects={highlight:new Ya,hittest:new Ja,insideEffect:new tr("inside"),outsideEffect:new tr("outside")},this._programCache=new ir,this._shaderState={shader:null,uniforms:null,defines:null,optionalAttributes:null,useComputeBuffer:!1},this.materialManager=new fa(e),this.textureManager=new Ba(t),this.textureUploadManager=new Va(t),this._effectsManager=new po,this._quadMesh=ii.fromVertexStream(e,[0,0,1,0,0,1,1,1])}dispose(){if(this._programCache.destroy(),this.materialManager.dispose(),this.textureManager.dispose(),this.textureUploadManager.destroy(),this._blitRenderer=B(this._blitRenderer),this._worldExtentRenderer=B(this._worldExtentRenderer),this._quadMesh=Ne(this._quadMesh),this._brushCache&&(this._brushCache.forEach(e=>e.dispose()),this._brushCache.clear(),this._brushCache=null),this._fbos){let e;for(e in this._fbos)this._fbos[e]&&this._fbos[e].dispose()}for(const e of this._fboPool)e.dispose();if(this._fboPool.length=0,this.effects){let e;for(e in this.effects)this.effects[e]&&this.effects[e].dispose()}this._effectsManager.dispose(),this._blendEffect.dispose(this.context),this._vtlMaterialManager=B(this._vtlMaterialManager)}clearShaderCache(){this._programCache.destroy(),this._programCache=new ir}get blitRenderer(){return this._blitRenderer}get vectorTilesMaterialManager(){return this._vtlMaterialManager}get quadMesh(){return this._quadMesh}getFbos(){if(!this._fbos)throw new Error("InternalError: Painter FBOs not initialized");return this._fbos}acquireFbo(e,t){let r;if(this._fboPool.length>0)r=this._fboPool.pop();else{const i=new A(e,t);i.samplingMode=V.NEAREST,i.wrapMode=k.CLAMP_TO_EDGE,r=new X(this.context,i,this._stencilBuf)}return r.width===e&&r.height===t||r.resize(e,t),r}releaseFbo(e){this._fboPool.push(e)}getSharedStencilBuffer(){return this._stencilBuf}beforeRenderPhases(e,t,r){const{context:i}=e;this._worldExtentRenderer.render(e,t,r);const{width:s,height:a}=i.getViewport();if(this.updateFBOs(s,a),this._prevFBO=i.getBoundFramebufferObject(),i.bindFramebuffer(this.getFbos().output),i.setColorMask(!0,!0,!0,!0),t!=null){const{r:o,g:l,b:h,a:c}=t;i.setClearColor(c*o/255,c*l/255,c*h/255,c)}else i.setClearColor(0,0,0,0);i.setDepthWriteEnabled(!0),i.setClearDepth(1),i.clear(N.COLOR|N.DEPTH),i.setDepthWriteEnabled(!1)}afterRenderPhases(e){const{context:t}=e;t.bindFramebuffer(this._prevFBO),t.setStencilFunction(ct.EQUAL,ht,255),t.setStencilTestEnabled(!0),t.setDepthTestEnabled(!1),this.blitTexture(t,this.getFbos().output.colorTexture,V.NEAREST)}beforeRenderLayer(e,t,r){const{context:i,blendMode:s,effects:a,drawPhase:o,requireFBO:l}=e;if(i.setClearColor(0,0,0,0),l||sr(o,s,a,r)){const h=i.getBoundFramebufferObject();this._prevBeforeLayerFBOStack.push(h);const{width:c,height:u}=i.getViewport(),d=this.acquireFbo(c,u);i.bindFramebuffer(d),i.setColorMask(!0,!0,!0,!0),i.setClearColor(0,0,0,0),i.setDepthWriteEnabled(!0),i.setClearDepth(1),i.clear(N.COLOR|N.DEPTH),i.setDepthWriteEnabled(!1)}i.setDepthWriteEnabled(!1),i.setDepthTestEnabled(!1),i.setStencilTestEnabled(!0),i.setClearStencil(t),i.setStencilWriteMask(255),i.clear(N.STENCIL)}afterRenderLayer(e,t){const{context:r,blendMode:i,effects:s,requireFBO:a,drawPhase:o}=e;if(a||sr(o,i,s,t)){const l=r.getBoundFramebufferObject();s!=null&&s.length>0&&o===j.MAP&&(r.setColorMask(!0,!0,!0,!0),this._applyEffects(e,s,l)),r.bindFramebuffer(this._prevBeforeLayerFBOStack.pop()),r.setStencilTestEnabled(!1),r.setStencilWriteMask(0),r.setBlendingEnabled(!0),r.setBlendFunctionSeparate(M.ONE,M.ONE_MINUS_SRC_ALPHA,M.ONE,M.ONE_MINUS_SRC_ALPHA),r.setColorMask(!0,!0,!0,!0);const h=i==null||o===j.HIGHLIGHT||o===j.LABEL?"normal":i;this._blendEffect.draw(e,l.colorTexture,V.NEAREST,h,t),this.releaseFbo(l)}}renderObject(e,t,r,i){const s=Ft[r];if(!s)return;let a=this._brushCache.get(s);a===void 0&&(a=new s,this._brushCache.set(s,a)),a.prepareState(e),a.draw(e,t,i)}renderObjects(e,t,r,i){const s=Ft[r];if(!s)return;let a=this._brushCache.get(s);a===void 0&&(a=new s,this._brushCache.set(s,a)),a.drawMany(e,t,i)}registerRenderPass(e){const t=e.brushes.map(r=>(this._brushCache.has(r)||this._brushCache.set(r,new r),this._brushCache.get(r)));return new mo(t,e)}blitTexture(e,t,r,i=1){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(M.ONE,M.ONE_MINUS_SRC_ALPHA,M.ONE,M.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),this._blitRenderer.render(e,t,r,i),this._currentPipelineStateNeedsUpdate=!0}getPostProcessingEffects(e){return this._effectsManager.getPostProcessingEffects(e)}updateFBOs(e,t){if(e!==this._lastWidth||t!==this._lastHeight){if(this._lastWidth=e,this._lastHeight=t,this._fbos){let s;for(s in this._fbos)this._fbos[s].resize(e,t);return}const r=new A(e,t);r.samplingMode=V.NEAREST,r.wrapMode=k.CLAMP_TO_EDGE;const i=new _t(fr.DEPTH24_STENCIL8,e,t);this._stencilBuf=new ms(this.context,i),this._fbos={output:new X(this.context,r,this._stencilBuf),effect0:new X(this.context,r,this._stencilBuf)}}}_applyEffects(e,t,r){const{context:i}=e,s=this._effectsManager.getPostProcessingEffects(t);for(const{postProcessingEffect:a,effect:o}of s)i.bindFramebuffer(r),a.draw(e,r,o);this._currentPipelineStateNeedsUpdate=!0}setShader(e){this._shaderState.shader=e.shader,this._shaderState.uniforms=e.uniforms,this._shaderState.defines=e.defines,this._shaderState.optionalAttributes=e.optionalAttributes,this._shaderState.useComputeBuffer=e.useComputeBuffer??!1}setPipelineState(e){e!==this._currentPipelineState&&(this._currentPipelineState=e,this._currentPipelineStateNeedsUpdate=!0)}submitDraw(e,t){const{shader:r,uniforms:i,defines:s,optionalAttributes:a}=this._shaderState,o=e.context,l=t.getAttributePrecisionPackFactors(),h=this._programCache.getProgram(r,l,i,s??{},a??{});return h.setUniforms(i),h.bind(o),this.updatePipelineState(o),this.setStencilRef(o,t),t.draw(e,r.locationInfo),h.cleanupTemporaryTextures(),{vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}}submitDrawMesh(e,t,r,i){this.submitDrawMeshUntyped(e,t,r,i)}submitDrawMeshUntyped(e,t,r,i){this.setShader(t);const{shader:s,uniforms:a,defines:o,optionalAttributes:l}=this._shaderState,h=this._programCache.getProgram(s,{},a,o??{},l??{});if(h.setUniforms(a),h.bind(e),this.updatePipelineState(e),i)for(const c of i)r.bind(e,t.shader.locationInfo,c),r.draw(e);else for(let c=0;c<r.parts.length;c++)r.bind(e,t.shader.locationInfo,c),r.draw(e);r.unbind(e),h.cleanupTemporaryTextures()}updatePipelineState(e){this._currentPipelineStateNeedsUpdate&&(this._currentPipelineStateNeedsUpdate=!1,this._updatePipelineState(e))}_updatePipelineState(e){if(this._currentPipelineState==null)throw new Error("Pipeline state not defined. Call setPipelineState before calling submitDraw ");const{color:t,depth:r,stencil:i}=this._currentPipelineState;if(t){const{blendMode:s,write:a}=t;switch(e.setColorMask(...a),e.setBlendingEnabled(!0),e.setBlendEquation($t.ADD),s){case"composite":e.setBlendFunctionSeparate(M.ONE,M.ONE_MINUS_SRC_ALPHA,M.ONE,M.ONE_MINUS_SRC_ALPHA);break;case"additive":e.setBlendFunctionSeparate(M.ONE,M.ONE,M.ONE,M.ONE);break;case"custom":{const{blendParameters:o}=t,{dstAlpha:l,dstRGB:h,srcAlpha:c,srcRGB:u}=o;e.setBlendFunctionSeparate(u,h,c,l);break}case"delete":e.setBlendEquation($t.REVERSE_SUBTRACT),e.setBlendFunctionSeparate(M.ONE,M.ONE_MINUS_SRC_ALPHA,M.ONE,M.ONE_MINUS_SRC_ALPHA)}}else e.setColorMask(!1,!1,!1,!1);if(r){const{test:s,write:a}=r;a?(e.setDepthWriteEnabled(!0),e.setDepthRange(a.zNear,a.zFar)):e.setDepthWriteEnabled(!1),s?(e.setDepthTestEnabled(!0),e.setDepthFunction(s)):e.setDepthTestEnabled(!1)}else e.setDepthTestEnabled(!1),e.setDepthWriteEnabled(!1);if(i){const{test:s,write:a}=i;if(s){const{compare:o,mask:l,op:h,ref:c}=s;e.setStencilTestEnabled(!0),typeof c!="function"&&e.setStencilFunctionSeparate(Ze.FRONT_AND_BACK,o,c,l),e.setStencilOpSeparate(Ze.FRONT_AND_BACK,h.fail,h.zFail,h.zPass)}else e.setStencilTestEnabled(!1);if(a){const{mask:o}=a;e.setStencilWriteMask(o)}else e.setStencilWriteMask(0)}else e.setStencilTestEnabled(!1),e.setStencilWriteMask(0)}setStencilRef(e,t){if(this._currentPipelineState==null)throw new Error("Pipeline state not defined. Call setPipelineState before calling submitDraw ");const{stencil:r}=this._currentPipelineState;if(r){const{test:i}=r;if(i){const{compare:s,mask:a,ref:o}=i;let l=null;if(typeof o=="function"?l=o(t):typeof o=="number"&&(l=o),l==null&&(l=t.getStencilReference()),l==null)throw new Error("InternalError: Stencil reference expected for target but not defined");e.setStencilFunctionSeparate(Ze.FRONT_AND_BACK,s,l,a)}}}}function sr(n,e,t,r){return n!==j.LABEL_ALPHA&&n!==j.LABEL&&n!==j.HIGHLIGHT&&(r!==1||e!=null&&e!=="normal"||t!=null&&t.length>0)}let _o=class{constructor(){this._candidateTiles=[]}schedule(e){this._candidateTiles.includes(e)||this._candidateTiles.push(e)}reshuffle(e){const t=[];for(const r of this._candidateTiles)e>0?(r.reshuffle(),e--):t.push(r);this._candidateTiles=t}};const go=2e3;class Rr extends Bi{constructor(e,t,r){super(),this.meshWriterRegistry=new fs,this._trash=new Set,this._renderRemainingTime=0,this._lastFrameRenderTime=0,this._renderRequested=Gr(!1),this.stage=this,this._stationary=!0,this._reshuffleManager=new _o,this._managedCanvas=r,this.context=new Zi(this._managedCanvas.gl,t.contextOptions??{}),this.painter=new fo(this.context,this),this._cimAnalyzer=new Qs(this.painter.textureManager.resourceManager),ne("esri-2d-profiler")&&e!=null&&(this._debugOutput=document.createElement("div"),this._debugOutput.setAttribute("style","margin: 24px 64px; position: absolute; color: red;"),e.appendChild(this._debugOutput));const i=()=>this.highlightGradient;this._renderParameters={drawPhase:0,state:this.state,pixelRatio:window.devicePixelRatio,stationary:!1,globalOpacity:1,blendMode:null,deltaTime:-1,time:0,inFadeTransition:!1,effects:null,context:this.context,painter:this.painter,timeline:t.timeline||new Wr,renderingOptions:t.renderingOptions,requestRender:()=>this.requestRender(),allowDelayedRender:!1,requireFBO:!1,profiler:new Wi(this.context,this._debugOutput),dataUploadCounter:0,get highlightGradient(){return i()},reshuffleManager:this._reshuffleManager,backgroundColor:t.backgroundColor};let s=a=>this.renderFrame(a);t.renderFrame!=null&&(s=t.renderFrame),this._taskHandle=$r({render:a=>s(a)}),this._taskHandle.pause(),this._lostWebGLContextHandle=this._managedCanvas.events.on("webgl-context-lost",a=>this.emit("webgl-error",{error:new Me("webgl-context-lost",a.statusMessage)})),this._bufferPool=new Li,si()}destroy(){var e,t;ai(this.context),this.removeAllChildren(),this._emptyTrash(),this._taskHandle=vt(this._taskHandle),this._lostWebGLContextHandle=vt(this._lostWebGLContextHandle),this._managedCanvas.destroy(),(t=(e=this._debugOutput)==null?void 0:e.parentNode)==null||t.removeChild(this._debugOutput),this._bufferPool.destroy(),this.painter.dispose(),this.context.dispose(),this._managedCanvas=null}get textureManager(){return this.painter.textureManager}get backgroundColor(){return this._renderParameters.backgroundColor}set backgroundColor(e){this._renderParameters.backgroundColor=e,this.requestRender()}get canvas(){return this._managedCanvas.canvas}get bufferPool(){return this._bufferPool}get cimAnalyzer(){return this._cimAnalyzer}get renderingOptions(){return this._renderingOptions}set renderingOptions(e){this._renderingOptions=e,this.requestRender()}get renderRequested(){return this._renderRequested.value}get state(){return this._state}set state(e){this._state=e,this.requestRender()}get stationary(){return this._stationary}set stationary(e){this._stationary!==e&&(this._stationary=e,this.requestRender())}trashDisplayObject(e){this._trash.add(e),this.requestRender()}untrashDisplayObject(e){return this._trash.delete(e)}requestRender(){this._renderRemainingTime=go,this.renderRequested||(this._renderRequested.value=!0,this._taskHandle.resume())}renderFrame(e){const t=this._lastFrameRenderTime?e.time-this._lastFrameRenderTime:0;this._renderRemainingTime-=t,this._renderRemainingTime<=0&&this._taskHandle.pause(),this._lastFrameRenderTime=e.time,this._renderRequested.value=!1,this._renderParameters.state=this._state,this._renderParameters.stationary=this.stationary,this._renderParameters.pixelRatio=window.devicePixelRatio,this._renderParameters.globalOpacity=1,this._renderParameters.time=e.time,this._renderParameters.deltaTime=e.deltaTime,this._renderParameters.effects=null,this.processRender(this._renderParameters),this._emptyTrash()}_createTransforms(){return{displayViewScreenMat3:Ue()}}renderChildren(e){for(const t of this.children)t.beforeRender(e);this._reshuffleManager.reshuffle(Fi),this._managedCanvas.render(e,()=>this._renderChildren(this.children,e));for(const t of this.children)t.afterRender(e)}_renderChildren(e,t){const r=this.context;this.painter.textureUploadManager.upload(),r.resetInfo(),t.profiler.recordStart("drawLayers"),t.dataUploadCounter=0,this.painter.beforeRenderPhases(t,t.backgroundColor,this.state.padding),t.drawPhase=j.MAP;for(const i of e)i.processRender(t);if(this.children.some(i=>i.hasHighlight)){t.drawPhase=j.HIGHLIGHT;for(const i of e)i.processRender(t)}if(this.children.some(i=>i.hasLabels)){t.drawPhase=j.LABEL;for(const i of e)i.processRender(t)}if(ne("esri-tiles-debug")){t.drawPhase=j.DEBUG;for(const i of e)i.processRender(t)}this.painter.afterRenderPhases(t),t.profiler.recordEnd("drawLayers"),r.logInfo()}doRender(e){const t=this.context,{state:r,pixelRatio:i}=e;this._managedCanvas.resize(e),t.setViewport(0,0,i*r.size[0],i*r.size[1]),t.setDepthWriteEnabled(!0),t.setStencilWriteMask(255),this.renderChildren(e)}async takeScreenshot(e,t,r,i){const s=Math.round(this.state.size[0]*e.resolutionScale),a=Math.round(this.state.size[1]*e.resolutionScale),o=e.resolutionScale,l=this.context,h=this._state.clone();if(i!=null){const f=h.viewpoint;h.viewpoint.rotation=i,h.viewpoint=f}const c={...this._renderParameters,drawPhase:null,globalOpacity:1,stationary:!0,state:h,pixelRatio:o,time:performance.now(),deltaTime:0,blendMode:null,effects:null,inFadeTransition:!1,backgroundColor:r},u=new A(s,a);u.wrapMode=k.CLAMP_TO_EDGE,u.internalFormat=_r.RGBA8,u.isImmutable=!0;const d=new X(l,u,new _t(fr.DEPTH24_STENCIL8,s,a)),p=l.getBoundFramebufferObject(),m=l.getViewport();l.bindFramebuffer(d),l.setViewport(0,0,s,a),this._renderChildren(t??this.children,c);const _=this._readbackScreenshot(d,{...e.cropArea,y:a-(e.cropArea.y+e.cropArea.height)});l.bindFramebuffer(p),l.setViewport(m.x,m.y,m.width,m.height),this.requestRender();const g=await _;let y;return e.outputScale===1?y=g:(y=new ImageData(Math.round(g.width*e.outputScale),Math.round(g.height*e.outputScale)),(await Fe(async()=>{const{resampleHermite:f}=await import("./MapView-XXhq0wAO.js").then(x=>x.a4);return{resampleHermite:f}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76]))).resampleHermite(g,y,!0)),d.dispose(),y}async _readbackScreenshot(e,t){const r=(await Fe(async()=>{const{createEmptyImageData:i}=await import("./MapView-XXhq0wAO.js").then(s=>s.a4);return{createEmptyImageData:i}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76]))).createEmptyImageData(t.width,t.height,document.createElement("canvas"));return await e.readPixelsAsync(t.x,t.y,t.width,t.height,L.RGBA,ft.UNSIGNED_BYTE,new Uint8Array(r.data.buffer)),r}_emptyTrash(){for(;this._trash.size>0;){const e=Array.from(this._trash);this._trash.clear();for(const t of e)t.processDetach()}}}class yo extends qe{constructor(){super(...arguments),this.type=He.VideoScreen,this._mesh=null,this.shaders={geometry:new ji}}render(e,t){var _;const{context:r,painter:i}=e,{texture:s,textureCoords:a}=t,o=this._getMesh(e),l=t.ndcRect[2],h=t.ndcRect[3],c=t.ndcRect[0],u=t.ndcRect[1],d=new Float32Array(180);for(let g=0;g<6;g++){const y=h*g/5;for(let f=0;f<6;f++){const x=l*f/5,{u:b,v:w}=a[6*g+f];d[5*(6*g+f)]=c+x,d[5*(6*g+f)+1]=u-y,d[5*(6*g+f)+2]=b,d[5*(6*g+f)+3]=w,d[5*(6*g+f)+4]=1}}(_=o.vertexBuffers.get("geometry"))==null||_.buffer.setData(d);const p={texture:{texture:s,unit:0},opacity:t.opacity},m={shader:this.shaders.geometry,uniforms:{config:p},defines:{},optionalAttributes:null,useComputeBuffer:!1};i.setPipelineState(Ge),i.submitDrawMeshUntyped(r,m,o)}shutdown(){Ne(this._mesh)}_getMesh(e){const{context:t}=e,r=new Uint32Array(150);for(let i=0;i<5;i++)for(let s=0;s<5;s++){const a=6*(5*i+s),o=6*(i+1)+s+1,l=o-1,h=o-6,c=o-7;r[a]=o,r[a+1]=l,r[a+2]=h,r[a+3]=l,r[a+4]=c,r[a+5]=h}return this._mesh||(this._mesh=new oi(t,{vertex:{geometry:{data:new Float32Array(180),attributes:[new xe("position",2,be.FLOAT,0,20),new xe("texcoord",2,be.FLOAT,8,20),new xe("w",1,be.FLOAT,16,20)]}},index:{index:{data:r}},groups:[{primitive:ve.TRIANGLES,index:"index"}],parts:[{group:0,start:0,count:r.length}]})),this._mesh}}let vo=class extends mt{constructor(e,t){super(),this._controlPointsOwner=t,this.readbackScreenCoords=Di(),this.videoTextureCoords=new Array(36),this.overlayTextureCoords=new Array(36),this._prevFBO=null,this._acquiredFBO=null,this._isBound=!1,this._hasCoordinates=!1,this._geIsLoaded=!1,this._ndcRect=[0,0,2,2],this._technique=new yo,this.visible=!1,this.stage=e;for(let r=0;r<6;r++){const i=r/5;for(let s=0;s<6;s++){const a=s/5;this.videoTextureCoords[6*r+s]={u:a,v:i}}}}getMesh(e){throw new Error("Method not implemented.")}destroy(){B(this._readbackTexture)}bind(e){const{context:t,pixelRatio:r,state:i}=e;if(this._update(e),!this.ready||this.readbackScreenCoords[2]===0||this.readbackScreenCoords[3]===0)return this.requestRender(),!1;const{size:s}=i,a=Math.round(r*s[0]),o=Math.round(r*s[1]),l=new A(a,o);return l.samplingMode=V.LINEAR,l.wrapMode=k.CLAMP_TO_EDGE,this._acquiredFBO||(this._acquiredFBO=new X(t,l)),this._acquiredFBO.resize(a,o),t.bindFramebuffer(this._acquiredFBO),this._isBound=!0,!0}unbind(e){if(!this._isBound)return;const{context:t,pixelRatio:r,state:i}=e,{size:s}=i,a=this._acquiredFBO;if(!a.getColorTexture(Ki))throw new Error("Failed to get color texture from FBO.");const o=this._getReadbackTexture(e),l=this.readbackScreenCoords,h=Math.round(r*l[0]),c=Math.round(r*(s[1]-l[1]))-o.descriptor.height,u=h+o.descriptor.width,d=c+o.descriptor.height,p=Math.max(h,0),m=Math.max(c,0),_=Math.min(u,a.width)-p,g=Math.min(d,a.height)-m;_>0&&g>0&&a.copyToTexture(p,m,_,g,p-h,m-c,o),t.bindFramebuffer(this._prevFBO)}_update(e){const{state:t}=e,r=this._controlPointsOwner,i=r.groundControlPoints(),s=r.getSize(),a=t.size,o=i==null?void 0:i.length;if(!o)return;if(_s().then(()=>{this._geIsLoaded=!0}),!this._geIsLoaded)return void this.requestRender();const l=s[0],h=s[1],c=a[0],u=h/a[1],d=l/c;if(u>d){const v=d/u*2,S=(2-v)/2;this._ndcRect[0]=-1+S,this._ndcRect[1]=1,this._ndcRect[2]=v,this._ndcRect[3]=2}else{const v=u/d*2,S=(2-v)/2;this._ndcRect[0]=-1,this._ndcRect[1]=1-S,this._ndcRect[2]=2,this._ndcRect[3]=v}const p=new Array(o),m=t.spatialReference;for(let v=0;v<o;v++){const{lat:S,lon:T}=i[v],I=new Lr(T,S);p[v]=gs(I,m)}const _=[];let g=1/0,y=1/0,f=-1/0,x=-1/0;for(const v of p){const S=vr();t.toScreen(S,v.x,v.y),_.push({x:S[0],y:S[1]}),g=Math.min(g,S[0]),y=Math.min(y,S[1]),f=Math.max(f,S[0]),x=Math.max(x,S[1])}const b=[g,x],w=[f,y];this.readbackScreenCoords[0]=Math.max(Math.floor(b[0]),0),this.readbackScreenCoords[1]=Math.max(Math.floor(w[1]),0),this.readbackScreenCoords[2]=Math.ceil(w[0]),this.readbackScreenCoords[3]=Math.ceil(b[1]);for(let v=0;v<_.length;v++){const S=_[v],T=(S.x-g)/(f-g),I=(x-S.y)/(x-y);this.overlayTextureCoords[v]={u:T,v:I}}this._hasCoordinates=!0}_createTransforms(){return null}doRender(e){this._readbackTexture&&this._hasCoordinates?this._technique.render(e,{texture:this._readbackTexture,textureCoords:this.overlayTextureCoords,opacity:1,ndcRect:this._ndcRect}):this.requestRender()}_getReadbackTexture(e){const{context:t,pixelRatio:r}=e,i=Math.round(r*Math.abs(this.readbackScreenCoords[2]-this.readbackScreenCoords[0])),s=Math.round(r*Math.abs(this.readbackScreenCoords[3]-this.readbackScreenCoords[1]));if(this._readbackTexture)this._readbackTexture.resize(i,s);else{const a=new A(i,s);a.wrapMode=k.CLAMP_TO_EDGE,a.internalFormat=_r.RGBA8,this._readbackTexture=new K(t,a)}return this._readbackTexture}};class bo extends Rr{constructor(e,t,r){super(null,t={...t,renderFrame:i=>{}},new jr(null,{canvas:e})),this._requestRender=r,this.viewIsReady=!1,this.videoScreenRenderer=new vo(this,t),this.videoScreenRenderer.visible=!0}requestRender(){this._requestRender()}processRender(e){this.videoScreenRenderer.bind(e),e.backgroundColor=Dr.fromArray([0,0,0,0]),super.processRender(e),this.videoScreenRenderer.unbind(e)}}let Zh=class extends Rr{constructor(e,t,r){super(e,t={...t,renderFrame:i=>{this.render(i)}},r),this._childStage=new bo(r.canvas,t,()=>this.requestRender())}get childStage(){return this._childStage}render(e){this._childStage.viewIsReady?(this._childStage.context.enforceState(),this._childStage.renderFrame(e)):this.requestRender(),this.context.enforceState(),super.renderFrame(e)}processRender(e){super.processRender(e),this._childStage.viewIsReady&&this._childStage.visible&&this._childStage.videoScreenRenderer.processRender(e)}};class xo extends qe{constructor(){super(...arguments),this.type=He.Magnifier,this._resourcePixelRatio=1,this._position=[0,0,0,0],this.shaders={magnifier:new Xi}}updateResources(e,t,r,i){e.pixelRatio!==this._resourcePixelRatio&&this._destroyResources(),this._readbackTexture||this._initializeResources(e,t,r,i);const{context:s,pixelRatio:a}=e,{factor:o,offset:l,position:h}=i,{size:c}=e.state,u=i.size*a,d=1/o,p=Math.ceil(d*u);this._readbackTexture.resize(p,p);const m=a*c[0],_=a*c[1],g=.5*p,y=.5*p,f=bt(a*h.x,g,m-g-1),x=bt(_-a*h.y,y,_-y-1),b=f-g,w=x-y,v=this._readbackTexture;s.bindTexture(v,0),s.gl.copyTexImage2D(v.descriptor.target,0,v.descriptor.pixelFormat,b,w,p,p,0);const S=(f+l.x*a)/m*2-1,T=(x-l.y*a)/_*2-1,I=u/m*2,z=u/_*2;this._position[0]=S,this._position[1]=T,this._position[2]=I,this._position[3]=z}render(e,t){const{context:r,painter:i}=e;i.setPipelineState(Ge);const s={readbackTexture:{texture:this._readbackTexture,unit:0},maskTexture:{texture:this._maskTexture,unit:7},overlayTexture:{texture:this._overlayTexture,unit:6},drawPos:this._position,...t};i.submitDrawMesh(r,{shader:this.shaders.magnifier,uniforms:{config:s},defines:null,optionalAttributes:null,useComputeBuffer:!1},i.quadMesh)}shutdown(){this._destroyResources()}_initializeResources(e,t,r,i){const s=e.context;this._resourcePixelRatio=e.pixelRatio;const a=Math.ceil(i.size*e.pixelRatio);r.width=a,r.height=a;const o=new A;o.internalFormat=L.RGBA,o.wrapMode=k.CLAMP_TO_EDGE,o.samplingMode=V.NEAREST,o.flipped=!0,o.preMultiplyAlpha=!Nr(r.src)||!e.context.driverTest.svgPremultipliesAlpha.result,this._overlayTexture=new K(s,o,r),t.width=a,t.height=a,o.pixelFormat=o.internalFormat=L.ALPHA,this._maskTexture=new K(s,o,t);const l=1/i.factor;o.pixelFormat=o.internalFormat=L.RGBA,o.width=o.height=Math.ceil(l*a),o.samplingMode=V.LINEAR,o.flipped=!1,this._readbackTexture=new K(s,o)}_destroyResources(){B(this._maskTexture),B(this._overlayTexture),B(this._readbackTexture),this._maskTexture=null,this._overlayTexture=null,this._readbackTexture=null}}async function wo(n){const e=Fe(()=>import("./mask-svg-cNit2NTT.js"),[]),t=Fe(()=>import("./overlay-svg-Bzi1oSGN.js"),[]),r=Nt((await e).default,{signal:n}),i=Nt((await t).default,{signal:n}),s={mask:await r,overlay:await i};return pt(n),s}class tc extends mt{constructor(){super(),this._handles=new nr,this._magnifierTechnique=new xo,this.updatingHandles=new vs,this.visible=!1}destroy(){this._handles=Ne(this._handles),this._magnifierTechnique.shutdown(),this._resourcesTask=Ur(this._resourcesTask)}get backgroundColor(){return this._backgroundColor}set backgroundColor(e){this._backgroundColor=e,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(e){this._magnifier=e,this._handles.removeAll(),this._handles.add([ye(()=>e.version,()=>{this.visible=e.visible&&e.position!=null&&e.size>0,this.requestRender()},ot),ye(()=>[e.maskUrl,e.overlayUrl],()=>this._reloadResources()),ye(()=>e.size,()=>{this._magnifierTechnique.shutdown(),this.requestRender()})])}_createTransforms(){return{displayViewScreenMat3:Ue()}}doRender(e){if(!this._resourcesTask)return void this._reloadResources();if(e.drawPhase!==j.MAP||!this._canRender())return;const t=this._magnifier;if(t.position==null)return;this._magnifierTechnique.updateResources(e,this._mask,this._overlay,t);const r=this.backgroundColor,i=r?[r.a*r.r/255,r.a*r.g/255,r.a*r.b/255,r.a]:[1,1,1,1];this._magnifierTechnique.render(e,{background:i,maskEnabled:t.maskEnabled?1:0,overlayEnabled:t.overlayEnabled?1:0})}_canRender(){return this._mask&&this._overlay&&this._magnifier!=null}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const e=this._magnifier!=null?this._magnifier.maskUrl:null,t=this._magnifier!=null?this._magnifier.overlayUrl:null;this._resourcesTask=ys(async r=>{const i=e==null||t==null?wo(r):null,s=e!=null?we(e,{responseType:"image",signal:r}).then(h=>h.data):i.then(h=>h.mask),a=t!=null?we(t,{responseType:"image",signal:r}).then(h=>h.data):i.then(h=>h.overlay),[o,l]=await Promise.all([s,a]);this._mask=o,this._overlay=l,this._magnifierTechnique.shutdown(),this.requestRender()}),this.updatingHandles.addPromise(this._resourcesTask.promise)}}class Mo extends qe{constructor(){super(...arguments),this.type=He.Grid,this.shaders={grid:new Yi}}render(e,t){const{context:r,painter:i}=e;i.setPipelineState(Ge),i.submitDrawMesh(r,{shader:this.shaders.grid,uniforms:t,defines:null,optionalAttributes:null,useComputeBuffer:!1},i.quadMesh)}}const at=vr();class rc extends mt{constructor(){super(),this._handles=new nr,this._projectedCenter=null,this._metersPerSRUnit=null,this._technique=new Mo,this._grid=null,this.visible=!0}destroy(){this._handles=Ne(this._handles),this._technique.shutdown()}get grid(){return this._grid}set grid(e){this._grid=e,this._handles.removeAll(),this._handles.add([ye(()=>e==null?void 0:e.center,()=>{this._projectedCenter=null},ot),ye(()=>[e==null?void 0:e.center,e==null?void 0:e.dynamicScaling,e==null?void 0:e.majorLineColor,e==null?void 0:e.majorLineInterval,e==null?void 0:e.minorLineColor,e==null?void 0:e.rotateWithMap,e==null?void 0:e.rotation,e==null?void 0:e.spacing,e==null?void 0:e.units],()=>this.requestRender(),ot)])}_createTransforms(){return{displayViewScreenMat3:Ue()}}doRender(e){if(e.drawPhase!==j.MAP||this.grid==null||!this.visible)return;const{spacing:t,units:r,majorLineInterval:i,dynamicScaling:s,majorLineColor:a,minorLineColor:o}=this.grid;if(t===0||(this._updateDerivedValues(e),this._projectedCenter==null||this._metersPerSRUnit==null))return;const{scale:l,spatialReference:h}=e.state,c=Vr(t,r,"meters"),u=this._metersPerSRUnit*Ss(l,h),d=c/u;if(!s&&d<Cs)return;const p=c*Ps(i,d,s);this._updateTransform(e,u,p),this._technique.render(e,{transform:{dvs:this.transforms.displayViewScreenMat3},config:{pxPerCell:p/u,minorLineColor:ar(o),majorLineColor:ar(a),majorLineInterval:i,halfWidth:.25,aaWidth:.5}})}_updateDerivedValues(e){if(!this.grid)return;const{center:t}=this.grid,{spatialReference:r}=e.state;this._projectedCenter&&xt(this._projectedCenter.spatialReference,r)||(this._metersPerSRUnit=null,xt(t.spatialReference,r)?this._projectedCenter=t:xs(t.spatialReference,r)?this._projectedCenter=ws(t,r):this.requestRender()),this._metersPerSRUnit==null&&this._projectedCenter!=null&&(this._metersPerSRUnit=Os(this._projectedCenter))}_updateTransform(e,t,r){const{grid:i}=this,{center:s,rotation:a,size:o,spatialReference:l}=e.state;if(i==null||this._projectedCenter==null||this._metersPerSRUnit==null)return;const h=t*(o[0]/2),c=t*(o[1]/2),u=this._metersPerSRUnit/r,d=this._projectedCenter,p=wt(i.rotation),m=wt(a),_=this.transforms.displayViewScreenMat3;us(_,-p);const g=l.isWrappable?Ms(d.x,s[0],l):d.x,y=Ut(at,g,d.y),f=bs(at,s,y);tt(f,f,u),i.rotateWithMap||rt(f,f,it,-m),rt(f,f,it,-p),tt(f,f,1/i.majorLineInterval),So(f,f),tt(f,f,i.majorLineInterval),rt(f,f,it,p),yr(_,_,f),i.rotateWithMap&&gr(_,_,m);const x=Ut(at,h/r,c/r);ds(_,_,x)}}function So(n,e){return n[0]=e[0]-Math.trunc(e[0]),n[1]=e[1]-Math.trunc(e[1]),n}function ar(n){const[e,t,r,i]=n.toArray().map(s=>s/255);return[e*i,t*i,r*i,i]}export{bo as ChildStage,cc as GraphicContainer,lc as GraphicsView2D,rc as GridView2D,ac as LabelManager,tc as MagnifierView2D,oc as MapViewNavigation,Zh as ParentStage,Rr as Stage};
