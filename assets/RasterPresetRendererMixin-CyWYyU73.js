import{H as d,a3 as k,al as ae,a0 as A,ad as re,T as ie,c as s,m as o,bn as ne,bi as se,d as E}from"./Identifiable-B58w9FD1.js";import{l as le,m as oe}from"./RasterSymbolizer-C7rLQthS.js";import{f as ue,u as de,s as pe}from"./utils-DM3VuI_N.js";import{g as me}from"./FeatureSet-DrLo5FjM.js";import{p as ce,l as fe}from"./RasterJobHandlerMixin-C3SCa-P-.js";async function L(t,a,p){var I,N,M,P,j,C,J,z,O,q;const V=ue(t),{rasterFunction:g,sourceJSON:B}=a||{},W=g?JSON.stringify(g.rasterFunctionDefinition||g):null,X=de({...V.query,renderingRule:W,f:"json"}),u=pe(X,p);t=V.path;const e=B||await d(t,u).then(r=>r.data),Y=e.hasRasterAttributeTable?d(`${t}/rasterAttributeTable`,u):null,_=e.hasColormap?d(`${t}/colormap`,u):null,G=e.hasHistograms?d(`${t}/histograms`,u):null,K=e.currentVersion>=10.3?d(`${t}/keyProperties`,u):null,Q=e.hasMultidimensions?d(`${t}/multidimensionalInfo`,u):null,i=await Promise.allSettled([Y,_,G,K,Q]);let b=null;if(e.minValues&&e.minValues.length===e.bandCount){b=[];for(let r=0;r<e.minValues.length;r++)b.push({min:e.minValues[r],max:e.maxValues[r],avg:e.meanValues[r],stddev:e.stdvValues[r]})}const D=k.fromJSON(e.extent),$=Math.ceil(D.width/e.pixelSizeX-.1),T=Math.ceil(D.height/e.pixelSizeY-.1),x=ae.fromJSON(e.spatialReference||e.extent.spatialReference),f=i[0].status==="fulfilled"?(I=i[0].value)==null?void 0:I.data:null,U=(N=f==null?void 0:f.features)!=null&&N.length?me.fromJSON(f):null,h=i[1].status==="fulfilled"?(M=i[1].value)==null?void 0:M.data.colormap:null,Z=h!=null&&h.length?h:null,y=i[2].status==="fulfilled"?(P=i[2].value)==null?void 0:P.data.histograms:null,ee=(C=(j=y==null?void 0:y[0])==null?void 0:j.counts)!=null&&C.length?y:null,m=i[3].status==="fulfilled"?((J=i[3].value)==null?void 0:J.data)??{}:{},v=i[4].status==="fulfilled"?(z=i[4].value)==null?void 0:z.data.multidimensionalInfo:null,R=(O=v==null?void 0:v.variables)!=null&&O.length?v:null;R&&R.variables.forEach(r=>{var F,H;(F=r.statistics)!=null&&F.length&&r.statistics.forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),(H=r.dimensions)==null||H.forEach(n=>{n.name!=="StdTime"||n.recurring||n.unit||(n.unit="ISO8601")})});const{defaultVariable:S,serviceDataType:c}=e;S&&S!==m.DefaultVariable&&(m.DefaultVariable=S),c!=null&&c.includes("esriImageServiceDataTypeVector")&&!c.includes(m.DataType)&&(m.DataType=c.replace("esriImageServiceDataType",""));let w=e.noDataValue;(q=e.noDataValues)!=null&&q.length&&e.noDataValues.some(r=>r!==w)&&(w=e.noDataValues);const te=e.transposeInfo?new le({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new A({x:e.extent.xmin,y:e.extent.ymax,spatialReference:x}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max($,T))/Math.LN2-8)),transposeInfo:e.transposeInfo}):void 0;return new oe({width:$,height:T,bandCount:e.bandCount,extent:k.fromJSON(e.extent),spatialReference:x,pixelSize:new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:x}),pixelType:e.pixelType.toLowerCase(),statistics:b,attributeTable:U,colormap:Z,histograms:ee,keyProperties:m,noDataValue:w,multidimensionalInfo:R,storageInfo:te})}function xe(t,a,p){return L(t,{sourceJSON:a},p)}function Re(t,a,p){return L(t,{rasterFunction:a},p)}function Se(t,a){t.attributeTable||(a.hasRasterAttributeTable=!1),t.histograms||(a.hasHistograms=!1),t.colormap||(a.hasColormap=!1),t.multidimensionalInfo||(a.hasMultidimensions=!1)}let l=class extends re.ClonableMixin(ie){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};s([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"name",void 0),s([o({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),ne({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],l.prototype,"method",void 0),s([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"value",void 0),s([o({type:[se],json:{write:{isRequired:!0}}})],l.prototype,"bandIds",void 0),s([o({types:fe,json:{write:!0,origins:{"web-scene":{types:ce,write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],l.prototype,"renderer",void 0),l=s([E("esri.renderers.support.RasterPresetRenderer")],l);const we=t=>{let a=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return s([o({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],a.prototype,"activePresetRendererName",void 0),s([o({type:[l],json:{name:"layerDefinition.presetRenderers",write:!0}})],a.prototype,"presetRenderers",void 0),a=s([E("esri.layers.mixins.RasterPresetRendererMixin")],a),a};export{Se as c,xe as f,we as o,Re as p};
