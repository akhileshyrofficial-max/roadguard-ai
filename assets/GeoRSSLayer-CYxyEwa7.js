import{q as p,E as y,H as m,bX as u,ao as d,c as o,m as i,ac as h,a3 as c,d as f}from"./Identifiable-BjM0PfdN.js";import{S}from"./MultiOriginJSONSupport-DTACln0m.js";import{h as g}from"./Layer-CUjb8Y3m.js";import{p as v}from"./BlendLayer-DF9cB_oM.js";import{b,u as C,d as G,y as P}from"./OperationalLayer-6g6e-nWM.js";import{j as _}from"./PortalLayer-BoXCwR0X.js";import{f as w}from"./RefreshableLayer-C7bowOgO.js";import{t as x}from"./ScaleRangeLayer-YHoThhHM.js";import{a as R}from"./PictureMarkerSymbol-DOPylmLK.js";import{m as $,c as n,u as k,a as j}from"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./index-CVvIVqY1.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DU1z6yLO.js";import"./parser-BAKViB6V.js";import"./screenUtils-aQeO9QTD.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-C8ai-EIY.js";import"./common-DQOJ18NT.js";import"./ElevationInfo-B2ksLwBj.js";import"./fieldUtils-Br-fPSxS.js";import"./lengthUtils-BDJ7rNGW.js";import"./asyncUtils-zc5DpkIL.js";import"./layerUtils-CmDKJw7q.js";import"./PortalItem-5OKFVWCx.js";import"./portalItemUtils-CwGcUdPw.js";import"./projectionUtils-D3_kHwH-.js";const E=["atom","xml"],F={base:n,key:"type",typeMap:{"simple-line":$},errorContext:"symbol"},M={base:n,key:"type",typeMap:{"picture-marker":R,"simple-marker":k},errorContext:"symbol"},L={base:n,key:"type",typeMap:{"simple-fill":j},errorContext:"symbol"};let t=class extends v(w(b(_(x(S(g)))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}readFeatureCollections(e,r){return r.featureCollection.layers.forEach(s=>{var a;const l=s.layerDefinition.drawingInfo.renderer.symbol;l&&l.type==="esriSFS"&&((a=l.outline)!=null&&a.style.includes("esriSFS"))&&(l.outline.style="esriSLSSolid")}),r.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?p(this.url,E)||"GeoRSS":e}set title(e){this._set("title",e)}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(y).then(()=>this._fetchService(r)).then(s=>{this.read(s,{origin:"service"})})),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){const r=this.spatialReference,{data:s}=await m(d.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:u(r)?void 0:r.wkid??JSON.stringify(r)},signal:e});return s}_hasGeometry(e){var r;return((r=this.featureCollections)==null?void 0:r.some(s=>{var l,a;return((l=s.featureSet)==null?void 0:l.geometryType)===e&&((a=s.featureSet.features)==null?void 0:a.length)>0}))??!1}};o([i()],t.prototype,"description",void 0),o([i()],t.prototype,"featureCollections",void 0),o([h("service","featureCollections",["featureCollection.layers"])],t.prototype,"readFeatureCollections",null),o([i({type:c,json:{name:"lookAtExtent"}})],t.prototype,"fullExtent",void 0),o([i(C)],t.prototype,"id",void 0),o([i(G)],t.prototype,"legendEnabled",void 0),o([i({types:F,json:{write:!0}})],t.prototype,"lineSymbol",void 0),o([i({type:["show","hide"]})],t.prototype,"listMode",void 0),o([i({types:M,json:{write:!0}})],t.prototype,"pointSymbol",void 0),o([i({types:L,json:{write:!0}})],t.prototype,"polygonSymbol",void 0),o([i({type:["GeoRSS"]})],t.prototype,"operationalLayerType",void 0),o([i(P)],t.prototype,"url",void 0),o([i({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],t.prototype,"title",null),o([i({readOnly:!0,json:{read:!1},value:"geo-rss"})],t.prototype,"type",void 0),t=o([f("esri.layers.GeoRSSLayer")],t);const ae=t;export{ae as default};
