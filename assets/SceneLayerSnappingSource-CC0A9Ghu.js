import{aJ as w,eC as b,x as g,v as L,c as o,m as n,d as f,B as H,z as E,cE as _,dS as x,aw as I,L as $}from"./Identifiable-_3rFZ1o6.js";import{h as O}from"./UpdatingHandles-BZb3Zh99.js";import{h as k}from"./WorkerHandle-DK8HpYhp.js";import{t as u}from"./workerHelper-B1Q3rYNK.js";import{f as V}from"./edgeProcessing-DyyQHuWE.js";import{V as A}from"./sphere-CxG2piVF.js";import{b as v,m as R}from"./hitTestSelectUtils-DuQI-drP.js";import{c as D}from"./RouteLayerInteraction-DrsWX9Wp.js";import{r as P}from"./VertexSnappingCandidate-DFU1rXOs.js";import"./index-BEHHhRxI.js";import"./workers-BcCT7nhd.js";import"./Queue-CJjQn74K.js";import"./intl-Beb5GWXc.js";import"./number-7p_O6jwX.js";import"./InterleavedLayout-sBpZXb9C.js";import"./BufferView-eGDukKmQ.js";import"./vec2-ChnYg_BJ.js";import"./common-DQOJ18NT.js";import"./vec32-soPbwaVZ.js";import"./vec42-CKs01hkn.js";import"./vec2f64-Cgb6qxNH.js";import"./vec4f64-DPb6J-GU.js";import"./types-BKo2foNY.js";import"./deduplicate-Xkyt2L53.js";import"./Indices-CJx9tykA.js";import"./VertexAttribute-BfkzOMLV.js";import"./glUtil-DRNmC8Up.js";import"./enums-UBzvFP7O.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Normals-D5GIqjuf.js";import"./mat4-CEszlm-2.js";import"./mat3-CruJiiUv.js";import"./mat3f64-B5o_lm6j.js";import"./vectorStacks-Cflk7ctu.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./Cyclical-C1_PpBfH.js";import"./quantityUtils-CfVXs5z9.js";import"./projectVectorToVector-DAecJS5f.js";import"./projectionUtils-BdqPecQc.js";import"./projectPointToVector-BeChI4_x.js";import"./geodesicUtils-5UKmzzQW.js";import"./fieldUtils-z3GG2R-H.js";import"./Layer--GugXUPW.js";import"./Query-Dp8boimB.js";import"./jsonUtils-Cc67rW5Z.js";import"./typeUtils-mxDsOnhk.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";import"./MapView-DvC1rydD.js";import"./CollectionFlattener-kjXuGTXg.js";import"./TileInfo-CvSYzqJL.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BbJVeaDA.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./asyncUtils-CmphLL3n.js";import"./signal-R7pX2aet.js";import"./Map-BfsPAzzq.js";import"./Basemap-xdFWd_Ef.js";import"./loadAll-MI_JOpdU.js";import"./PortalItem-Dn4oT_Gd.js";import"./writeUtils-CFLt5Al1.js";import"./layerUtils-CFmFO8Du.js";import"./persistable-DdbzkEuJ.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-a1-4zqTB.js";import"./PolygonCollection-CMbOuNoO.js";import"./mat4f32-Djp3mnm5.js";import"./TablesMixin-DOSIq3qh.js";import"./GraphicsCollection-csXasQht.js";import"./Graphic-q_7OAYHf.js";import"./PopupTemplate-B09IYibB.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Buir9u-w.js";import"./SimpleMarkerSymbol-Drowg4jp.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-DNlIzH5i.js";import"./TextSymbol-keZwKiPd.js";import"./PictureMarkerSymbol-DlgeV3xL.js";import"./HeightModelInfo-C8sA4bKM.js";import"./timeZoneUtils-Cef7SfoB.js";import"./ReactiveMap-DptZZMoQ.js";import"./ViewingMode-Chk7YAAL.js";import"./enums-NCSMZWP1.js";import"./TileKey-upwcIO5W.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BS0bJnzn.js";import"./normalizeUtilsCommon-Ca72SEzL.js";import"./utils-C73sopP7.js";import"./utils-UVgDzRJn.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-DH2YvKGe.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./Texture-BILrrMzS.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-DN-q3Lg0.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-BR-Ucixf.js";import"./plane-BnjjlcHJ.js";import"./elevationInfoUtils-DRGp9Lv0.js";import"./ElevationInfo-7Ug8ElGs.js";import"./lengthUtils-CrwfL9_h.js";import"./spatialReferenceEllipsoidUtils-DTRGV_GU.js";import"./GraphicsLayer-BOJ0yOnh.js";import"./BlendLayer-DNv82dbV.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-CO8m00ps.js";import"./parser-BgHAYnRY.js";import"./ScaleRangeLayer-5c4AXGq9.js";import"./Stop-BpZ8Nuyu.js";import"./networkEnums-BTp20v-Z.js";import"./geodeticLengthOperator-BHayuOJB.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-WIUNF1ZS.js";import"./lineSegment-Bl6I3b1d.js";import"./PointSnappingHint-B5UG77eq.js";class B extends k{constructor(e){super("EdgeProcessingWorker","extract",{extract:r=>[r.dataBuffer],extractComponentsEdgeLocations:r=>[r.dataBuffer],extractEdgeLocations:r=>[r.dataBuffer]},e)}async process(e,r,i){return i?V(e):j(await this.invoke(new y(e),r))}async extractEdgeLocations(e,r){const i=await this.invokeMethod("extractEdgeLocations",new y(e),r);return u(i)}async extractComponentsEdgeLocations(e,r){const i=await this.invokeMethod("extractComponentsEdgeLocations",new y(e),r);return u(i)}}function j(t){return{regular:{instancesData:u(t.regular.instancesData),lodInfo:{lengths:new Float32Array(t.regular.lodInfo.lengths)}},silhouette:{instancesData:u(t.silhouette.instancesData),lodInfo:{lengths:new Float32Array(t.silhouette.lodInfo.lengths)}},averageEdgeLength:t.averageEdgeLength}}class y{constructor(e){this.dataBuffer=e.data.buffer,this.writerSettings=e.writerSettings,this.skipDeduplicate=e.skipDeduplicate,this.indices=w(e.indices)?e.indices.buffer:e.indices,this.indicesType=w(e.indices)?b(e.indices)?"Uint32Array":"Uint16Array":"Array",this.indicesLength=e.indicesLength}}let p=class extends g{constructor(t){super(t),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new W(this.schedule,{fetchAllEdgeLocations:(t,e)=>this._fetchAllEdgeLocations(t,e)})}async fetchCandidates(t,e){const r=t.coordinateHelper,{point:i}=t,s=z;this.renderCoordsHelper.toRenderCoords(i,r.spatialReference,s);const m=t.distance,d=typeof m=="number"?m:m.distance,l=await this._workerHandle.invoke({bounds:A(s[0],s[1],s[2],d),returnEdge:t.returnEdge,returnVertex:t.vertexMode!=="none"},e);return l.candidates.sort((h,C)=>h.distance-C.distance),l.candidates.map(h=>this._convertCandidate(r,h))}async add(t,e){this._ids.add(t.id),await this._workerHandle.invokeMethod("add",t,e)}async remove(t,e){this._ids.delete(t.id),await this._workerHandle.invokeMethod("remove",t,e)}_convertCandidate(t,e){switch(e.type){case"edge":return new D({objectId:e.objectId,targetPoint:v(this._convertRenderCoordinate(t,e.target)),edgeStart:this._convertRenderCoordinate(t,e.start),edgeEnd:this._convertRenderCoordinate(t,e.end),isDraped:!1});case"vertex":return new P({objectId:e.objectId,targetPoint:v(this._convertRenderCoordinate(t,e.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:t},e){const r=L();return this.renderCoordsHelper.fromRenderCoords(e,r,t),R(r)}async _fetchAllEdgeLocations(t,e){const r=[],i=[];for(const{id:s,uid:m}of t.components)this._ids.has(s)&&r.push((async()=>{const d=await this.fetchEdgeLocations(s,e.signal),l=d.locations.buffer;return i.push(l),{id:s,uid:m,objectIds:d.objectIds,locations:l,origin:d.origin,type:d.type}})());return{result:{components:(await Promise.all(r)).filter(({id:s})=>this._ids.has(s))},transferList:i}}};o([n({constructOnly:!0})],p.prototype,"renderCoordsHelper",void 0),o([n({constructOnly:!0})],p.prototype,"fetchEdgeLocations",void 0),o([n({constructOnly:!0})],p.prototype,"schedule",void 0),o([n({readOnly:!0})],p.prototype,"availability",void 0),p=o([f("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],p);let W=class extends k{constructor(e,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:r})}};const z=L();let a=class extends g{get updating(){return this._updatingHandles.updating}constructor(t){super(t),this.availability=1,this._updatingHandles=new O,this._abortController=new AbortController}destroy(){this._tracker=H(this._tracker),this._abortController=E(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:t}=this,e=t.resourceController;this._edgeWorker=new B(S(e)),this._workerHandle=new p({renderCoordsHelper:this.view.renderCoordsHelper,schedule:S(e),fetchEdgeLocations:async(r,i)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,i)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([_(this._workerHandle),_(this._edgeWorker)])}async fetchCandidates(t,e){return this._workerHandle.fetchCandidates(t,e)}refresh(){}async _setupLayerView(){var r;if(this.destroyed)return;const t=(r=this._abortController)==null?void 0:r.signal,e=await this.getLayerView();e==null||x(t)||(this._tracker=e.trackSnappingSources({add:(i,s)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:i,bounds:s},t))},remove:i=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:i},t))}}))}};function S(t){return e=>t.immediate.schedule(e)}o([n({constructOnly:!0})],a.prototype,"getLayerView",void 0),o([n({constructOnly:!0})],a.prototype,"view",void 0),o([n({readOnly:!0})],a.prototype,"updating",null),o([n({readOnly:!0})],a.prototype,"availability",void 0),a=o([f("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let c=class extends g{get updating(){return this._i3sSources.some(t=>t.updating)}constructor(t){super(t),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(t=>t.destroy()),this._i3sSources.length=0}initialize(){const{view:t}=this,e=this.layerSource.layer;this._i3sSources=e.type==="building-scene"?this._getBuildingSceneI3SSources(t,e):[this._getSceneLayerI3SSource(t,e)]}async fetchCandidates(t,e){const r=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(t,e)));return I(e),r.flat()}refresh(){this._i3sSources.forEach(t=>t.refresh())}_getBuildingSceneI3SSources(t,e){return e.allSublayers.toArray().map(r=>r.type==="building-component"?new a({getLayerView:async()=>(await t.whenLayerView(e)).whenSublayerView(r),view:t}):null).filter($)}_getSceneLayerI3SSource(t,e){return new a({getLayerView:async()=>{const r=await t.whenLayerView(e);return r.type==="scene-layer-graphics-3d"?void 0:r},view:t})}};o([n({constructOnly:!0})],c.prototype,"layerSource",void 0),o([n({constructOnly:!0})],c.prototype,"view",void 0),o([n({readOnly:!0})],c.prototype,"updating",null),o([n({readOnly:!0})],c.prototype,"availability",void 0),c=o([f("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],c);export{c as SceneLayerSnappingSource};
