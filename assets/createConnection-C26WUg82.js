const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/FeatureLayer-CLiVI4Y9.js","assets/index-CVvIVqY1.js","assets/Identifiable-BjM0PfdN.js","assets/PopupTemplate-CF36_3mn.js","assets/fieldUtils-Br-fPSxS.js","assets/MultiOriginJSONSupport-DTACln0m.js","assets/layerContainerType-C5CzMsLd.js","assets/FeatureLayerBase-BEP9nq_S.js","assets/Field-FVkerAtx.js","assets/fieldType-ClovGbuQ.js","assets/HeightModelInfo-BaIW4m76.js","assets/OperationalLayer-6g6e-nWM.js","assets/ElevationInfo-B2ksLwBj.js","assets/lengthUtils-BDJ7rNGW.js","assets/Layer-CUjb8Y3m.js","assets/timeZoneUtils-DMYcWBGI.js","assets/labelingInfo-D4BqM-rK.js","assets/asyncUtils-zc5DpkIL.js","assets/uuid-Cl5lrJ4c.js","assets/Query-duJofNa2.js","assets/jsonUtils-DBuABSQZ.js","assets/typeUtils-U-Zf11cK.js","assets/layerUtils-CmDKJw7q.js","assets/SimpleRenderer-DtNv2-NG.js","assets/commonProperties-DMnf_yWT.js","assets/colorRamps-BRrX9yVq.js","assets/ColorStop-5uJISB8q.js","assets/screenUtils-aQeO9QTD.js","assets/visualVariableUtils-D9hF7KBy.js","assets/Graphic-C2Bnzy89.js","assets/createFeatureId-BiB9j2WD.js","assets/typeUtils-CP9PJ8Sp.js","assets/SimpleMarkerSymbol-D-X_CJ8B.js","assets/aaBoundingBox-BrXqvn3i.js","assets/TextSymbol-DPyc43q3.js","assets/PictureMarkerSymbol-DOPylmLK.js","assets/jsonUtils-0dtnZsjW.js","assets/defaults3D-BGxlF4_A.js","assets/defaults-DZVYugxa.js","assets/defaultsJSON-GKolV7NZ.js","assets/UniqueValueRenderer-B64Ao_xz.js","assets/diffUtils-B0wxD3C_.js","assets/RendererLegendOptions-Dm8mjmQN.js","assets/styleUtils-qogXp5hy.js","assets/NormalizationBinParametersMixin-Crnd6wMH.js","assets/labelUtils-NFOL2PSf.js","assets/LayerFloorInfo-BXLJad_o.js","assets/Relationship-CUFRn8rr.js","assets/serviceCapabilitiesUtils-CP98zo7N.js","assets/infoFor3D-dHKPbXlj.js","assets/portalItemUtils-CwGcUdPw.js","assets/projectionUtils-D3_kHwH-.js","assets/workers-BNUpPbJD.js","assets/Queue-DILFUEQB.js","assets/intl-ByqrfC_d.js","assets/number-CsIuR4Me.js","assets/editsZScale-DUwJAU5s.js","assets/queryZScale-4dT8HLv_.js","assets/FeatureSet-CfhGyZLm.js","assets/APIKeyMixin-BaAbEZ6o.js","assets/ArcGISService-C7MDewEF.js","assets/BlendLayer-DF9cB_oM.js","assets/jsonUtils-DU1z6yLO.js","assets/parser-BAKViB6V.js","assets/mat4f32-Djp3mnm5.js","assets/mat4-C8ai-EIY.js","assets/common-DQOJ18NT.js","assets/CustomParametersMixin-CaE_7QVR.js","assets/DisplayFilteredLayer-KcrREqwn.js","assets/scaleUtils-FdYBOJJY.js","assets/displayFilterUtils-B-ID7e2S.js","assets/EditBusLayer-BE16pDpT.js","assets/FeatureEffectLayer-Dz9lRoMM.js","assets/FeatureEffect-BRW3s7TY.js","assets/FeatureFilter-De8SeFsL.js","assets/FeatureReductionLayer-BFqHz_iZ.js","assets/FeatureReductionSelection-GNuvkNRj.js","assets/jsonUtils-Bc5jw-8H.js","assets/typeUtils-vKjb0E8i.js","assets/ClassBreaksRenderer-2NW_j7bV.js","assets/LRUCache-eBEVKbNU.js","assets/MemCache-CUhFgUMJ.js","assets/DictionaryScriptEvaluator-CuBKcLRo.js","assets/Version-CWer4Z2d.js","assets/FieldsIndex-CZ9IrKuX.js","assets/UnknownTimeZone-C7APdNSb.js","assets/ArcadeExpression-BVYrSaqO.js","assets/TimeOnly-BKNTMEoH.js","assets/enum-C-GuSG8G.js","assets/utils-Civwinu0.js","assets/defaultCIMValues-BrbaHf9c.js","assets/enums-BPiq_WIC.js","assets/heatmapUtils-CjJeZ5Pu.js","assets/vec42-CKs01hkn.js","assets/vec4f64-DPb6J-GU.js","assets/MD5-C9MwAd2G.js","assets/OrderedLayer-Bb5pyLrQ.js","assets/OrderByInfo-Dzv7DRRF.js","assets/PortalLayer-BoXCwR0X.js","assets/PortalItem-5OKFVWCx.js","assets/RefreshableLayer-C7bowOgO.js","assets/ScaleRangeLayer-YHoThhHM.js","assets/TemporalLayer-D9bIusP6.js","assets/TimeInfo-Dc-LPRRz.js","assets/TrackableLayer-S__R_AlR.js","assets/FeatureTemplate-Dz67sFTo.js","assets/FeatureType-B4FYBaOx.js","assets/fieldProperties-Dv0xBF4_.js","assets/TitleCreator-BLCiL0AI.js","assets/versionUtils-cymC3ENP.js","assets/styleUtils-DlzW0Ek2.js","assets/popupUtils-SL5dtRV1.js","assets/interfaces-CL2NbQte.js"])))=>i.map(i=>d[i]);
import{_ as L}from"./index-CVvIVqY1.js";import{bJ as N,s as c,c as d,m,d as S,by as v,i as a,du as O,aA as F,H as x,al as E}from"./Identifiable-BjM0PfdN.js";import{f as P}from"./jsonUtils-DBuABSQZ.js";import{o as C}from"./projectionUtils-D3_kHwH-.js";import{c as k}from"./query-DotrZ5xP.js";import{R as M}from"./Query-duJofNa2.js";import"./normalizeUtils-DfEBCyY7.js";import"./normalizeUtilsCommon-Bp_cDVNc.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";import"./pbfQueryUtils-h97YwSQw.js";import"./pbf-nAs1algh.js";import"./memoryEstimations-m6Z1UQ7X.js";import"./OptimizedFeature-DwEGrxrA.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-4dT8HLv_.js";import"./typeUtils-U-Zf11cK.js";import"./Field-FVkerAtx.js";import"./fieldType-ClovGbuQ.js";import"./Layer-CUjb8Y3m.js";let p=class extends N.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new c("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};d([m({readOnly:!0})],p.prototype,"connectionError",null),p=d([S("esri.layers.support.StreamConnection")],p);var f;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(f||(f={}));let g=class extends p{constructor(t){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:r,spatialReference:o,sourceSpatialReference:s}=t;this._config=t,this._featureZScaler=C(r,s,o),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),this._websocket!=null&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(this._websocket==null)return"disconnected";switch(this._websocket.readyState){case f.CONNECTING:case f.OPEN:return"connected";case f.CLOSING:case f.CLOSED:return"disconnected"}}sendMessageToSocket(t){this._websocket!=null?this._websocket.send(JSON.stringify(t)):this._outstandingMessages.push(t)}sendMessageToClient(t){this._onMessage(t)}updateCustomParameters(t){this._config.customParameters=t,this._websocket!=null&&this._websocket.close()}async _tryCreateWebSocket(t=this._config.source.path,r=1e3,o=0){try{if(this.destroyed)return;const s=v(t,this._config.customParameters??{});this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const n=r/1e3;return this._config.maxReconnectionAttempts&&o>=this._config.maxReconnectionAttempts?(a.getLogger(this).error(new c("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(a.getLogger(this).error(new c("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,s)),await O(r),this._tryCreateWebSocket(t,Math.min(1.5*r,1e3*this._config.maxReconnectionInterval),o+1))}}_setWebSocketJSONParseHandler(t){t.onmessage=r=>{try{const o=JSON.parse(r.data);this._onMessage(o)}catch(o){return void a.getLogger(this).error(new c("websocket-connection","Failed to parse message, invalid JSON",{error:o}))}}}_createWebSocket(t){return new Promise((r,o)=>{const s=new WebSocket(t);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=n=>this._onClose(n),s.onerror=n=>this._onError(n),this._setWebSocketJSONParseHandler(s),r(s)},s.onclose=n=>{s.onopen=s.onclose=null,o(n)}})}async _handshake(t=1e4){const r=this._websocket;if(r==null)return;const o=F(),s=r.onmessage,{filter:n,outFields:u,spatialReference:l}=this._config;return o.timeout(t),r.onmessage=h=>{var w;let i=null;try{i=JSON.parse(h.data)}catch{}i&&typeof i=="object"||(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - malformed message",h.data)),o.reject(),this.destroy()),((w=i.spatialReference)==null?void 0:w.wkid)!==(l==null?void 0:l.wkid)&&(a.getLogger(this).error(new c("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,h.data)),o.reject(),this.destroy()),i.format!=="json"&&(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - format is not set",h.data)),o.reject(),this.destroy()),n&&i.filter!==n&&a.getLogger(this).error(new c("websocket-connection","Tried to set filter, but server doesn't support it")),u&&i.outFields!==u&&a.getLogger(this).error(new c("websocket-connection","Tried to set outFields, but server doesn't support it")),r.onmessage=s;for(const _ of this._outstandingMessages)r.send(JSON.stringify(_));this._outstandingMessages=[],o.resolve()},r.send(JSON.stringify({filter:n,outFields:u,format:"json",spatialReference:{wkid:l.wkid}})),o.promise}_onMessage(t){if(this.onMessage(t),"type"in t)switch(t.type){case"features":case"featureResult":for(const r of t.features)this._featureZScaler!=null&&this._featureZScaler(r.geometry),this.onFeature(r)}}_onError(t){const r="Encountered an error over WebSocket connection";this._set("errorString",r),a.getLogger(this).error("websocket-connection",r)}_onClose(t){this._websocket=null,this.notifyChange("connectionStatus"),t.code!==1e3&&a.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${t.code}`),this.destroyed||this._open()}};d([m()],g.prototype,"connectionStatus",null),d([m()],g.prototype,"errorString",void 0),g=d([S("esri.layers.graphics.sources.connections.WebSocketConnection")],g);const W=1e4,T={maxQueryDepth:5,maxRecordCountFactor:3};let b=class extends g{constructor(e){super({...T,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),this._featureZScaler!=null&&this._featureZScaler(t.geometry)}catch(r){return void a.getLogger(this).error(new c("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=x(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:o,token:s}=r,n=this._inferWebSocketBaseUrl(o);return v(`${n}/subscribe`,{outSR:""+t.wkid,token:s})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return a.getLogger(this).error(new c("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(r==null||e==null&&t==null)return;const o=JSON.stringify({filter:this._serializeFilter(e,t)});let s=!1;const n=F(),u=()=>{s||(this.destroyed||this._websocket!==r||a.getLogger(this).error(new c("geoevent-connection","Server timed out when setting filter")),n.reject())},l=h=>{const i=JSON.parse(h.data);i.filter&&(i.error&&(a.getLogger(this).error(new c("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),s=!0,n.resolve())};return r.onmessage=l,r.send(o),setTimeout(u,W),n.promise}_serializeFilter(e,t){const r={};if(e==null&&t==null)return r;if(e!=null&&e.geometry)try{const o=P(e.geometry);if(o.type!=="extent")throw new c("geoevent-connection",`Expected extent but found type ${o.type}`);r.geometry=JSON.stringify(o.shiftCentralMeridian())}catch(o){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when setting connection geometryDefinition",o))}return e!=null&&e.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),t!=null&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],o=this._relatedFeatures.get(r);if(!o)return a.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:s,geometry:n}=o;for(const u in s)e.attributes[u]=s[u];return n&&(e.geometry=n),e.geometry||e.centroid||a.getLogger(this).error(new c("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),o=this._queryArchive(t);await r;const s=await o;if(!s)return;for(const n of s.features)this.onFeature(this._enrich(n))}catch(e){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){var _;const t=new(await L(async()=>{const{default:R}=await import("./FeatureLayer-CLiVI4Y9.js");return{default:R}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112]))).default({url:e}),{capabilities:r}=await t.load(),o=r.query.supportsMaxRecordCountFactor,s=r.query.supportsPagination,n=r.query.supportsCentroid,u=this._config.maxRecordCountFactor,l=t.capabilities.query.maxRecordCount,h=o?l*u:l,i=new M;if(i.outFields=this._config.outFields??["*"],i.where=((_=this._config.filter)==null?void 0:_.where)??"1=1",i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=E.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),o&&(i.maxRecordCountFactor=u),s)return i.num=h,t.destroy(),this._queryPages(e,i);const w=await k(e,i,this._config.sourceSpatialReference);return t.destroy(),w.data}async _queryPages(e,t,r=[],o=0){t.start=t.num!=null?o*t.num:null;const{data:s}=await k(e,t,this._config.sourceSpatialReference);return s.exceededTransferLimit&&o<(this._config.maxQueryDepth??0)?(s.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,o+1)):(r.forEach(n=>s.features.push(n)),s)}_addRelatedFeatures(e){const t=new Map,r=e.features,o=this._serviceDefinition.relatedFeatures.joinField;for(const s of r){const n=s.attributes[o];t.set(n,s)}this._relatedFeatures=t}};b=d([S("esri.layers.graphics.sources.connections.GeoEventConnection")],b);let y=class extends p{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._featureZScaler=C(t,o,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};d([m()],y.prototype,"connectionStatus",void 0),d([m()],y.prototype,"errorString",void 0),y=d([S("esri.layers.support.ClientSideConnection")],y);function q(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t),e!=null&&(r.where=e),r}function se(e,t,r,o,s,n,u,l,h){const i={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:o,filter:q(s,n),maxReconnectionAttempts:u,maxReconnectionInterval:l,customParameters:h};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new g(i):new b(i):new y(i)}export{se as createConnection};
