import{T as d,ct as n,c as s,m as i,al as h,d as S,bs as g,H as y}from"./Identifiable-B58w9FD1.js";import{v as f}from"./jsonUtils-rvWrjUVI.js";import{f as R,s as w}from"./utils-DM3VuI_N.js";import{o as v}from"./utils-Kw6dbpdX.js";let o=class extends d{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:f(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],o.prototype,"geometries",void 0),s([i({type:h,json:{read:{source:"outSR"}}})],o.prototype,"outSpatialReference",void 0),s([i()],o.prototype,"transformation",void 0),s([i()],o.prototype,"transformForward",void 0),o=s([S("esri.rest.support.ProjectParameters")],o);const j=g(o);async function $(e,t,r){t=j(t);const a=R(e),m={...a.query,f:"json",...t.toJSON()},p=t.outSpatialReference,c=f(t.geometries[0]),u=w(m,r);return y(a.path+"/project",u).then(({data:{geometries:l}})=>v(l,c,p))}export{$ as n,o as p};
