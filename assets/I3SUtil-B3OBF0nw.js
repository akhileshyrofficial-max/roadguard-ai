import{H as l,b3 as s}from"./Identifiable-BjM0PfdN.js";import"./mat4-C8ai-EIY.js";import"./mat4f64-q_b6UJoq.js";import"./vec32-rHWgUfNj.js";import"./projectionUtils-D3_kHwH-.js";import"./projectVectorToVector-yd877UiC.js";import"./sphere-mLO_dKdC.js";import"./fieldUtils-Br-fPSxS.js";import"./Query-duJofNa2.js";import{D as C,C as D}from"./I3SBinaryReader-Cac3Osts.js";import{g as _}from"./edgeUtils-CSAPKrld.js";import"./NormalAttribute.glsl-DeAV_F6P.js";import{I as R}from"./orientedBoundingBox-lR12qwpS.js";s();var m;async function A(o,p,I,S,T,u,c,a){const i=[];for(const t of p)if(t&&T.includes(t.name)){const r=`${o}/nodes/${I}/attributes/${t.key}/0`;i.push({url:r,storageInfo:t})}const E=await Promise.allSettled(i.map(t=>l(t.url,{responseType:"array-buffer",query:{...c,token:u},signal:a==null?void 0:a.signal}).then(r=>C(t.storageInfo,r.data)))),e=[];for(const t of S){const r={};for(let n=0;n<E.length;n++){const f=E[n];if(f.status==="fulfilled"){const N=f.value;r[i[n].storageInfo.name]=D(N,t)}}e.push(r)}return e}(function(o){o[o.OUTSIDE=0]="OUTSIDE",o[o.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",o[o.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",o[o.INSIDE=3]="INSIDE"})(m||(m={}));_({color:[0,0,0,0],opacity:0});s();s();new R;new Array(72);export{A as B};
