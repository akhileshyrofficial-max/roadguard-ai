import{V as K,a3 as xe,s as X,l as $e,U as Fe,i as $,br as J,aN as W,aw as Z,b as me,aB as Ge,a0 as ye,a1 as Ie,cr as Pe,c as T,m as D,d as Oe}from"./Identifiable-B58w9FD1.js";import{I as te,E as Be,D as Ue,C as je,o as Qe,g as We,i as ge,a as He,b as Ve,c as qe,_ as Je,P as Ke,A as Xe,v as Ye,d as j,e as Ze,f as ne,u as Ee}from"./KnowledgeGraphSublayer-B-GOHMa5.js";import{S as et}from"./MultiOriginJSONSupport-BZVrWF1x.js";import{h as tt}from"./Layer-C63inyUN.js";import{u as ee}from"./featureConversionUtils-De1fR0uF.js";import{_ as v,I as re,t as se,S as O,o as it}from"./constants-B4mRqufT.js";import{p as at}from"./BlendLayer-ZjS29wea.js";import{b as ot,y as nt}from"./OperationalLayer-CKgNO0NN.js";import{t as rt}from"./ScaleRangeLayer-Ci7jgVw5.js";import{u as st}from"./knowledgeGraphService-BZ-ys-cY.js";import"./index-VFfT8Aji.js";import"./aaBoundingBox-CGMzNzJN.js";import"./OptimizedFeature-DFf7-Rrh.js";import"./memoryEstimations-ugfznLe2.js";import"./fieldUtils-5LubkA3t.js";import"./projectionUtils-DsK_8mH5.js";import"./jsonUtils-rvWrjUVI.js";import"./Graphic-sBrqQAPW.js";import"./PopupTemplate-D_WeQBNh.js";import"./typeUtils-BD6Rtzmx.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Du36Z1Jr.js";import"./SimpleMarkerSymbol-B18xir4G.js";import"./screenUtils-aQeO9QTD.js";import"./TextSymbol-C7i9ol-5.js";import"./PictureMarkerSymbol-D6pzvUP4.js";import"./GraphicsLayer-DiGOhhuQ.js";import"./GraphicsCollection-CixPPU0K.js";import"./ElevationInfo-0ccmO6of.js";import"./lengthUtils-DEvA7X52.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DI0kf7Dd.js";import"./parser-NZ6dFu80.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CggL8WYf.js";import"./common-DQOJ18NT.js";import"./GraphQueryStreaming-C2UEcbT-.js";import"./Query-B1Zd9wiX.js";import"./Field-BoWr0HZE.js";import"./fieldType-CgljAswg.js";import"./workers-BRuHQO5o.js";import"./Queue-CM5__kwh.js";import"./intl-BHHnlw1J.js";import"./number-kTr8sdcN.js";import"./FeatureStore-BIcyufLs.js";import"./BoundsStore-BgVZuI7Q.js";import"./PooledRBush-BtNajwWz.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-Dd2Mh6SO.js";import"./queryUtils-DGFW-0sq.js";import"./normalizeUtils-DiYDtdl8.js";import"./normalizeUtilsCommon-BcGwSELE.js";import"./utils-DM3VuI_N.js";import"./utils-Kw6dbpdX.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-FcX9MQSS.js";import"./QueryEngine-BKgK64dC.js";import"./WhereClauseCache-Bc_wVtE4.js";import"./LRUCache-eBEVKbNU.js";import"./MemCache-CUhFgUMJ.js";import"./WhereClause-B1FQrEXk.js";import"./TimeOnly-CBUwkOTd.js";import"./enum-CyvfDIjS.js";import"./UnknownTimeZone-BdyuEDG6.js";import"./QueryEngineCapabilities-CsRUnGk7.js";import"./quantizationUtils-ooNzAwDD.js";import"./utils-D9g7bEvs.js";import"./heatmapUtils-GAAfYedV.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./utils-C6glyN2L.js";import"./timeZoneUtils-DlgpSZrP.js";import"./utils-DBr89D4K.js";import"./ClassBreaksDefinition-C6dHtvzz.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-_VwQFo1S.js";import"./NormalizationBinParametersMixin-2d45MFq8.js";import"./FieldsIndex-B99JmYLE.js";import"./Scheduler-BH9l6DUT.js";import"./signal-Cxu9Z1Kf.js";import"./clientSideDefaults-Dv0OPba4.js";import"./defaultsJSON-GKolV7NZ.js";import"./fieldProperties-BS1_JFoa.js";import"./labelingInfo-D218ARvW.js";import"./asyncUtils-C5b0g4Vr.js";import"./uuid-Cl5lrJ4c.js";import"./layerUtils-CAMu1s-2.js";import"./SimpleRenderer-Cedg0Xn2.js";import"./commonProperties-CL8iWgtU.js";import"./colorRamps-BwV5NB8A.js";import"./ColorStop-DBTLRnqQ.js";import"./visualVariableUtils-CiMe3o6k.js";import"./jsonUtils-BhRkbivh.js";import"./defaults3D-DzIVO-Cs.js";import"./defaults-CXADZSqg.js";import"./UniqueValueRenderer-C3cUyoso.js";import"./diffUtils-jeIEfUBl.js";import"./RendererLegendOptions-Bp93r_aZ.js";import"./styleUtils-CnCv1b7N.js";import"./labelUtils-XzqWkuAo.js";import"./DisplayFilteredLayer-hz3j_o46.js";import"./scaleUtils-BWXUbMYz.js";import"./displayFilterUtils-DBFDSivV.js";import"./FeatureEffectLayer-DTQSrZtt.js";import"./FeatureEffect-CyHRgGiw.js";import"./FeatureFilter-7aTMY5PN.js";import"./FeatureReductionLayer-1787HCPR.js";import"./FeatureReductionSelection-C5E5YiJT.js";import"./jsonUtils-DGQt529R.js";import"./typeUtils-CN-pQyH0.js";import"./ClassBreaksRenderer-BF27luvl.js";import"./DictionaryScriptEvaluator-MiN8zXta.js";import"./Version-B0YYd6Ho.js";import"./ArcadeExpression-Cc_hp5dd.js";import"./utils-BM8mKO1R.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-Dqu_ALs4.js";import"./OrderByInfo-BIQ3g3TT.js";import"./RefreshableLayer-Dv7Ig4sw.js";import"./TemporalLayer-D2ke8r53.js";import"./TimeInfo-YCUOEfwp.js";import"./FeatureSet-DrLo5FjM.js";import"./popupUtils-XSnIyd1l.js";import"./utils-VkC7NvOP.js";import"./cimSymbolUtils-CeKBuNur.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./networkEnums-BDHMASSX.js";import"./GPMessage-COeWYNqA.js";var ie;(function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absolute-value"})(ie||(ie={}));let k=class extends ot(at(rt(et(tt)))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(K.ofType(te)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new xe({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(K.ofType(te)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e==null?void 0:e.initializationInclusionModeDefinition,(e==null?void 0:e.dataPreloadedInLocalCache)&&!(e!=null&&e.initializationInclusionModeDefinition))throw new X("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles($e(()=>this.layers.concat(this.tables),(t,i)=>this._handleSublayersChange(t,i),Fe))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:i,dataPreloadedInLocalCache:a,initializationLinkChartConfig:o}=e;return{url:t,title:i,dataPreloadedInLocalCache:a,initializationLinkChartConfig:o}}_initializeLayerProperties(e){var s,n,l,y;if(!this.title&&this.url){const p=this.url.split("/");this.title=p[p.length-2]}const t=new Set;let i=[],a=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new X("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");(s=e.inclusionModeDefinition)!=null&&s.generateAllSublayers?(i=e.knowledgeGraph.dataModel.entityTypes??[],a=e.knowledgeGraph.dataModel.relationshipTypes??[]):(n=e.inclusionModeDefinition)!=null&&n.namedTypeDefinitions&&((l=e.inclusionModeDefinition)==null?void 0:l.namedTypeDefinitions.size)>0?(y=e.inclusionModeDefinition)==null||y.namedTypeDefinitions.forEach((p,g)=>{var I,N;const f=this._graphTypeLookup.get(g);if(!f)return $.getLogger(this).warn(`A named type, ${g}, was in the inclusion list that wasn't in the data model and will be removed`),void((I=e.inclusionModeDefinition)==null?void 0:I.namedTypeDefinitions.delete(g));f.type==="relationship"?t.has(g)||(t.add(g),a.push(f)):f.type==="entity"?t.has(g)||(t.add(g),i.push(f)):($.getLogger(this).warn(`A named type, ${g}, was in the inclusion list that wasn't properly modeled and will be removed`),(N=e.inclusionModeDefinition)==null||N.namedTypeDefinitions.delete(g))}):(i=e.knowledgeGraph.dataModel.entityTypes??[],a=e.knowledgeGraph.dataModel.relationshipTypes??[]);const o=new Be({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=i,this.memberRelationshipTypes=a,this.dataManager=o}load(e){const t=async()=>{var o;const i=[],a=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await ge(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),(o=this.dataManager.inclusionModeDefinition)==null||o.namedTypeDefinitions.forEach(s=>{s.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(s=>{a.push(s.refreshCachedQueryEngine()),i.push(new Promise(n=>{s.on("layerview-create",()=>{n(null)})}))}),this.tables.forEach(s=>{a.push(s.refreshCachedQueryEngine())}),await Promise.all(a)};return this.addResolvingPromise(new Promise(i=>{st(this.url).then(async a=>{var s,n,l,y,p,g,f,I,N,M;(s=a.dataModel.entityTypes)==null||s.forEach(m=>{m.name&&this._graphTypeLookup.set(m.name,m)}),(n=a.dataModel.relationshipTypes)==null||n.forEach(m=>{m.name&&this._graphTypeLookup.set(m.name,m)});const o=(l=this.linkChart)==null?void 0:l.linkChartProperties;if((o==null?void 0:o.originIdOf("entitiesUrl"))===J.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await Ue.fetchAndConvertSerializedLinkChart({entitiesUrl:o==null?void 0:o.entitiesUrl,relationshipsUrl:o==null?void 0:o.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(a.dataModel),this.initializationLinkChartConfig={layoutSettings:(o==null?void 0:o.layoutSettings)??void 0,layoutMode:je(o.layoutType)}),this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),(p=(y=this.dataManager.inclusionModeDefinition)==null?void 0:y.namedTypeDefinitions)!=null&&p.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},(g=this.dataManager.knowledgeGraph.dataModel.entityTypes)==null||g.forEach(m=>{var _;m.name&&((_=this.dataManager.inclusionModeDefinition)==null||_.namedTypeDefinitions.set(m.name,{useAllData:!0}))}),(f=this.dataManager.knowledgeGraph.dataModel.relationshipTypes)==null||f.forEach(m=>{var _;m.name&&((_=this.dataManager.inclusionModeDefinition)==null||_.namedTypeDefinitions.set(m.name,{useAllData:!0}))})),this.dataPreloadedInLocalCache){const m=Qe.getInstance();for(const[_,F]of((I=this.dataManager.inclusionModeDefinition)==null?void 0:I.namedTypeDefinitions)??[])for(const L of((N=F.members)==null?void 0:N.values())??[]){const ae=m.readFromStoreById(`${_}__${L.id}`);ae&&W(this.dataManager.sublayerCaches,_,()=>new Map).set(L.id,ae)}await t()}else{const m=((M=this.initializationLinkChartConfig)==null?void 0:M.layoutMode)==="geographic-organic-standard";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,m,!0).then(async()=>{Z(e),await t()}))}i(null)})})),Promise.resolve(this)}set initializationInclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("initializationInclusionModeDefinition",e):$.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let i=[];t!=null&&t.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(i=await We(e,this.dataManager.knowledgeGraph));const a=e.concat(i).filter(o=>{var s;return!((s=this.sublayerIdsCache.get(o.typeName))!=null&&s.has(o.id))});a.length>0&&(this.membershipModified=!0),await this._handleNewRecords(a,t)}async createSublayerForNamedType(e){var a,o;await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new X("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new X("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),W(this.sublayerIdsCache,e,()=>new Set);const i=this._createSublayer(t);return t.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),(o=(a=this.dataManager.inclusionModeDefinition)==null?void 0:a.namedTypeDefinitions)==null||o.set(e,{useAllData:!1,members:new Map}),i.geometryType?this.layers.push(i):this.tables.push(i),await ge(this,[e]),this._refreshNamedTypes(),i}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:i=!1,overrideMembershipCheck:a=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){var l,y,p,g,f,I,N,M;let o=[];for(const m of e)(a||((p=(y=(l=this.dataManager.inclusionModeDefinition)==null?void 0:l.namedTypeDefinitions)==null?void 0:y.get(m.typeName))==null?void 0:p.useAllData)===!1&&((N=(I=(f=(g=this.dataManager.inclusionModeDefinition)==null?void 0:g.namedTypeDefinitions)==null?void 0:f.get(m.typeName))==null?void 0:I.members)!=null&&N.has(m.id)))&&o.push(m);if(t){const m=new Set,_=[];for(const F of o)if(this.dataManager.nodeConnectionsLookup.has(F.id))for(const L of this.dataManager.nodeConnectionsLookup.get(F.id))m.add(L);for(const F of m)if(this.dataManager.memberIdTypeLookup.has(F))for(const L of this.dataManager.memberIdTypeLookup.get(F))this.dataManager.relationshipTypeNames.has(L)&&_.push({id:F,typeName:L});o=o.concat(_)}this.dataManager.removeFromLayer(o);for(const m of o)(M=this.sublayerIdsCache.get(m.typeName))==null||M.delete(m.id),this.dataManager.relationshipTypeNames.has(m.typeName)?this.relationshipLinkChartDiagramLookup.delete(m.id):this.entityLinkChartDiagramLookup.delete(m.id);const s=i?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:s}),o.length>0&&(this.membershipModified=!0);const n=[];return this.layers.forEach(m=>{n.push(m.refreshCachedQueryEngine())}),await Promise.all(n),this._refreshNamedTypes(),o}async expand(e,t){let i=[];try{const a=await this.dataManager.getConnectedRecordIds(e,t==null?void 0:t.relationshipTypeNames,t);i=a.filter(o=>{var s;return!((s=this.sublayerIdsCache.get(o.typeName))!=null&&s.has(o.id))}),await this._handleNewRecords(i,t),a.length>0&&(this.membershipModified=!0),Z(t==null?void 0:t.signal)}catch(a){throw me(a)&&i.length>0&&await this.removeRecords(i,{overrideMembershipCheck:!0}),a}return{records:i}}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||this.originIdOf("tables")===J.DEFAULTS?this.originIdOf("layers")===J.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers):this.layers=new K,this.tables.length||this.originIdOf("layers")===J.DEFAULTS?this.originIdOf("tables")===J.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables):this.tables=new K,(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((a,o)=>{var n;const s=W(this.sublayerIdsCache,o,()=>new Set);(n=a.members)==null||n.forEach(({id:l,linkChartLocation:y})=>{if(s.add(l),y){const p="coords"in y&&"lengths"in y?y:ee(y);this.dataManager.relationshipTypeNames.has(o)?this.relationshipLinkChartDiagramLookup.set(l,p):this.entityLinkChartDiagramLookup.set(l,p)}})})}async calculateLinkChartLayout(e="organic-standard",t){var Me,ke,Ce,Te,Ne,De,ve;const i=[],a=[],o=[];this.dataManager.sublayerCaches.forEach((r,h)=>{this.dataManager.entityTypeNames.has(h)?r.forEach(c=>{i.push({typeName:h,feature:c})}):this.dataManager.relationshipTypeNames.has(h)&&r.forEach(c=>{a.push({typeName:h,feature:c})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const s=new Map,n=new Map,l=new Map,y=new Map,p=new Uint8Array(i.length),g=new Float64Array(i.length),f=new Float64Array(i.length),I=new Float64Array(i.length),N=new Float64Array(i.length),M=new Uint32Array(a.length),m=new Uint32Array(a.length),_=new Float64Array(a.length),F=new Float64Array(a.length),L=[],ae="organic-standard";let fe=!1;const x=new xe({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let H,be="organic-standard",b=0,S=0;const _e=He.apply;switch(be=e==="geographic-organic-standard"?ae:e,be){case"organic-standard":H=Ye.apply;break;case"organic-community":H=Xe.apply;break;case"hierarchical-bottom-to-top":H=Ke.apply;break;case"radial-root-centric":H=Je.apply;break;case"tree-left-to-right":H=qe.apply;break;default:H=Ve.apply}let le=!1;i.forEach(({typeName:r,feature:h})=>{var c,A,R,w,z;if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"&&((c=t==null?void 0:t.lockedNodeLocations)!=null&&c.has(h.attributes[v]))){e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(r)?p[b]=j.IsGeographic:p[b]=j.None;const d=t.lockedNodeLocations.get(h.attributes[v]);g[b]=d.x,f[b]=d.y}else if(e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(r)){p[b]=j.IsGeographic;let d=null;const C=h.attributes[this.dataManager.geographicLookup.get(r).name];switch((A=this.dataManager.geographicLookup.get(r))==null?void 0:A.geometryType){case"esriGeometryPoint":g[b]=C==null?void 0:C.x,f[b]=C==null?void 0:C.y;break;case"esriGeometryPolygon":d=C==null?void 0:C.centroid,(d==null?void 0:d.x)!=null&&(d==null?void 0:d.y)!=null?(g[b]=d.x,f[b]=d.y):p[b]=j.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":d=(R=C==null?void 0:C.extent)==null?void 0:R.center,(d==null?void 0:d.x)!=null&&(d==null?void 0:d.y)!=null?(g[b]=d.x,f[b]=d.y):p[b]=j.IsMovable;break;default:p[b]=j.IsMovable}(g[b]==null||f[b]==null||Number.isNaN(g[b])||Number.isNaN(f[b]))&&(p[b]=j.IsMovable,g[b]=0,f[b]=0)}else if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){!le&&((w=t==null?void 0:t.lockedNodeLocations)!=null&&w.has(h.attributes[v]))&&(le=!0);const d=(z=t==null?void 0:t.timeInfoByTypeName)==null?void 0:z.get(r),C=d==null?void 0:d.startField,G=C&&(d!=null&&d.startField)?h.attributes[C]:null;I[b]=G?new Date(G).getTime():NaN;const B=d==null?void 0:d.endField,U=B&&(d!=null&&d.endField)?h.attributes[B]:null;N[b]=U?new Date(U).getTime():NaN,g[b]=0,f[b]=0,p[b]=j.IsMovable}else p[b]=j.IsMovable,g[b]=0,f[b]=0;y.set(h.attributes[v],b),L[b]={feature:h,typeName:r},b++}),le&&$.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let Le=!1;const he=new Map;a.forEach(r=>{var B;const h=r.feature.attributes[re],c=r.feature.attributes[se],A=y.get(h),R=y.get(c),w=(B=t==null?void 0:t.timeInfoByTypeName)==null?void 0:B.get(r.typeName),z=t!=null&&t.timeInfoByTypeName?w==null?void 0:w.startField:null,d=z?r.feature.attributes[z]:null,C=w==null?void 0:w.endField,G=C?r.feature.attributes[C]:null;if(A!==void 0&&R!==void 0){let U=h+"-"+c;e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(U=U+"-"+d+"-"+G);const V=he.get(U);(V==null?void 0:V.has(r.typeName))||(M[S]=A,m[S]=R,e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(_[S]=d?new Date(d).getTime():NaN,F[S]=G?new Date(G).getTime():NaN),V===void 0?he.set(U,new Map([[r.typeName,S]])):V.set(r.typeName,S),S++),o.push(r)}else Le=!0,this.relationshipLinkChartDiagramLookup.set(h,null)}),Le&&$.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const Se=this._validateOrganicLayoutSettings(e,(Me=t==null?void 0:t.layoutSettings)==null?void 0:Me.organicLayoutSettings),pe=this._convertValidatedOrganicSettingsToCalculationSettings(Se);await Ze();let Y=ne.Error,E=null;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){let r;({status:Y,links:E,graphics:r}=_e(()=>{var h;return((h=t==null?void 0:t.signal)==null?void 0:h.aborted)??!1},p,g,f,I,N,M.subarray(0,S),m.subarray(0,S),_.subarray(0,S),F.subarray(0,S),e==="chronological-multi-timeline",(ke=t==null?void 0:t.layoutSettings)==null?void 0:ke.chronologicalLayoutSettings)),Y===ne.Success&&(this.chronologicalAuxiliaryGraphics=r)}else({status:Y,links:E}=H(()=>{var r;return((r=t==null?void 0:t.signal)==null?void 0:r.aborted)??!1},p,g,f,M.subarray(0,S),m.subarray(0,S),pe.computationBudgetTime,pe.idealEdgeLengthMultiplier,pe.repulsionRadiusMultiplier));if(Z(t==null?void 0:t.signal),Y===ne.Error)throw new X("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(Y===ne.Canceled)throw Ge();for(let r=0;r<L.length;r++){if(f[r]>84.9999?f[r]=84.9999:f[r]<-84.9999&&(f[r]=-84.9999),g[r]>179.9999?g[r]=179.9999:g[r]<-179.9999&&(g[r]=-179.9999),L[r].feature.attributes[O]=new ye(g[r],f[r]),s.has(L[r].typeName)){const w=s.get(L[r].typeName);w==null||w.set(L[r].feature.attributes[v],L[r].feature)}else{const w=new Map;w.set(L[r].feature.attributes[v],L[r].feature),s.set(L[r].typeName,w)}l.set(L[r].feature.attributes[v],L[r].feature);const h=ee(L[r].feature.attributes[O]);this.entityLinkChartDiagramLookup.set(L[r].feature.attributes[v],L[r].feature.attributes[O]?h:null);const c=W(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,L[r].typeName,()=>({useAllData:!1,members:new Map}));W(c.members,L[r].feature.attributes[v],()=>({id:L[r].feature.attributes[v],linkChartLocation:void 0})).linkChartLocation=L[r].feature.attributes[O];const{x:A,y:R}=L[r].feature.attributes[O];fe?(x.xmin=Math.min(x.xmin,A),x.xmax=Math.max(x.xmax,A),x.ymin=Math.min(x.ymin,R),x.ymax=Math.max(x.ymax,R)):(x.xmin=A-1e-7,x.xmax=A+1e-7,x.ymin=R-1e-7,x.ymax=R+1e-7,fe=!0)}if(this.linkChartExtent.xmin=x.xmin,this.linkChartExtent.xmax=x.xmax,this.linkChartExtent.ymin=x.ymin,this.linkChartExtent.ymax=x.ymax,!E)throw new X("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const oe=new Map,de=new Map,ue=new Map,we=new Set;for(let r=0;r<o.length;r++){const h=[],c=o[r],A=c.feature.attributes[re],R=c.feature.attributes[se];let w=A+"-"+R;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){const u=(Ce=t==null?void 0:t.timeInfoByTypeName)==null?void 0:Ce.get(c.typeName),P=t!=null&&t.timeInfoByTypeName?u==null?void 0:u.startField:null,Q=P?c.feature.attributes[P]:null,q=u==null?void 0:u.endField;w+="-"+Q+"-"+(q?c.feature.attributes[q]:null)}const z=he.get(w).get(c.typeName),d=z===0?0:E==null?void 0:E.vertexEndIndex[z-1];if(!we.has(z)){if(we.add(z),E.types[z]===Ee.Recursive){const u=[E.vertices[2*d],E.vertices[2*d+1]],P=[E.vertices[2*(d+1)],E.vertices[2*(d+1)+1]],Q=[.5*(u[0]+P[0]),.5*(u[1]+P[1])],q=[Q[0]-u[0],Q[1]-u[1]],Re=[Q[0]+q[1],Q[1]-q[0]],ze=[Q[0]-q[1],Q[1]+q[0]];h.push(u),h.push(Re),h.push(P),h.push(ze),h.push(u)}else{if(E.types[z]!==Ee.Regular){$.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let u=d;u<E.vertexEndIndex[z];u++)h.push([E.vertices[2*u],E.vertices[2*u+1]])}if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"){const u=(Te=L[y.get(A)])==null?void 0:Te.feature.attributes[O],P=(Ne=L[y.get(R)])==null?void 0:Ne.feature.attributes[O];h[0][0]===u.x&&h[0][1]===u.y||(h[0]=[u.x,u.y]),h[h.length-1][0]===P.x&&h[h.length-1][1]===P.y||(h[h.length-1]=[P.x,P.y])}for(let u=1;u<h.length-1;u++)h[u][1]>85.5?h[u][1]=85.5:h[u][1]<-85.5&&(h[u][1]=-85.5),h[u][0]>179.9999?h[u][0]=179.9999:h[u][0]<-179.9999&&(h[u][0]=-179.9999);oe.has(w)?oe.get(w).push(h):oe.set(w,[h])}const C=oe.get(w);de.has(w)||(de.set(w,new Map),ue.set(w,new Map));const G=de.get(w),B=ue.get(w);G.has(c.typeName)||(G.set(c.typeName,C.shift()),B.set(c.typeName,0));const U=G.get(c.typeName);B.set(c.typeName,B.get(c.typeName)+1);const V=new Ie({paths:[U]});if(c.feature.attributes[O]=V,n.has(c.typeName)){const u=n.get(c.typeName);u==null||u.set(c.feature.attributes[v],c.feature)}else{const u=new Map;u.set(c.feature.attributes[v],c.feature),n.set(c.typeName,u)}l.set(c.feature.attributes[v],c.feature);const ce=ee(c.feature.attributes[O]);this.relationshipLinkChartDiagramLookup.set(c.feature.attributes[v],c.feature.attributes[O]?ce:null);const Ae=W(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,c.typeName,()=>({useAllData:!1,members:new Map}));W(Ae.members,c.feature.attributes[v],()=>({id:c.feature.attributes[v],linkChartLocation:void 0})).linkChartLocation=ce}for(const r of o)r.feature.attributes[it]=((De=ue.get(r.feature.attributes[re]+"-"+r.feature.attributes[se]))==null?void 0:De.get(r.typeName))??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:(ve=t==null?void 0:t.layoutSettings)==null?void 0:ve.clone()},{nodes:s,links:n,idMap:l}}async applyNewLinkChartLayout(e="organic-standard",t){const i=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach(a=>{i.push(a.refreshCachedQueryEngine())}),this.membershipModified=!0,await Promise.all(i),this._refreshNamedTypes()}getCurrentNodeLocations(){var t,i;const e=new Map;for(const[a,o]of((t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions.entries())??[])this.dataManager.relationshipTypeNames.has(a)||((i=o==null?void 0:o.members)==null||i.forEach(s=>{const n=s.linkChartLocation;let l;const y=s.id;n&&(l="x"in n?{x:n.x,y:n.y}:{x:n.coords[0],y:n.coords[1]},e.set(y,new ye({x:l.x,y:l.y})))}));return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach(i=>{t.push(i.refreshCachedQueryEngine())}),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let a=[];for(const o of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(o);s&&(a=a.concat(Array.from(s.keys())))}i=await this.dataManager.getRelationshipsBetweenNodes(e,a,t),await this._handleNewRecords(i,t),Z(t)}catch(a){throw me(a)&&this.removeRecords(i),a}return{records:i}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let a=[];for(const s of this.dataManager.relationshipTypeNames){const n=this.sublayerIdsCache.get(s);n&&(a=a.concat(Array.from(n.keys())))}let o=[];for(const s of this.dataManager.entityTypeNames){const n=this.sublayerIdsCache.get(s);n&&(o=o.concat(Array.from(n)))}i=await this.dataManager.getRelationshipsFromNodes(e,o,a,t),await this._handleNewRecords(i,t),i.length>0&&(this.membershipModified=!0),Z(t)}catch(a){throw me(a)&&this.removeRecords(i),a}return{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){var a;const i=new Map;this.layers.forEach(o=>{i.set(o.objectType.name,o.timeInfo)}),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:i,...t}),(a=this.linkChart)==null||a.handleChronologicalOverlay()}async _handleNewRecords(e,t){const i=new Set,a=[],o=this.layers.concat(this.tables);for(const n of e)this._graphTypeLookup.has(n.typeName)&&(o.some(l=>l.objectType.name===n.typeName)===!1&&(this.dataManager.sublayerCaches.set(n.typeName,new Map),i.add(n.typeName)),W(this.sublayerIdsCache,n.typeName,()=>new Set).add(n.id),a.push(n));this.dataManager.addToLayer(a);for(const n of i){const l=this._graphTypeLookup.get(n);if(l){const y=this._createSublayer(l);l.type==="entity"?this.dataManager.entityTypeNames.add(n):this.dataManager.relationshipTypeNames.add(n),y.geometryType?this.layers.push(y):this.tables.push(y)}}await ge(this,Array.from(i),t),await this.dataManager.refreshCacheContent(e.map(n=>n.id),void 0,void 0,void 0,t);const s={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[n,l]of this.entityLinkChartDiagramLookup.entries())l&&s.lockedNodeLocations.set(n,new ye(l.coords[0],l.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,s)}_createSublayers(e,t,i){e.forEach(a=>{const o=this._createSublayer(a);i(o)&&t.push(o),this._updateSublayerCaches(a)})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const a=e.find(o=>o.type===i.graphType&&o.name===i.graphTypeName);a&&(i.objectType=a,i.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))})}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=J.PORTAL_ITEM&&e<J.USER}async _initializeDiagram(){var e,t;this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?((t=(e=this.dataManager.inclusionModeDefinition)==null?void 0:e.namedTypeDefinitions)==null||t.forEach((i,a)=>{var o;(o=i==null?void 0:i.members)==null||o.forEach(s=>{const n=s.linkChartLocation;let l;const y=s.id;if(!n)return;l="x"in n?{x:n.x,y:n.y}:{x:n.coords[0],y:n.coords[1]};const p=ee(l);this.dataManager.relationshipTypeNames.has(a)?this.relationshipLinkChartDiagramLookup.set(y,p):this.entityLinkChartDiagramLookup.set(y,p),this.linkChartExtent.xmin>l.x&&(this.linkChartExtent.xmin=l.x),this.linkChartExtent.xmax<l.x&&(this.linkChartExtent.xmax=l.x),this.linkChartExtent.ymin>l.y&&(this.linkChartExtent.ymin=l.y),this.linkChartExtent.ymax<l.y&&(this.linkChartExtent.ymax=l.y)})}),this.memberRelationshipTypes.forEach(i=>{var a;i.name&&((a=this.dataManager.sublayerCaches.get(i.name))==null||a.forEach(o=>{const s=this.relationshipLinkChartDiagramLookup.get(o.attributes[re]),n=this.relationshipLinkChartDiagramLookup.get(o.attributes[se]);if(s&&n){const l=ee(new Ie({paths:[[[s.coords[0],s.coords[1]],[n.coords[0],n.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(o.attributes[v],l)}else this.relationshipLinkChartDiagramLookup.set(o.attributes[v],null)}))})):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const i=M=>typeof M=="number"&&!isNaN(M),a=M=>i(M)&&M>=1,o=M=>i(M)&&M>=1,s=M=>Object.values(ie).includes(M),n=M=>i(M)&&M>=0,l={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return l;const{computationBudgetTime:y,autoRepulsionRadius:p,repulsionRadiusMultiplier:g,absoluteIdealEdgeLength:f,multiplicativeIdealEdgeLength:I,idealEdgeLengthType:N}=t;return o(y)?l.computationBudgetTime=y:y&&$.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),l.autoRepulsionRadius=p,!p&&a(g)?l.repulsionRadiusMultiplier=g:p||(l.autoRepulsionRadius=!0,$.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),e==="geographic-organic-standard"&&(s(N)?l.idealEdgeLengthType=N:N!==void 0&&$.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),N==="absolute-value"&&n(f)?l.absoluteIdealEdgeLength=f:N==="absolute-value"&&f!==void 0?$.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):N==="multiplier"&&n(I)?l.multiplicativeIdealEdgeLength=I:N==="multiplier"&&I!==void 0&&$.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),l}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===ie.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===ie.ABSOLUTE&&(t===void 0?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new te({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach(i=>{i.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this}),e.on("after-remove",({item:i})=>{i.parent=null})],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){var o;const t=new Set((e.entityTypes??[]).map(s=>s.name).concat((e.relationshipTypes??[]).map(s=>s.name))),i=new Set((e.entityTypes??[]).map(s=>s.name)),a=new Set((e.relationshipTypes??[]).map(s=>s.name));if(this.layers){for(const n of this.layers)!n.graphType&&t.has(n.graphTypeName)&&(n.graphType=i.has(n.graphTypeName)?"entity":"relationship");const s=this.layers.filter(n=>t.has(n.graphTypeName)&&(n.graphType==="entity"?i.has(n.graphTypeName):a.has(n.graphTypeName)));this.setAtOrigin("layers",s,Pe(this.originIdOf("layers")))}else this.layers=new K;if(this.layers&&this._originalInclusionList){const s=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),n=((o=this.tables)==null?void 0:o.map(p=>p.graphTypeName))??[],l=this.layers.map(p=>p.graphTypeName).concat(n);for(const p of l)s.has(p)||this._originalInclusionList.namedTypeDefinitions.set(p,{useAllData:!1,members:new Map});const y=[];for(const p of this._originalInclusionList.namedTypeDefinitions.keys())l.includes(p)||($.getLogger(this).warn(`A named type, ${p}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),y.push(p));for(const p of y)this._originalInclusionList.namedTypeDefinitions.delete(p)}}};T([D(nt)],k.prototype,"url",void 0),T([D()],k.prototype,"dataPreloadedInLocalCache",void 0),T([D()],k.prototype,"initializationLinkChartConfig",void 0),T([D()],k.prototype,"membershipModified",void 0),T([D()],k.prototype,"dataManager",void 0),T([D()],k.prototype,"initializationInclusionModeDefinition",null),T([D()],k.prototype,"knowledgeGraph",void 0),T([D({type:K.ofType(te),json:{write:{ignoreOrigin:!0}}})],k.prototype,"layers",void 0),T([D({readOnly:!0})],k.prototype,"linkChart",null),T([D()],k.prototype,"entityLinkChartDiagramLookup",void 0),T([D()],k.prototype,"relationshipLinkChartDiagramLookup",void 0),T([D()],k.prototype,"linkChartExtent",void 0),T([D()],k.prototype,"memberEntityTypes",void 0),T([D()],k.prototype,"memberRelationshipTypes",void 0),T([D({type:["LinkChartLayer"]})],k.prototype,"operationalLayerType",void 0),T([D()],k.prototype,"sublayerIdsCache",void 0),T([D({type:K.ofType(te),json:{write:{ignoreOrigin:!0}}})],k.prototype,"tables",void 0),T([D({json:{read:!1}})],k.prototype,"type",void 0),T([D({json:{read:!1}})],k.prototype,"chronologicalAuxiliaryGraphics",void 0),k=T([Oe("esri.layers.LinkChartLayer")],k);const Ea=k;export{Ea as default};
