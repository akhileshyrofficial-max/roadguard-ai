import{c as o,m as h,d as M,u as S,s as f,aw as F,b as $,i as C,l as R,a3 as q}from"./Identifiable-_3rFZ1o6.js";import{r as E}from"./BitmapContainer-VJVQOq6k.js";import{S as U,u as V}from"./LayerView-DyDwgwDB.js";import{M as L}from"./ExportStrategy-CbQ59ezd.js";import{i as W}from"./RefreshableLayerView-GSOltMDM.js";import{a as z}from"./ExportWMSImageParameters-eyFOJIip.js";import{i as A}from"./timeSupport-gVZAI8mD.js";import"./index-BEHHhRxI.js";import"./enums-NCSMZWP1.js";import"./common-DQOJ18NT.js";import"./TileKey-upwcIO5W.js";import"./vec2-ChnYg_BJ.js";import"./Queue-CJjQn74K.js";import"./ReactiveMap-DptZZMoQ.js";import"./signal-R7pX2aet.js";import"./quickselect-QQC62dOK.js";import"./Query-Dp8boimB.js";import"./jsonUtils-Cc67rW5Z.js";import"./typeUtils-mxDsOnhk.js";import"./Field-Bopg3Spw.js";import"./fieldType-Pks4G8In.js";import"./Layer--GugXUPW.js";import"./WGLContainer-CidQwXho.js";import"./Utils-BG5m93IY.js";import"./enums-UBzvFP7O.js";import"./definitions-CASyCajO.js";import"./vec2f32-CaVKkSa6.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-Dv_NJ-sZ.js";import"./Texture-BILrrMzS.js";import"./memoryEstimations-BG_NSMOj.js";import"./MapView-DvC1rydD.js";import"./Cyclical-C1_PpBfH.js";import"./CollectionFlattener-kjXuGTXg.js";import"./workers-BcCT7nhd.js";import"./intl-Beb5GWXc.js";import"./number-7p_O6jwX.js";import"./projectionUtils-BdqPecQc.js";import"./TileInfo-CvSYzqJL.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BbJVeaDA.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-BZb3Zh99.js";import"./asyncUtils-CmphLL3n.js";import"./Map-BfsPAzzq.js";import"./Basemap-xdFWd_Ef.js";import"./loadAll-MI_JOpdU.js";import"./PortalItem-Dn4oT_Gd.js";import"./writeUtils-CFLt5Al1.js";import"./layerUtils-CFmFO8Du.js";import"./persistable-DdbzkEuJ.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-a1-4zqTB.js";import"./PolygonCollection-CMbOuNoO.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CEszlm-2.js";import"./TablesMixin-DOSIq3qh.js";import"./GraphicsCollection-csXasQht.js";import"./Graphic-q_7OAYHf.js";import"./PopupTemplate-B09IYibB.js";import"./fieldUtils-z3GG2R-H.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Buir9u-w.js";import"./SimpleMarkerSymbol-Drowg4jp.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-DNlIzH5i.js";import"./TextSymbol-keZwKiPd.js";import"./PictureMarkerSymbol-DlgeV3xL.js";import"./HeightModelInfo-C8sA4bKM.js";import"./timeZoneUtils-Cef7SfoB.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2f64-Cgb6qxNH.js";import"./normalizeUtils-BS0bJnzn.js";import"./normalizeUtilsCommon-Ca72SEzL.js";import"./utils-C73sopP7.js";import"./utils-UVgDzRJn.js";import"./mat3-CruJiiUv.js";import"./Scheduler-DH2YvKGe.js";import"./vec32-soPbwaVZ.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-DN-q3Lg0.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-BR-Ucixf.js";import"./vec3f32-WCVSSNPR.js";import"./Container-CcJYSbbJ.js";import"./parser-BgHAYnRY.js";import"./StyleDefinition-C4LQ4gTA.js";import"./enums-BPiq_WIC.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-scwmf_ir.js";import"./OptimizedFeature-C57xHwXW.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BitmapTechnique-xCyagY7Y.js";import"./GraphShaderModule-B0iY7h0y.js";import"./FramebufferObject-Dg06wJiA.js";import"./ShaderBuilder-CT-EKmsJ.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-CFPo0AVB.js";import"./bitmapUtils-DvN83-9m.js";import"./layerViewUtils-CSVHLqOP.js";const H=e=>{let t=class extends e{initialize(){this.exportImageParameters=new z({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var r;return A(this.layer,(r=this.view)==null?void 0:r.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(r,p){const{layer:m}=this;if(!r)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:m});const{popupEnabled:d}=m;if(!d)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const i=this.createFetchPopupFeaturesQuery(r);if(!i)return[];const{extent:a,width:s,height:n,x:c,y:l}=i;if(!(a&&s&&n))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:s,height:n});const g=await m.fetchFeatureInfo(a,s,n,c,l);return F(p),g}};return o([h()],t.prototype,"exportImageParameters",void 0),o([h({readOnly:!0})],t.prototype,"exportImageVersion",null),o([h()],t.prototype,"layer",void 0),o([h({readOnly:!0})],t.prototype,"timeExtent",null),t=o([M("esri.views.layers.WMSLayerView")],t),t};let u=class extends H(W(U(V))){constructor(){super(...arguments),this.bitmapContainer=new E}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch(t=>{$(t)||C.getLogger(this).error(t)})}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:r}=e;this.bitmapContainer=new E,this.container.addChild(this.bitmapContainer),this.strategy=new L({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:r}=this,{x:p,y:m}=e,{spatialReference:d}=t;let i,a=0,s=0;if(r.children.some(g=>{const{width:w,height:v,resolution:I,x:y,y:x}=g,P=y+I*w,b=x-I*v;return p>=y&&p<=P&&m<=x&&m>=b&&(i=new q({xmin:y,ymin:b,xmax:P,ymax:x,spatialReference:d}),a=w,s=v,!0)}),!i)return null;const n=i.width/a,c=Math.round((p-i.xmin)/n),l=Math.round((i.ymax-m)/n);return{extent:i,width:a,height:s,x:c,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,p){return this.layer.fetchImageBitmap(e,t,r,{timeExtent:this.timeExtent,...p})}};o([h()],u.prototype,"strategy",void 0),o([h()],u.prototype,"updating",void 0),u=o([M("esri.views.2d.layers.WMSLayerView2D")],u);const zr=u;export{zr as default};
