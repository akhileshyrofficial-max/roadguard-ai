import{V as u,L as f,e as n,l as p,f as h,a6 as w,c as y,d as _}from"./Identifiable-BjM0PfdN.js";import V from"./Graphic-C2Bnzy89.js";import{S as v,u as C}from"./LayerView-CLiTpaAu.js";import{t as c}from"./GraphicContainer-sBPYGhV3.js";import{O as g}from"./GraphicsView2D-3SzwPKyv.js";import"./index-CVvIVqY1.js";import"./PopupTemplate-CF36_3mn.js";import"./fieldUtils-Br-fPSxS.js";import"./jsonUtils-DBuABSQZ.js";import"./typeUtils-U-Zf11cK.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-CP9PJ8Sp.js";import"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-BrXqvn3i.js";import"./TextSymbol-DPyc43q3.js";import"./PictureMarkerSymbol-DOPylmLK.js";import"./Container-Dh4YuLhU.js";import"./MapView-XXhq0wAO.js";import"./Cyclical-B0bcmwRe.js";import"./CollectionFlattener-CiW0r4Pq.js";import"./workers-BNUpPbJD.js";import"./Queue-DILFUEQB.js";import"./intl-ByqrfC_d.js";import"./number-CsIuR4Me.js";import"./projectionUtils-D3_kHwH-.js";import"./TileInfo-gIGeOzNG.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-D4gVuCa_.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-DdU5IX8L.js";import"./asyncUtils-zc5DpkIL.js";import"./signal-CHoLd7Dm.js";import"./Map-C7AlwcQg.js";import"./Basemap-DEy_TBwO.js";import"./loadAll-tu8QdrIx.js";import"./PortalItem-5OKFVWCx.js";import"./writeUtils-DJnvrJq1.js";import"./layerUtils-CmDKJw7q.js";import"./persistable-Dy9UTZKT.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-B5tMzp3X.js";import"./PolygonCollection-CkOPuE2h.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-C8ai-EIY.js";import"./common-DQOJ18NT.js";import"./TablesMixin-N_koq_xq.js";import"./Layer-CUjb8Y3m.js";import"./GraphicsCollection-B9Sj62PJ.js";import"./HeightModelInfo-BaIW4m76.js";import"./timeZoneUtils-DMYcWBGI.js";import"./ReactiveMap-sVzP5DGX.js";import"./Query-duJofNa2.js";import"./Field-FVkerAtx.js";import"./fieldType-ClovGbuQ.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./enums-BuAlJCBy.js";import"./TileKey-DR2srngJ.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-DfEBCyY7.js";import"./normalizeUtilsCommon-Bp_cDVNc.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-COHy2lsX.js";import"./vec32-rHWgUfNj.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-I7zBxmlP.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-CKvAsRxn.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-CWer4Z2d.js";import"./parser-BAKViB6V.js";import"./layerViewUtils-BaHdVB92.js";import"./AGraphicContainer-3lbOG70M.js";import"./TechniqueInstance-D5uticL1.js";import"./UpdateTracking2D-D-BklBCo.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DwEGrxrA.js";import"./memoryEstimations-m6Z1UQ7X.js";import"./GeometryUtils-DZ7Gm0us.js";import"./enums-BPiq_WIC.js";import"./utils-Civwinu0.js";import"./defaultCIMValues-BrbaHf9c.js";import"./rasterizingUtils-DbYVqSTS.js";import"./floatRGBA-BCeZwSgH.js";import"./Rect-CUzevAry.js";import"./Utils-C7F0koJ1.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./defaults-DZVYugxa.js";import"./defaultsJSON-GKolV7NZ.js";import"./FramebufferObject-DxGXUHGJ.js";import"./ProgramTemplate-BJvNm4_p.js";import"./TileContainer-D3qnVZFx.js";import"./WGLContainer-BfNvqaHf.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4LQ4gTA.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CpHGKGMV.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-CD7SjxYe.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-vUIflZOb.js";import"./ShaderBuilder-CVhDmvmz.js";import"./BindType-BBwFZqyN.js";import"./utils-CYQStVwU.js";import"./constants-BFLErLYb.js";import"./lengthUtils-BDJ7rNGW.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-7OvtbouS.js";import"./FieldsIndex-CZ9IrKuX.js";import"./UnknownTimeZone-C7APdNSb.js";import"./OverrideHelper-Cpw4NAcE.js";import"./colorUtils-Da3inJZr.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-BVYrSaqO.js";import"./TimeOnly-BKNTMEoH.js";import"./enum-C-GuSG8G.js";import"./quantizationUtils-D70gL1s4.js";import"./AttributeStore-ChriEgvw.js";import"./labelUtils-NFOL2PSf.js";import"./diffUtils-B0wxD3C_.js";import"./queryUtils-BLXKDnEb.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CZ5VO20t.js";import"./normalizeUtilsSync-EBe9_AkK.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-DL7ak8y5.js";const d="sublayers",a="layerView",H=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const s=this._graphicsViewsFeatureCollectionMap.get(t);for(const o of e)!o.popupTemplate&&s.popupTemplate&&(o.popupTemplate=s.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof V?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):u.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(f);return e!=null&&e.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const s=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:s});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.addHandles([p(()=>e.visible,m=>o.container.visible=m,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],a)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(w(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(a);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const s=new c(this.view.featuresTilingScheme);s.fadeTransitionEnabled=!0;const o=new g({view:r,graphics:e.graphics,requestUpdateCallback:t,container:s});this.addHandles([e.on("graphic-update",o.graphicUpdateHandler),p(()=>e.visible,m=>o.container.visible=m,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],a),this.container.addChild(o.container),i.push(o)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(H.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=y([_("esri.views.2d.layers.MapNotesLayerView2D")],l);const ir=l;export{ir as default};
