import{T as Dt,s as Nt,n as Rt,i as Q,c as q,m as z,cz as Lt,d as Et,eX as mt,ar as jt,b1 as Gt,b5 as et,a3 as Ot,aw as qt,cm as Wt,eY as Ut}from"./Identifiable-BjM0PfdN.js";let $t=class{constructor(e=null,n=null,r=null){this.minValue=e,this.maxValue=n,this.noDataValue=r}};const zt=9999999e31,Xt=2e-7,Jt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function lt(t){return Jt[t]??[-34028234663852886e22,34028234663852886e22]}const Ht={u1:1,u2:1,u4:1,u8:1,s8:1,u16:2,s16:2,u32:4,s32:4,f32:4,f64:8,unknown:4,c64:16,c128:32};function Kt(t){return Ht[t]}function Ue(t){return Kt(t.pixelType)*t.bandCount}function $e(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function Yt(t){return((t==null?void 0:t.startsWith("s"))||(t==null?void 0:t.startsWith("u")))??!1}function Pe(t,e,n,r){let[l,s]=lt(n);const i=Yt(n);return i&&(l-=1e-5,s+=1e-5),i?n.startsWith("u")?Qt(t,e,r,[l,s]):Zt(t,e,r,[l,s]):te(t,e,r,[l,s])}function Te(t,e){for(let n=0;n<e.length;n++)e[n]&&isNaN(t[n])&&(e[n]=0,t[n]=0)}function Qt(t,e,n,r){const[l,s]=r;for(let i=0;i<e.length;i++)if(e[i]){const h=t[i];h<l||h>s?e[i]=0:n[i]=h+.5|0}}function Zt(t,e,n,r){const[l,s]=r;for(let i=0;i<e.length;i++)if(e[i]){const h=t[i];h<l||h>s?e[i]=0:n[i]=h+(h>0?.5:-.5)|0}}function te(t,e,n,r){const[l,s]=r;for(let i=0;i<e.length;i++)if(e[i]){const h=t[i];h<l||h>s?e[i]=0:n[i]=h}}function Ie(t,e,n){var f,d;if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:l,pixelType:s}=t,i=r[0].length,h=t.bandMasks??[],a=t.mask??new Uint8Array(i).fill(255),o=s==="f32"||s==="f64",u=lt(s);let c=!1;for(let m=0;m<r.length;m++){const g=typeof e=="number"?e:e[m];if(g==null)continue;const x=((f=l==null?void 0:l[m])==null?void 0:f.minValue)??u[0],k=((d=l==null?void 0:l[m])==null?void 0:d.maxValue)??u[1];if(x>g+Number.EPSILON||k<g-Number.EPSILON)continue;const A=h[m]||a.slice(),M=r[m],w=n==null?void 0:n.customFloatTolerance;if(o&&w!==0){let y=w;y||(y=Math.abs(g)>=zt?Xt*Math.abs(g):s==="f32"?2**-23:Number.EPSILON);for(let v=0;v<M.length;v++)A[v]&&Math.abs(M[v]-g)<y&&(M[v]=0,A[v]=0,a[v]=0,c=!0)}else for(let y=0;y<M.length;y++)A[y]&&M[y]===g&&(M[y]=0,A[y]=0,a[y]=0,c=!0);h[m]=A}if(c){const m=t.bandMasks||t.pixels.length>1?h:null;n!=null&&n.matchAllNoData?t.mask=m&&m.length>1?p(m):a:(t.bandMasks=m,t.mask=a)}function p(m){if(m.length<2)return m[0];const g=m[0].length,x=new Uint8Array(g).fill(0);for(let k=0;k<m.length;k++){const A=m[k];for(let M=0;M<g;M++)A[M]&&(x[M]=255)}return x}c&&"updateStatistics"in t&&t.updateStatistics()}var H;let F=H=class extends Dt{static createEmptyBand(t,e){return new(H.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let r=0;r<t.length;r++){const l=t[r];for(let s=0;s<e;s++)l[s]||(n[s]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Nt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new $t)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>ee(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=lt(t),r=this.pixels,l=this.width*this.height,s=r.length;let i,h,a;const o=[];for(let u=0;u<s;u++){a=H.createEmptyBand(t,l),i=r[u];for(let c=0;c<l;c++)h=i[c],a[c]=h>n?n:h<e?e:h;o.push(a)}this.pixels=o,this.pixelType=t}extractBands(t){var c;const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const r=e.length,l=t.some(p=>p>=e.length),s=r===t.length&&!t.some((p,f)=>p!==f);if(l||s)return this;const i=((c=this.bandMasks)==null?void 0:c.length)===r?t.map(p=>this.bandMasks[p]):void 0;let{mask:h,validPixelCount:a}=this;const{width:o,height:u}=this;return i!=null&&i.length&&(h=H.combineBandMasks(i),a=h.filter(p=>!!p).length),new H({pixelType:this.pixelType,width:o,height:u,mask:h,bandMasks:i,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map(p=>e[p]),statistics:n&&t.map(p=>n[p])})}clone(){const t=new H({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(r=>new Uint8Array(r)));const n=H.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Rt(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:l}=this;if(!t||!(l!=null&&l.length))return void Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,i,h,a;s=i=h=l[0],l.length>=3?(i=l[1],h=l[2]):l.length===2&&(i=l[1]);const o=new Uint32Array(t),u=this.width*this.height;if(s.length===u)if(e!=null&&e.length===u)if(n)for(a=0;a<u;a++){const c=e[a];if(c){const p=c/255;o[a]=r?c<<24|h[a]*p<<16|i[a]*p<<8|s[a]*p:c<<24|h[a]<<16|i[a]<<8|s[a]}}else for(a=0;a<u;a++)e[a]&&(o[a]=255<<24|h[a]<<16|i[a]<<8|s[a]);else for(a=0;a<u;a++)o[a]=255<<24|h[a]<<16|i[a]<<8|s[a];else Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!(e!=null&&e.length))return void Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let s=1,i=0,h=1;if(r&&r.length>0){for(const m of r)if(m.minValue!=null&&(i=Math.min(i,m.minValue)),m.maxValue!=null&&m.minValue!=null){const g=m.maxValue-m.minValue;h=Math.max(h,g)}s=255/h}else{let m=255;l==="s8"?(i=-128,m=127):l==="u16"?m=65535:l==="s16"?(i=-32768,m=32767):l==="u32"?m=4294967295:l==="s32"?(i=-2147483648,m=2147483647):l==="f32"?(i=-34e38,m=34e38):l==="f64"&&(i=-Number.MAX_VALUE,m=Number.MAX_VALUE),s=255/(m-i)}const a=new Uint32Array(t),o=this.width*this.height;let u,c,p,f,d;if(u=c=p=e[0],u.length!==o)return Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===o)for(f=0;f<o;f++)n[f]&&(a[f]=255<<24|(p[f]-i)*s<<16|(c[f]-i)*s<<8|(u[f]-i)*s);else for(f=0;f<o;f++)a[f]=255<<24|(p[f]-i)*s<<16|(c[f]-i)*s<<8|(u[f]-i)*s;else if(n!=null&&n.length===o)for(f=0;f<o;f++)d=(u[f]-i)*s,n[f]&&(a[f]=255<<24|d<<16|d<<8|d);else for(f=0;f<o;f++)d=(u[f]-i)*s,a[f]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!(e!=null&&e.length))return Q.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,l,s,i;r=l=s=e[0],e.length>=3?(l=e[1],s=e[2]):e.length===2&&(l=e[1]);const h=this.width*this.height;if(r.length!==h)return Q.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(n!=null&&n.length===h)for(i=0;i<h;i++)t[a++]=r[i],t[a++]=l[i],t[a++]=s[i],t[a++]=1&n[i];else for(i=0;i<h;i++)t[a++]=r[i],t[a++]=l[i],t[a++]=s[i],t[a++]=1}};function ee(t,e){let n=1/0,r=-1/0;const l=t.length;let s,i=0;if(e!=null)for(s=0;s<l;s++)e[s]&&(i=t[s],n=i<n?i:n,r=i>r?i:r);else for(s=0;s<l;s++)i=t[s],n=i<n?i:n,r=i>r?i:r;return new $t(n,r)}q([z({json:{write:!0}})],F.prototype,"width",void 0),q([z({json:{write:!0}})],F.prototype,"height",void 0),q([z({json:{write:!0}})],F.prototype,"pixelType",void 0),q([Lt("pixelType")],F.prototype,"castPixelType",null),q([z({json:{write:!0}})],F.prototype,"validPixelCount",void 0),q([z({json:{write:!0}})],F.prototype,"mask",void 0),q([z({json:{write:!0}})],F.prototype,"maskIsAlpha",void 0),q([z({json:{write:!0}})],F.prototype,"pixels",void 0),q([z()],F.prototype,"premultiplyAlpha",void 0),q([z({json:{write:!0}})],F.prototype,"statistics",void 0),q([z({json:{write:!0}})],F.prototype,"depthCount",void 0),q([z({json:{write:!0}})],F.prototype,"noDataValues",void 0),q([z({json:{write:!0}})],F.prototype,"bandMasks",void 0),F=H=q([Et("esri.layers.support.PixelBlock")],F);var gt,xt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(gt||(gt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(xt||(xt={}));const wt=9;function N(t){var e;return t!=null&&((e=t.pixels)==null?void 0:e.length)>0}function Be(t){var u;if(!(t!=null&&t.length)||t.some(c=>!N(c)))return null;if(t.length===1)return((u=t[0])==null?void 0:u.clone())??null;const e=t,{width:n,height:r,pixelType:l}=e[0];if(e.some(c=>c.width!==n||c.height!==r))return null;const s=e.map(({mask:c})=>c).filter(c=>c!=null);let i=null;s.length&&(i=new Uint8Array(n*r),i.set(s[0]),s.length>1&&Tt(s.slice(1),i));const h=[];e.forEach(({pixels:c})=>h.push(...c));const a=e.map(({statistics:c})=>c).filter(c=>c==null?void 0:c.length),o=[];return a.forEach(c=>o.push(...c)),new F({pixelType:l,width:n,height:r,mask:i,pixels:h,statistics:o.length?o:null})}function Se(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((a,o)=>a[0]-o[0]),r=n[0][0]<0?n[0][0]:0,l=Math.max(256,n[n.length-1][0]-r+1),s=new Uint8Array(4*l),i=[],h=n[0].length===5;if(l>65536)return n.forEach(a=>{i[a[0]-r]=h?a.slice(1):a.slice(1).concat([255])}),{indexed2DColormap:i,offset:r,alphaSpecified:h};if(t.fillUnspecified){let a=n[0];for(let o=a[0]-r,u=0;o<l;o++)s[4*o]=a[1],s[4*o+1]=a[2],s[4*o+2]=a[3],s[4*o+3]=h?a[4]:255,o===a[0]-r&&(a=u===n.length-1?a:n[++u])}else for(let a=0;a<n.length;a++){const o=n[a],u=4*(o[0]-r);s[u]=o[1],s[u+1]=o[2],s[u+2]=o[3],s[u+3]=h?o[4]:255}return{indexedColormap:s,offset:r,alphaSpecified:h}}function Fe(t,e){if(!N(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let l=n.mask;const s=n.width*n.height;if(r.length!==1)return t;const{indexedColormap:i,indexed2DColormap:h,offset:a,alphaSpecified:o}=e,u=r[0],c=new Uint8Array(u.length),p=new Uint8Array(u.length),f=new Uint8Array(u.length);let d,m=0;if(i){const g=i.length-1;if(l!=null)for(let x=0;x<s;x++)l[x]&&(m=4*(u[x]-a),m<a||m>g?l[x]=0:(c[x]=i[m],p[x]=i[m+1],f[x]=i[m+2],l[x]=i[m+3]));else{l=new Uint8Array(s);for(let x=0;x<s;x++)m=4*(u[x]-a),m<a||m>g?l[x]=0:(c[x]=i[m],p[x]=i[m+1],f[x]=i[m+2],l[x]=i[m+3]);n.mask=l}}else if(h)if(l!=null)for(let g=0;g<s;g++)l[g]&&(d=h[u[g]],c[g]=d[0],p[g]=d[1],f[g]=d[2],l[g]=d[3]);else{l=new Uint8Array(s);for(let g=0;g<s;g++)d=h[u[g]],c[g]=d[0],p[g]=d[1],f[g]=d[2],l[g]=d[3];n.mask=l}return n.pixels=[c,p,f],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=o,n}function Ce(t,e){if(!N(t))return null;const{pixels:n,mask:r}=t,l=n.length;let s=e.lut;const{offset:i}=e;s&&s[0].length===1&&(s=n.map(()=>s));const h=[],a=e.outputPixelType||"u8";for(let u=0;u<l;u++){const c=Pt(n[u],r,s[u],i||0,a);h.push(c)}const o=new F({width:t.width,height:t.height,pixels:h,mask:r,pixelType:a});return o.updateStatistics(),o}function Pt(t,e,n,r,l){const s=t.length,i=F.createEmptyBand(l,s);if(e)for(let h=0;h<s;h++)e[h]&&(i[h]=n[t[h]-r]);else for(let h=0;h<s;h++)i[h]=n[t[h]-r];return i}function Ve(t,e){if(!N(t))return null;const n=t.clone(),{pixels:r}=n,l=n.width*n.height,s=e.length,i=Math.floor(s/2),h=e[Math.floor(i)],a=r[0],o=new Uint8Array(l),u=new Uint8Array(l),c=new Uint8Array(l);let p=n.mask;const f=e[0].mappedColor.length===4;p||(p=new Uint8Array(l),p.fill(f?255:1),n.mask=p);for(let d=0;d<l;d++)if(p[d]){const m=a[d];let g=!1,x=i,k=h,A=0,M=s-1;for(;M-A>1;){if(m===k.value){g=!0;break}m>k.value?A=x:M=x,x=Math.floor((A+M)/2),k=e[Math.floor(x)]}g||(m===e[A].value?(k=e[A],g=!0):m===e[M].value?(k=e[M],g=!0):m<e[A].value?g=!1:m>e[A].value&&(m<e[M].value?(k=e[A],g=!0):M===s-1?g=!1:(k=e[M],g=!0))),g?(o[d]=k.mappedColor[0],u[d]=k.mappedColor[1],c[d]=k.mappedColor[2],p[d]=k.mappedColor[3]):o[d]=u[d]=c[d]=p[d]=0}return n.pixels=[o,u,c],n.mask=p,n.pixelType="u8",n.maskIsAlpha=f,n}function _e(t,e,n=!1){const l=new Float32Array(3*wt),s=e.length;for(let i=0;i<wt;i++)l[3*i]=t[2*i]??mt-1,l[3*i+1]=t[2*i+1]??mt,l[3*i+2]=e[i]??0,i<s&&(i>0&&(l[3*i]-=1e-5),t[2*i+1]!==t[2*i]&&(i<s-1||!n)&&(l[3*i+1]-=1e-5));return l}function De(t,e){if(!N(t))return null;const{width:n,height:r}=t,{inputRanges:l,outputValues:s,outputPixelType:i,noDataRanges:h,allowUnmatched:a,replacementValue:o,isLastInputRangeInclusive:u}=e,c=t.pixels[0],p=F.createEmptyBand(i,c.length),f=t.mask,d=new Uint8Array(n*r);f?d.set(f):d.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,g=l.map(w=>w-m);g[0]=l[0],g[g.length-1]=l[l.length-1]+(u?1e-6:0);const x=l.length/2,[k,A]=lt(i);for(let w=0;w<r;w++)for(let y=0;y<n;y++){const v=w*n+y;if(d[v]){const b=c[v];let T=!1;for(let P=x-1;P>=0;P--)if(b===l[2*P]||b>g[2*P]&&b<g[2*P+1]){p[v]=s[P],T=!0;break}T||(a?p[v]=b>A?A:b<k?k:o??b:d[v]=0)}}const M=h==null?void 0:h.length;if(M)for(let w=0;w<r;w++)for(let y=0;y<n;y++){const v=w*n+y;if(!f||f[v]){const b=c[v];for(let T=0;T<M;T+=2)if(b>=h[T]&&b<=h[T+1]){p[v]=0,d[v]=0;break}}}return new F({width:n,height:r,pixelType:i,pixels:[p],mask:d})}function yt(t,e,n,r){const l=n!=null&&n.length>=2?new Set(n):null,s=(n==null?void 0:n.length)===1?n[0]:null,i=!!(e!=null&&e.length);for(let h=0;h<t.length;h++)if(r[h]){const a=t[h];if(i){let o=!1;for(let u=0;u<e.length;u+=2)if(a>=e[u]&&a<=e[u+1]){o=!0;break}o||(r[h]=0)}r[h]&&(a===s||l!=null&&l.has(a))&&(r[h]=0)}}function kt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let l=!1;for(let s=0;s<t.length;s++)if(t[s][r]){l=!0;break}l||(e[r]=0)}}function Tt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let l=!1;for(let s=0;s<t.length;s++)if(t[s][r]===0){l=!0;break}l&&(e[r]=0)}}function Ne(t,e){if(!N(t))return null;const{width:n,height:r,pixels:l}=t,s=n*r,i=new Uint8Array(s);t.mask?i.set(t.mask):i.fill(255);const h=l.length,{includedRanges:a,noDataValues:o,outputPixelType:u,matchAll:c,lookups:p}=e;if(p){const f=[];for(let d=0;d<h;d++){const m=p[d],g=Pt(l[d],i,m.lut,m.offset||0,"u8");f.push(g)}f.length===1?i.set(f[0]):c?kt(f,i):Tt(f,i)}else if(c){const f=[];for(let d=0;d<h;d++){const m=new Uint8Array(s);m.set(i),yt(l[d],a==null?void 0:a.slice(2*d,2*d+2),o==null?void 0:o[d],m),f.push(m)}f.length===1?i.set(f[0]):kt(f,i)}else for(let f=0;f<h;f++)yt(l[f],a==null?void 0:a.slice(2*f,2*f+2),o==null?void 0:o[f],i);return new F({width:n,height:r,pixelType:u,pixels:l,mask:i})}function Re(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:l,noDataRanges:s,isLastInputRangeInclusive:i,outputPixelType:h}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const a=e.includes("16")?65536:256,o=e.includes("s")?-a/2:0,u=F.createEmptyBand(h,a),c=new Uint8Array(a);l&&c.fill(255);const[p,f]=lt(h);if(n!=null&&n.length&&(r!=null&&r.length)){const m=n.map(g=>g-1e-6);m[0]=n[0],i&&(m[m.length-1]=n[n.length-1]);for(let g=0;g<m.length;g++){const x=r[g]>f?f:r[g]<p?p:r[g],k=Math.ceil(m[2*g]-o),A=n[2*g+1]===n[2*g]?k:Math.floor(m[2*g+1]-o);for(let M=k;M<=A;M++)u[M]=x,c[M]=255}}if(s!=null&&s.length)for(let d=0;d<s.length;d++){const m=Math.ceil(s[2*d]-o),g=Math.floor(s[2*d+1]-o);for(let x=m;x<=g;x++)c[x]=0}return{lut:u,offset:o,mask:c}}function Le(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const r=t.includes("16")?65536:256,l=t.includes("s")?-r/2:0,s=new Uint8Array(r);if(e)for(let i=0;i<e.length;i++){const h=Math.ceil(e[2*i]-l),a=Math.floor(e[2*i+1]-l);for(let o=h;o<=a;o++)s[o]=255}else s.fill(255);if(n)for(let i=0;i<n.length;i++)s[n[i]-l]=0;return{lut:s,offset:l}}function ne(t,e,n,r,l,s,i,h){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:s<=r*e?0:s<r*e+e?s-r*e:e,xmax:l+i<=n*t?0:l+i<n*t+t?l+i-n*t:t,ymax:s+h<=r*e?0:s+h<r*e+e?s+h-r*e:e}}function Ee(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if((n==null?void 0:n.pixelBlock)==null)return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(r,l),i=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>s?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>s?d.extent.xmin-m.extent.xmin:0),h=Math.min.apply(null,i.map(d=>d.extent.xmin)),a=Math.min.apply(null,i.map(d=>d.extent.ymin)),o=Math.max.apply(null,i.map(d=>d.extent.xmax)),u=Math.max.apply(null,i.map(d=>d.extent.ymax)),c={x:Math.round((e.xmin-h)/r),y:Math.round((u-e.ymax)/l)},p={width:Math.round((o-h)/r),height:Math.round((u-a)/l)},f={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==i.length||c.x<0||c.y<0||p.width<f.width||p.height<f.height?null:{extent:e,pixelBlock:ie(i.map(d=>d.pixelBlock),p,{clipOffset:c,clipSize:f})}}function ct(t,e,n,r,l,s){const{width:i,height:h}=n.block,{x:a,y:o}=n.offset,{width:u,height:c}=n.mosaic,p=ne(i,h,r,l,a,o,u,c);let f=0,d=0;if(s){const m=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,g=i*s.resolutionX,x=s.startX+r*g;x<m&&x+g>m?d=s.rightPadding:x>=m&&(f=s.leftMargin-s.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const g=(l*h+m-o)*u+(r*i-a)+f,x=m*i;for(let k=p.xmin;k<p.xmax;k++)t[g+k]=e[x+k]}else for(let m=p.ymin;m<p.ymax;m++){const g=(l*h+m-o)*u+(r*i-a)+f;for(let x=p.xmin;x<p.xmax;x++)t[g+x]=e}}function ie(t,e,n={}){var P;const{clipOffset:r,clipSize:l,alignmentInfo:s,blockWidths:i}=n;if(i)return se(t,e,{blockWidths:i});const h=t.find($=>N($));if(h==null)return null;const a=l?l.width:e.width,o=l?l.height:e.height,u=h.width,c=h.height,p=e.width/u,f=e.height/c,d={offset:r||{x:0,y:0},mosaic:l||e,block:{width:u,height:c}},m=h.pixelType,g=F.getPixelArrayConstructor(m),x=h.pixels.length,k=[];let A,M;for(let $=0;$<x;$++){M=new g(a*o);for(let U=0;U<f;U++)for(let B=0;B<p;B++){const C=t[U*p+B];N(C)&&(A=C.pixels[$],ct(M,A,d,B,U,s))}k.push(M)}const w=t.some($=>$==null||$.mask!=null&&$.mask.length>0),y=t.some($=>($==null?void 0:$.bandMasks)&&$.bandMasks.length>1),v=w?new Uint8Array(a*o):void 0,b=y?[]:void 0;if(v){for(let $=0;$<f;$++)for(let U=0;U<p;U++){const B=t[$*p+U],C=B!=null?B.mask:null;ct(v,C??(B?255:0),d,U,$,s)}if(b)for(let $=0;$<x;$++){const U=new Uint8Array(a*o);for(let B=0;B<f;B++)for(let C=0;C<p;C++){const S=t[B*p+C],I=((P=S==null?void 0:S.bandMasks)==null?void 0:P[$])??(S==null?void 0:S.mask);ct(U,I??(S?255:0),d,C,B,s)}b.push(U)}}const T=new F({width:a,height:o,pixels:k,pixelType:m,bandMasks:b,mask:v});return T.updateStatistics(),T}function se(t,e,n){var g;const r=t.find(x=>x!=null);if(r==null)return null;const l=t.some(x=>x==null||!!x.mask),{width:s,height:i}=e,h=l?new Uint8Array(s*i):null,{blockWidths:a}=n,o=[],u=r.getPlaneCount(),c=F.getPixelArrayConstructor(r.pixelType);if(l)for(let x=0,k=0;x<t.length;k+=a[x],x++){const A=t[x];if(!N(A))continue;const M=A.mask;for(let w=0;w<i;w++)for(let y=0;y<a[x];y++)h[w*s+y+k]=M==null?255:M[w*A.width+y]}const p=t.some(x=>(x==null?void 0:x.bandMasks)&&x.bandMasks.length>1),f=p?[]:void 0,d=s*i;for(let x=0;x<u;x++){const k=new c(d),A=p?new Uint8Array(d):void 0;for(let M=0,w=0;M<t.length;w+=a[M],M++){const y=t[M];if(!N(y))continue;const v=y.pixels[x];if(v!=null){for(let b=0;b<i;b++)for(let T=0;T<a[M];T++)k[b*s+T+w]=v[b*y.width+T];if(A){const b=((g=y.bandMasks)==null?void 0:g[x])??y.mask;for(let T=0;T<i;T++)for(let P=0;P<a[M];P++)A[T*s+P+w]=b?b[T*y.width+P]:255}}}o.push(k),f&&A&&f.push(A)}const m=new F({width:s,height:i,mask:h,bandMasks:f,pixels:o,pixelType:r.pixelType});return m.updateStatistics(),m}function je(t,e,n){if(!N(t))return null;const{width:r,height:l}=t,s=e.x,i=e.y,h=n.width+s,a=n.height+i;if(s<0||i<0||h>r||a>l||s===0&&i===0&&h===r&&a===l)return t;t.mask||(t.mask=new Uint8Array(r*l));const o=t.mask;for(let u=0;u<l;u++){const c=u*r;for(let p=0;p<r;p++)o[c+p]=u<i||u>=a||p<s||p>=h?0:1}return t.updateStatistics(),t}function le(t){if(!N(t))return null;const e=t.clone(),{width:n,height:r,pixels:l}=t,s=l[0],i=e.pixels[0],h=t.mask;for(let a=2;a<r-1;a++){const o=new Map;for(let c=a-2;c<a+2;c++)for(let p=0;p<4;p++){const f=c*n+p;st(o,s[f],h?h[f]:1)}i[a*n]=Mt(o),i[a*n+1]=i[a*n+2]=i[a*n];let u=3;for(;u<n-1;u++){let c=(a-2)*n+u+1;st(o,s[c],h?h[c]:1),c=(a-1)*n+u+1,st(o,s[c],h?h[c]:1),c=a*n+u+1,st(o,s[c],h?h[c]:1),c=(a+1)*n+u+1,st(o,s[c],h?h[c]:1),c=(a-2)*n+u-3,rt(o,s[c],h?h[c]:1),c=(a-1)*n+u-3,rt(o,s[c],h?h[c]:1),c=a*n+u-3,rt(o,s[c],h?h[c]:1),c=(a+1)*n+u-3,rt(o,s[c],h?h[c]:1),i[a*n+u]=Mt(o)}i[a*n+u+1]=i[a*n+u]}for(let a=0;a<n;a++)i[a]=i[n+a]=i[2*n+a],i[(r-1)*n+a]=i[(r-2)*n+a];return e.updateStatistics(),e}function Mt(t){if(t.size===0)return 0;let e=0,n=-1,r=0;const l=t.keys();let s=l.next();for(;!s.done;)r=t.get(s.value),r>e&&(n=s.value,e=r),s=l.next();return n}function rt(t,e,n){if(n===0)return;const r=t.get(e);r===1?t.delete(e):t.set(e,r-1)}function st(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function It(t,e,n){let{x:r,y:l}=e;const{width:s,height:i}=n;if(r===0&&l===0&&i===t.height&&s===t.width)return t;const{width:h,height:a}=t,o=Math.max(0,l),u=Math.max(0,r),c=Math.min(r+s,h),p=Math.min(l+i,a);if(c<0||p<0||!N(t))return null;r=Math.max(0,-r),l=Math.max(0,-l);const{pixels:f}=t,d=s*i,m=f.length,g=[];for(let M=0;M<m;M++){const w=f[M],y=F.createEmptyBand(t.pixelType,d);for(let v=o;v<p;v++){const b=v*h;let T=(v+l-o)*s+r;for(let P=u;P<c;P++)y[T++]=w[b+P]}g.push(y)}const x=new Uint8Array(d),k=t.mask;for(let M=o;M<p;M++){const w=M*h;let y=(M+l-o)*s+r;for(let v=u;v<c;v++)x[y++]=k?k[w+v]:1}const A=new F({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:x});return A.updateStatistics(),A}function Bt(t,e=!0){if(!N(t))return null;const{pixels:n,width:r,height:l,mask:s,pixelType:i}=t,h=[],a=Math.round(r/2),o=Math.round(l/2),u=l-1,c=r-1;for(let f=0;f<n.length;f++){const d=n[f],m=F.createEmptyBand(i,a*o);let g=0;for(let x=0;x<l;x+=2)for(let k=0;k<r;k+=2){const A=d[x*r+k];if(e){const M=k===c?A:d[x*r+k+1],w=x===u?A:d[x*r+k+r],y=k===c?w:x===u?M:d[x*r+k+r+1];m[g++]=(A+M+w+y)/4}else m[g++]=A}h.push(m)}let p=null;if(s!=null){p=new Uint8Array(a*o);let f=0;for(let d=0;d<l;d+=2)for(let m=0;m<r;m+=2){const g=s[d*r+m];if(e){const x=m===c?g:s[d*r+m+1],k=d===u?g:s[d*r+m+r],A=m===c?k:d===u?x:s[d*r+m+r+1];p[f++]=g*x*k*A?1:0}else p[f++]=g}}return new F({width:a,height:o,pixelType:i,pixels:h,mask:p})}function Ge(t,e,n=0,r=!0){if(!N(t))return null;const{width:l,height:s}=e;let{width:i,height:h}=t;const a=new Map,o={x:0,y:0},u=1+n;let c=t;for(let p=0;p<u;p++){const f=Math.ceil(i/l),d=Math.ceil(h/s);for(let m=0;m<d;m++){o.y=m*s;for(let g=0;g<f;g++){o.x=g*l;const x=It(c,o,e);a.set(`${p}/${m}/${g}`,x)}}p<u-1&&(c=Bt(c,r)),i=Math.round(i/2),h=Math.round(h/2)}return a}function Oe(t){const{pixelBlock:e,tileSize:n,level:r,row:l,col:s,useBilinear:i}=t;if(!N(e))return null;const{width:h,height:a}=n,o=2**r,u=o*h,c=o*a;let p=It(e,{y:l*c,x:s*u},{width:u,height:c});if(!p)return null;for(let f=r;f>0;f--)p=Bt(p,i);return p}function St(t,e,n,r,l=0){const{width:s,height:i}=t,{width:h,height:a}=e,o=r.cols,u=r.rows,c=Math.ceil(h/o-.1/o),p=Math.ceil(a/u-.1/u);let f,d,m,g,x,k,A;const M=c*o,w=M*p*u,y=new Float32Array(w),v=new Float32Array(w),b=new Uint32Array(w),T=new Uint32Array(w);let P,$,U=0;for(let B=0;B<p;B++)for(let C=0;C<c;C++){f=12*(B*c+C),d=n[f],m=n[f+1],g=n[f+2],x=n[f+3],k=n[f+4],A=n[f+5];for(let S=0;S<u;S++){U=(B*u+S)*M+C*o,$=(S+.5)/u;for(let I=0;I<S;I++)P=(I+.5)/o,y[U+I]=(d*P+m*$+g)*s+l,v[U+I]=(x*P+k*$+A)*i+l,b[U+I]=Math.floor(y[U+I]),T[U+I]=Math.floor(v[U+I])}f+=6,d=n[f],m=n[f+1],g=n[f+2],x=n[f+3],k=n[f+4],A=n[f+5];for(let S=0;S<u;S++){U=(B*u+S)*M+C*o,$=(S+.5)/u;for(let I=S;I<o;I++)P=(I+.5)/o,y[U+I]=(d*P+m*$+g)*s+l,v[U+I]=(x*P+k*$+A)*i+l,b[U+I]=Math.floor(y[U+I]),T[U+I]=Math.floor(v[U+I])}}return{offsets_x:y,offsets_y:v,offsets_xi:b,offsets_yi:T,gridWidth:M}}function qe(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:l,offsets_y:s,gridWidth:i}=St(t,t,n,{rows:r[0],cols:r[1]}),{width:h,height:a}=t,o=new Float32Array(h*a),u=180/Math.PI;for(let c=0;c<a;c++)for(let p=0;p<h;p++){const f=c*i+p,d=c===0?f:f-i,m=c===a-1?f:f+i,g=l[d]-l[m],x=s[m]-s[d];if(isNaN(g)||isNaN(x))o[c*h+p]=90;else{let k=Math.atan2(x,g)*u;k=(360+k)%360,o[c*h+p]=k}}return o}function We(t,e,n,r,l="nearest"){if(!N(t))return null;l==="majority"&&(t=le(t));const{pixels:s,mask:i,bandMasks:h,pixelType:a}=t,o=t.width,u=t.height,c=F.getPixelArrayConstructor(a),p=s.length,{width:f,height:d}=e;let m=!1;for(let U=0;U<n.length;U+=3)n[U]===-1&&n[U+1]===-1&&n[U+2]===-1&&(m=!0);const{offsets_x:g,offsets_y:x,offsets_xi:k,offsets_yi:A,gridWidth:M}=St({width:o,height:u},e,n,r,l==="majority"?.5:0);let w;const y=(U,B,C,S)=>{const I=U instanceof Float32Array||U instanceof Float64Array?0:.5;for(let V=0;V<d;V++){w=V*M;for(let _=0;_<f;_++){if(g[w]<0||x[w]<0)U[V*f+_]=0;else if(S)U[V*f+_]=B[k[w]+A[w]*o];else{const E=Math.floor(g[w]),O=Math.floor(x[w]),R=Math.ceil(g[w]),G=Math.ceil(x[w]),W=g[w]-E,J=x[w]-O;if(!C||C[E+O*o]&&C[R+O*o]&&C[E+G*o]&&C[R+G*o]){const tt=(1-W)*B[E+O*o]+W*B[R+O*o],K=(1-W)*B[E+G*o]+W*B[R+G*o];U[V*f+_]=(1-J)*tt+J*K+I}else U[V*f+_]=B[k[w]+A[w]*o]}w++}}},v=[];let b;const T=(h==null?void 0:h.length)===p,P=[];for(let U=0;U<p;U++){if(T){const B=new Uint8Array(f*d);y(B,h[U],h[U],!0),P.push(B)}b=new c(f*d),y(b,s[U],T?h[U]:i,l==="nearest"||l==="majority"),v.push(b)}const $=new F({width:f,height:d,pixelType:a,pixels:v,bandMasks:T?P:void 0});if(i!=null)$.mask=new Uint8Array(f*d),y($.mask,i,i,!0);else if(m){$.mask=new Uint8Array(f*d);for(let U=0;U<f*d;U++)$.mask[U]=g[U]<0||x[U]<0?0:1}return $.updateStatistics(),$}const Z=new Map;Z.set("meter-per-second",1),Z.set("kilometer-per-hour",.277778),Z.set("knots",.514444),Z.set("feet-per-second",.3048),Z.set("mile-per-hour",.44704);const ft=180/Math.PI,pt=5,at=new jt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function dt(t,e){return Z.get(t)/Z.get(e)||1}function Ft(t){return(450-t)%360}function Ct(t,e="geographic"){const[n,r]=t,l=Math.sqrt(n*n+r*r);let s=Math.atan2(r,n)*ft;return s=(360+s)%360,e==="geographic"&&(s=Ft(s)),[l,s]}function re(t,e="geographic"){let n=t[1];e==="geographic"&&(n=Ft(n)),n%=360;const r=t[0];return[r*Math.cos(n/ft),r*Math.sin(n/ft)]}function ze(t,e,n,r="geographic"){if(!N(t)||n==null)return t;const l=e==="vector-magdir"?t.clone():At(t,e),s=l.pixels[1];for(let i=0;i<s.length;i++)s[i]=r==="geographic"?(s[i]+n[i]+270)%360:(s[i]+360-n[i])%360;return e==="vector-magdir"?l:At(l,"vector-magdir")}function At(t,e,n="geographic",r=1){if(!N(t))return t;const{pixels:l,width:s,height:i}=t,h=s*i,a=l[0],o=l[1],u=t.pixelType.startsWith("f")?t.pixelType:"f32",c=F.createEmptyBand(u,h),p=F.createEmptyBand(u,h);let f=0;for(let m=0;m<i;m++)for(let g=0;g<s;g++)e==="vector-uv"?([c[f],p[f]]=Ct([a[f],o[f]],n),c[f]*=r):([c[f],p[f]]=re([a[f],o[f]],n),c[f]*=r,p[f]*=r),f++;const d=new F({pixelType:u,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[c,p]});return d.updateStatistics(),d}function Xe(t,e,n=1){if(n===1||!N(t))return t;const r=t.clone(),{pixels:l,width:s,height:i}=r,h=l[0];l[1];let a=0;for(let o=0;o<i;o++)for(let u=0;u<s;u++)h[a]*=n,a++;return r.updateStatistics(),r}function Je(t,e,n,r,l){if(l==null||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const s=l.xmin,i=l.ymax,h=(t.xmax-t.xmin)/e*r,a=(t.ymax-t.ymin)/n*r,o=(h+a)/2;return t.xmin=s+Math.floor((t.xmin-s)/h)*h,t.xmax=s+Math.ceil((t.xmax-s)/h)*h,t.ymin=i+Math.floor((t.ymin-i)/a)*a,t.ymax=i+Math.ceil((t.ymax-i)/a)*a,{extent:t,width:Math.round(t.width/h),height:Math.round(t.height/a),resolution:o}}const oe=Vt(0,0,0);function Vt(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const l=r?-1:1,s=13*l,i=-7*l,h=-2*l,a=-16*l,o=21.75,[u,c]=j(0,e+s,n,o),[p,f]=j(t-5.5,e+i,n,o),[d,m]=j(t+5.5,e+i,n,o),[g,x]=j(t-1.5,e+h,n,o),[k,A]=j(t+1.5,e+h,n,o),[M,w]=j(t-1.5,e+a,n,o),[y,v]=j(t+1.5,e+a,n,o);return[u,c,p,f,g,x,k,A,d,m,M,w,y,v]}function ae(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,l=n?-1:1,s=5*l,i=20*l,h=25*l,a=45,o=0,u=0,c=2,p=0,f=c*l,d=n?1:-1,m=r/2*d;let[g,x]=[o+m,u-i],[k,A]=[g+c*d,x],[M,w]=[k-p*d,A+f],[y,v]=[o-m,u-h],[b,T]=[y+p*d,v-f],P=Math.ceil(t/pt),$=Math.floor(P/10);P-=8*$;const U=[],B=[];for(let W=0;W<P/2;W++,$--){$<=0&&P%2==1&&W===(P-1)/2&&(y=o,b=y+p*d,v=(v+x)/2,T=v-f);const[J,tt]=j(y,v,e,a);if($>0){const[K,nt]=j(k,v,e,a),[it,D]=j(g,x,e,a);U.push(K),U.push(nt),U.push(J),U.push(tt),U.push(it),U.push(D)}else{const[K,nt]=j(k,A,e,a),[it,D]=j(M,w,e,a),[L,ht]=j(b,T,e,a);B.push(J),B.push(tt),B.push(L),B.push(ht),B.push(it),B.push(D),B.push(K),B.push(nt)}v+=s,x+=s,A+=s,w+=s,T+=s}const[C,S]=j(o+m,u+i,e,a),I=(r/2+c)*d,[V,_]=j(o+I,u+i,e,a),[E,O]=j(o+m,u-h,e,a),[R,G]=j(o+I,u-h,e,a);return{pennants:U,barbs:B,shaft:[C,S,V,_,E,O,R,G]}}function j(t,e,n,r=1){const l=Math.sqrt(t*t+e*e)/r,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+s-n)%(2*Math.PI)]}const ot=[0,1,3,6,10,16,21,27,33,40,47,55,63],he=[0,.5,1,1.5,2],ce=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,r){const l=dt(r||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*l)break}else if(t<=e[s]*l)break;return Math.min(s-1,e.length-2)}function ue(t,e,n,r,l){let s=0;switch(e){case"beaufort_kn":s=Y(t,ot,"knots",n);break;case"beaufort_km":s=Y(t,ot,"kilometer-per-hour",n);break;case"beaufort_ft":s=Y(t,ot,"feet-per-second",n);break;case"beaufort_m":s=Y(t,ot,"meter-per-second",n);break;case"classified_arrow":s=Y(t,l??[],r,n);break;case"ocean_current_m":s=Y(t,he,"meter-per-second",n);break;case"ocean_current_kn":s=Y(t,ce,"knots",n)}return s}function fe(t,e){const{style:n,inputUnit:r,outputUnit:l,breakValues:s}=e,i=at.fromJSON(r),h=at.fromJSON(l),a=7*6,o=15;let u=0,c=0;const{width:p,height:f,mask:d}=t,m=t.pixels[0],g=t.pixels[1],x=d!=null?d.filter(w=>w>0).length:p*f,k=new Float32Array(x*a),A=new Uint32Array(o*x),M=e.invertDirection?Vt(0,0,0,!1):oe;for(let w=0;w<f;w++)for(let y=0;y<p;y++){const v=w*p+y;if(!d||d[w*p+y]){const b=(g[v]+360)%360/180*Math.PI,T=ue(m[v],n,i,h,s);for(let $=0;$<M.length;$+=2)k[u++]=(y+.5)/p,k[u++]=(w+.5)/f,k[u++]=M[$],k[u++]=M[$+1]+b,k[u++]=T,k[u++]=m[v];const P=7*(u/a-1);A[c++]=P,A[c++]=P+1,A[c++]=P+2,A[c++]=P+0,A[c++]=P+4,A[c++]=P+3,A[c++]=P+0,A[c++]=P+2,A[c++]=P+3,A[c++]=P+2,A[c++]=P+5,A[c++]=P+3,A[c++]=P+5,A[c++]=P+6,A[c++]=P+3}}return{vertexData:k,indexData:A}}const ut=[];function pe(t,e){if(ut.length===0)for(let f=0;f<30;f++)ut.push(ae(5*f,0,!e.invertDirection));const n=dt(at.fromJSON(e.inputUnit),"knots"),{width:r,height:l,mask:s}=t,i=t.pixels[0],h=t.pixels[1],a=6,o=[],u=[];let c=0,p=0;for(let f=0;f<l;f++)for(let d=0;d<r;d++){const m=f*r+d,g=i[m]*n;if((!s||s[f*r+d])&&g>=pt){const x=(h[m]+360)%360/180*Math.PI,{pennants:k,barbs:A,shaft:M}=ut[Math.min(Math.floor(g/5),29)];if(k.length+A.length===0)continue;let w=o.length/a;const y=(d+.5)/r,v=(f+.5)/l;for(let b=0;b<k.length;b+=2)o[c++]=y,o[c++]=v,o[c++]=k[b],o[c++]=k[b+1]+x,o[c++]=0,o[c++]=g;for(let b=0;b<A.length;b+=2)o[c++]=y,o[c++]=v,o[c++]=A[b],o[c++]=A[b+1]+x,o[c++]=0,o[c++]=g;for(let b=0;b<M.length;b+=2)o[c++]=y,o[c++]=v,o[c++]=M[b],o[c++]=M[b+1]+x,o[c++]=0,o[c++]=g;for(let b=0;b<k.length/6;b++)u[p++]=w,u[p++]=w+1,u[p++]=w+2,w+=3;for(let b=0;b<A.length/8;b++)u[p++]=w,u[p++]=w+1,u[p++]=w+2,u[p++]=w+1,u[p++]=w+2,u[p++]=w+3,w+=4;u[p++]=w+0,u[p++]=w+1,u[p++]=w+2,u[p++]=w+1,u[p++]=w+3,u[p++]=w+2,w+=4}}return{vertexData:new Float32Array(o),indexData:new Uint32Array(u)}}function de(t,e){let r=0,l=0;const{width:s,height:i,mask:h}=t,a=t.pixels[0],o=[],u=[],c=dt(at.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?pt:Number.MAX_VALUE;for(let f=0;f<i;f++)for(let d=0;d<s;d++){const m=a[f*s+d]*c;if((!h||h[f*s+d])&&m<p){for(let x=0;x<4;x++)o[r++]=(d+.5)/s,o[r++]=(f+.5)/i,o[r++]=x<2?-.5:.5,o[r++]=x%2==0?-.5:.5,o[r++]=0,o[r++]=m;const g=4*(r/24-1);u[l++]=g,u[l++]=g+1,u[l++]=g+2,u[l++]=g+1,u[l++]=g+2,u[l++]=g+3}}return{vertexData:new Float32Array(o),indexData:new Uint32Array(u)}}function He(t,e){return e.style==="simple_scalar"?de(t,e):e.style==="wind_speed"?pe(t,e):fe(t,e)}function Ke(t,e,n,r=[0,0],l=.5){const{width:s,height:i,mask:h}=t,[a,o]=t.pixels,[u,c]=r,p=Math.round((s-u)/n),f=Math.round((i-c)/n),d=p*f,m=new Float32Array(d),g=new Float32Array(d),x=new Uint8Array(d);for(let A=0;A<f;A++)for(let M=0;M<p;M++){let w=0;const y=A*p+M,v=Math.max(0,A*n+c),b=Math.max(0,M*n+u),T=Math.min(i,v+n),P=Math.min(s,b+n);for(let $=v;$<T;$++)for(let U=b;U<P;U++){const B=$*s+U;if(!h||h[B]){w++;const C=[a[B],o[B]],[S,I]=C;m[y]+=S,g[y]+=I}}if(w>=(T-v)*(P-b)*(1-l)){x[y]=1;const[$,U]=Ct([m[y]/w,g[y]/w]);m[y]=$,g[y]=U}else x[y]=0,m[y]=0,g[y]=0}const k=new F({width:p,height:f,pixels:[m,g],mask:x});return k.updateStatistics(),k}const X=()=>Q.getLogger("esri.views.2d.engine.flow.dataUtils"),me=10;async function Ye(t,e,n,r){const l=performance.now(),s=ge(e,n),i=performance.now(),h=we(e,s,n.width,n.height),a=performance.now(),o=ke(h),u=performance.now(),c=t==="Streamlines"?Me(o,me):Ae(o),p=performance.now();return et("esri-2d-profiler")&&(X().info("I.1","_createFlowFieldFromData (ms)",Math.round(i-l)),X().info("I.2","_getStreamlines (ms)",Math.round(a-i)),X().info("I.3","createAnimatedLinesData (ms)",Math.round(u-a)),X().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-u)),X().info("I.5","createFlowMesh (ms)",Math.round(p-l)),X().info("I.6","Mesh size (bytes)",c.vertexData.buffer.byteLength+c.indexData.buffer.byteLength)),await Promise.resolve(),qt(r),c}function ge(t,e){const n=ye(e.data,e.width,e.height,t.smoothing);return t.interpolate?(r,l)=>{const s=Math.floor(r),i=Math.floor(l);if(s<0||s>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const h=r-s,a=l-i,o=s,u=i,c=s<e.width-1?s+1:s,p=i<e.height-1?i+1:i,f=n[2*(u*e.width+o)],d=n[2*(u*e.width+c)],m=n[2*(p*e.width+o)],g=n[2*(p*e.width+c)],x=n[2*(u*e.width+o)+1],k=n[2*(u*e.width+c)+1];return[(f*(1-a)+m*a)*(1-h)+(d*(1-a)+g*a)*h,(x*(1-a)+n[2*(p*e.width+o)+1]*a)*(1-h)+(k*(1-a)+n[2*(p*e.width+c)+1]*a)*h]}:(r,l)=>{const s=Math.round(r),i=Math.round(l);return s<0||s>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+s)],n[2*(i*e.width+s)+1]]}}function xe(t,e,n,r,l,s,i,h,a){const o=[];let u=n,c=r,p=0,[f,d]=e(u,c);f*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(f*f+d*d);let g,x;o.push({x:u,y:c,t:p,speed:m});for(let k=0;k<t.verticesPerLine;k++){let[A,M]=e(u,c);A*=t.velocityScale,M*=t.velocityScale;const w=Math.sqrt(A*A+M*M);if(w<t.minSpeedThreshold)return o;const y=A/w,v=M/w;if(u+=y*t.segmentLength,c+=v*t.segmentLength,p+=t.segmentLength/w,Math.acos(y*g+v*x)>t.maxTurnAngle)return o;if(t.collisions){const b=Math.round(u*a),T=Math.round(c*a);if(b<0||b>i-1||T<0||T>h-1)return o;const P=s[T*i+b];if(P!==-1&&P!==l)return o;s[T*i+b]=l}o.push({x:u,y:c,t:p,speed:w}),g=y,x=v}return o}function we(t,e,n,r){const l=[],s=new Ut,i=1/Math.max(t.lineCollisionWidth,1),h=Math.round(n*i),a=Math.round(r*i),o=new Int32Array(h*a);for(let c=0;c<o.length;c++)o[c]=-1;const u=[];for(let c=0;c<r;c+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)u.push({x:p,y:c,sort:s.getFloat()});u.sort((c,p)=>c.sort-p.sort);for(const{x:c,y:p}of u)if(s.getFloat()<t.density){const f=xe(t,e,c,p,l.length,o,h,a,i);if(f.length<2)continue;l.push(f)}return l}function ye(t,e,n,r){if(r===0)return t;const l=Math.round(3*r),s=new Array(2*l+1);let i=0;for(let o=-l;o<=l;o++){const u=Math.exp(-o*o/(r*r));s[o+l]=u,i+=u}for(let o=-l;o<=l;o++)s[o+l]/=i;const h=new Float32Array(t.length);for(let o=0;o<n;o++)for(let u=0;u<e;u++){let c=0,p=0;for(let f=-l;f<=l;f++){if(u+f<0||u+f>=e)continue;const d=s[f+l];c+=d*t[2*(o*e+(u+f))],p+=d*t[2*(o*e+(u+f))+1]}h[2*(o*e+u)]=c,h[2*(o*e+u)+1]=p}const a=new Float32Array(t.length);for(let o=0;o<e;o++)for(let u=0;u<n;u++){let c=0,p=0;for(let f=-l;f<=l;f++){if(u+f<0||u+f>=n)continue;const d=s[f+l];c+=d*h[2*((u+f)*e+o)],p+=d*h[2*((u+f)*e+o)+1]}a[2*(u*e+o)]=c,a[2*(u*e+o)+1]=p}return a}function ke(t,e){const n=new Ut,r=t.reduce((a,o)=>a+o.length,0),l=new Float32Array(4*r),s=new Array(t.length);let i=0,h=0;for(const a of t){const o=i;for(const u of a)l[4*i]=u.x,l[4*i+1]=u.y,l[4*i+2]=u.t,l[4*i+3]=u.speed,i++;s[h++]={startVertex:o,numberOfVertices:a.length,totalTime:a[a.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:l,lineDescriptors:s}}function Me(t,e){const{lineVertices:r,lineDescriptors:l}=t;let s=0,i=0;for(const f of l)s+=2*f.numberOfVertices,i+=6*(f.numberOfVertices-1);const h=new Float32Array(s*9),a=new Uint32Array(i);let o=0,u=0;function c(){a[u++]=o-2,a[u++]=o,a[u++]=o-1,a[u++]=o,a[u++]=o+1,a[u++]=o-1}function p(f,d,m,g,x,k,A,M){const w=o*9;let y=0;h[w+y++]=f,h[w+y++]=d,h[w+y++]=1,h[w+y++]=m,h[w+y++]=k,h[w+y++]=A,h[w+y++]=g/2,h[w+y++]=x/2,h[w+y++]=M,o++,h[w+y++]=f,h[w+y++]=d,h[w+y++]=-1,h[w+y++]=m,h[w+y++]=k,h[w+y++]=A,h[w+y++]=-g/2,h[w+y++]=-x/2,h[w+y++]=M,o++}for(const f of l){const{totalTime:d,timeSeed:m}=f;let g=null,x=null,k=null,A=null,M=null,w=null;for(let y=0;y<f.numberOfVertices;y++){const v=r[4*(f.startVertex+y)],b=r[4*(f.startVertex+y)+1],T=r[4*(f.startVertex+y)+2],P=r[4*(f.startVertex+y)+3];let $=null,U=null,B=null,C=null;if(y>0){$=v-g,U=b-x;const S=Math.sqrt($*$+U*U);if($/=S,U/=S,y>1){let I=$+M,V=U+w;const _=Math.sqrt(I*I+V*V);I/=_,V/=_;const E=Math.min(1/(I*$+V*U),e);I*=E,V*=E,B=-V,C=I}else B=-U,C=$;B!==null&&C!==null&&(p(g,x,k,B,C,d,m,P),c())}g=v,x=b,k=T,M=$,w=U,A=P}p(g,x,k,-w,M,d,m,A)}return{vertexData:h,indexData:a}}function Ae(t){const{lineVertices:l,lineDescriptors:s}=t;let i=0,h=0;for(const S of s){const I=S.numberOfVertices-1;i+=4*I*2,h+=6*I*2}const a=new Float32Array(i*16),o=new Uint32Array(h);let u,c,p,f,d,m,g,x,k,A,M,w,y,v,b=0,T=0;function P(){o[T++]=b-8,o[T++]=b-7,o[T++]=b-6,o[T++]=b-7,o[T++]=b-5,o[T++]=b-6,o[T++]=b-4,o[T++]=b-3,o[T++]=b-2,o[T++]=b-3,o[T++]=b-1,o[T++]=b-2}function $(S,I,V,_,E,O,R,G,W,J,tt,K,nt,it){const D=b*16;let L=0;for(const ht of[1,2])for(const _t of[1,2,3,4])a[D+L++]=S,a[D+L++]=I,a[D+L++]=V,a[D+L++]=_,a[D+L++]=R,a[D+L++]=G,a[D+L++]=W,a[D+L++]=J,a[D+L++]=ht,a[D+L++]=_t,a[D+L++]=nt,a[D+L++]=it,a[D+L++]=E/2,a[D+L++]=O/2,a[D+L++]=tt/2,a[D+L++]=K/2,b++}function U(S,I){let V=k+M,_=A+w;const E=Math.sqrt(V*V+_*_);V/=E,_/=E;const O=k*V+A*_;V/=O,_/=O;let R=M+y,G=w+v;const W=Math.sqrt(R*R+G*G);R/=W,G/=W;const J=M*R+w*G;R/=J,G/=J,$(u,c,p,f,-_,V,d,m,g,x,-G,R,S,I),P()}function B(S,I,V,_,E,O){if(k=M,A=w,M=y,w=v,k==null&&A==null&&(k=M,A=w),d!=null&&m!=null){y=S-d,v=I-m;const R=Math.sqrt(y*y+v*v);y/=R,v/=R}k!=null&&A!=null&&U(E,O),u=d,c=m,p=g,f=x,d=S,m=I,g=V,x=_}function C(S,I){k=M,A=w,M=y,w=v,k==null&&A==null&&(k=M,A=w),k!=null&&A!=null&&U(S,I)}for(const S of s){u=null,c=null,p=null,f=null,d=null,m=null,g=null,x=null,k=null,A=null,M=null,w=null,y=null,v=null;const{totalTime:I,timeSeed:V}=S;for(let _=0;_<S.numberOfVertices;_++)B(l[4*(S.startVertex+_)],l[4*(S.startVertex+_)+1],l[4*(S.startVertex+_)+2],l[4*(S.startVertex+_)+3],I,V);C(I,V)}return{vertexData:a,indexData:o}}function bt(t,e){const n=e.pixels,{width:r,height:l}=e,s=new Float32Array(r*l*2),i=e.mask||new Uint8Array(r*l*2);if(e.mask||i.fill(255),t==="vector-uv")for(let h=0;h<r*l;h++)s[2*h]=n[0][h],s[2*h+1]=-n[1][h];else if(t==="vector-magdir")for(let h=0;h<r*l;h++){const a=n[0][h],o=Wt(n[1][h]),u=Math.cos(o-Math.PI/2),c=Math.sin(o-Math.PI/2);s[2*h]=u*a,s[2*h+1]=c*a}return{data:s,mask:i,width:r,height:l}}async function Qe(t,e,n,r,l,s){const i=performance.now(),h=Gt(e.spatialReference);if(!h){const M=await vt(t,e,n,r,l,s);return et("esri-2d-profiler")&&X().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-i)),et("esri-2d-profiler")&&X().info("I.9","Number of parts",1),M}const[a,o]=h.valid,u=o-a,c=Math.ceil(e.width/u),p=e.width/c,f=Math.round(n/c);let d=e.xmin;const m=[],g=performance.now();for(let M=0;M<c;M++){const w=new Ot({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(vt(t,w,f,r,l,s)),d+=p}const x=await Promise.all(m);et("esri-2d-profiler")&&X().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),et("esri-2d-profiler")&&X().info("I.9","Number of parts",x.length);const k={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let A=0;for(const M of x){for(let w=0;w<M.height;w++)for(let y=0;y<M.width;y++)A+y>=n||(k.data[2*(w*n+A+y)]=M.data[2*(w*M.width+y)],k.data[2*(w*n+A+y)+1]=M.data[2*(w*M.width+y)+1],k.mask[w*n+A+y]=M.mask[w*M.width+y]);A+=M.width}return et("esri-2d-profiler")&&X().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-i)),k}async function vt(t,e,n,r,l,s){var a;const i={requestProjectedLocalDirections:!0,signal:s};if(l!=null&&(i.timeExtent=l),t.type==="imagery"){await t.load({signal:s});const o=await t.internalFetchImage(e,n,r,i);return((a=o==null?void 0:o.pixelData)==null?void 0:a.pixelBlock)==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:bt(t.rasterInfo.dataType,o.pixelData.pixelBlock)}await t.load({signal:s});const h=await t.fetchPixels(e,n,r,i);return(h==null?void 0:h.pixelBlock)==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:bt(t.serviceRasterInfo.dataType,h.pixelBlock)}export{gt as A,je as B,wt as C,We as D,Ne as E,Re as F,Pt as G,De as H,Ge as I,_e as J,Ue as K,Le as M,Oe as R,Ke as S,ie as T,Ee as U,It as W,de as _,Qe as a,He as b,F as c,at as d,dt as e,At as f,Ie as g,$t as h,$e as i,qe as j,lt as k,Ct as l,Je as m,Fe as n,Ve as o,Xe as p,Ce as q,N as r,Ye as s,Se as t,ze as u,Te as v,Pe as w,Yt as x,Be as y,xt as z};
