import{ao as c,s as l,ax as s}from"./Identifiable-BjM0PfdN.js";import{p as m,n as g}from"./project-C5vea7jl.js";import"./index-CVvIVqY1.js";import"./jsonUtils-DBuABSQZ.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";async function f(e=null,a){var t,i;if(c.geometryServiceUrl)return c.geometryServiceUrl;if(!e)throw new l("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");let r;r="portal"in e?e.portal||s.getDefault():e,await r.load({signal:a});const o=(i=(t=r.helperServices)==null?void 0:t.geometry)==null?void 0:i.url;if(!o)throw new l("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");return o}async function d(e,a,r=null,o){const t=await f(r,o),i=new m({geometries:[e],outSpatialReference:a}),n=await g(t,i,{signal:o});if(n&&Array.isArray(n)&&n.length===1)return n[0];throw new l("internal:geometry-service-projection-failed","Geometry projection failed on service")}export{f as getGeometryServiceURL,d as projectGeometry};
