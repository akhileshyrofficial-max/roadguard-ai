import{x as v,f as u,l as S,a6 as w,cR as b,aw as d,aa as k,X as E,cQ as C,c as p,m,d as A}from"./Identifiable-BjM0PfdN.js";import{d as F}from"./asyncUtils-zc5DpkIL.js";import{t as P}from"./memoize-DmxaQ-k8.js";import{h as G}from"./UpdatingHandles-DdU5IX8L.js";import{Q as $,L as I,O}from"./projectionUtils-D3_kHwH-.js";import{a as R}from"./normalizeUtilsSync-EBe9_AkK.js";import{y as H}from"./typeUtils-U-Zf11cK.js";import{u as Z}from"./featureConversionUtils-CpHGKGMV.js";import{s as x}from"./OptimizedFeature-DwEGrxrA.js";import{u as z}from"./executeQueryForSnapping-BSpEOccw.js";import{f as L}from"./FeatureStore-EXi38vZF.js";import{L as M}from"./QueryEngine-DWOxZVgf.js";import{Z as W}from"./FieldsIndex-CZ9IrKuX.js";import{y as N}from"./elevationInfoUtils-BM_SdJ-M.js";import{A as y}from"./utils-D_8doFaG.js";import{E as q,y as T}from"./hitTestSelectUtils-CCAzSamd.js";import{o as j,i as J}from"./queryEngineUtils-BpMEWJuL.js";import{i as g,r as B,n as f}from"./symbologySnappingCandidates-DwWCDKTb.js";import{g as D}from"./Scheduler-COHy2lsX.js";import"./index-CVvIVqY1.js";import"./jsonUtils-DBuABSQZ.js";import"./normalizeUtilsCommon-Bp_cDVNc.js";import"./aaBoundingBox-BrXqvn3i.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./createFeatureId-BiB9j2WD.js";import"./memoryEstimations-m6Z1UQ7X.js";import"./normalizeUtils-DfEBCyY7.js";import"./utils-C83x6Enz.js";import"./utils-CFSOSud-.js";import"./queryUtils-BLXKDnEb.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CZ5VO20t.js";import"./BoundsStore-B1fVjK8I.js";import"./PooledRBush-B4LCWkmd.js";import"./quickselect-QQC62dOK.js";import"./optimizedFeatureQueryEngineAdapter-ClJLtXe8.js";import"./WhereClauseCache-BuABieav.js";import"./LRUCache-eBEVKbNU.js";import"./MemCache-CUhFgUMJ.js";import"./WhereClause-7iXLhdp7.js";import"./TimeOnly-BKNTMEoH.js";import"./enum-C-GuSG8G.js";import"./UnknownTimeZone-C7APdNSb.js";import"./fieldUtils-Br-fPSxS.js";import"./fieldType-ClovGbuQ.js";import"./QueryEngineCapabilities-CsRUnGk7.js";import"./quantizationUtils-D70gL1s4.js";import"./utils-1xiukG_a.js";import"./screenUtils-aQeO9QTD.js";import"./Layer-CUjb8Y3m.js";import"./heatmapUtils-CjJeZ5Pu.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./utils-Tapruk9m.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-C8ai-EIY.js";import"./number-CsIuR4Me.js";import"./timeZoneUtils-DMYcWBGI.js";import"./utils-DWhchCxl.js";import"./ClassBreaksDefinition-Cm5lpP7K.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-DVaRdC5O.js";import"./NormalizationBinParametersMixin-Crnd6wMH.js";import"./ElevationInfo-B2ksLwBj.js";import"./lengthUtils-BDJ7rNGW.js";import"./cimSymbolUtils-CQIuSP9Z.js";import"./utils-Civwinu0.js";import"./defaultCIMValues-BrbaHf9c.js";import"./enums-BPiq_WIC.js";import"./typeUtils-CP9PJ8Sp.js";import"./SimpleMarkerSymbol-D-X_CJ8B.js";import"./TextSymbol-DPyc43q3.js";import"./PictureMarkerSymbol-DOPylmLK.js";import"./Cyclical-B0bcmwRe.js";import"./quantityUtils-63xE9umB.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./vec32-rHWgUfNj.js";import"./projectVectorToVector-yd877UiC.js";import"./projectPointToVector-yyeyeVyg.js";import"./geodesicUtils-Cr-plA6M.js";import"./Query-duJofNa2.js";import"./Field-FVkerAtx.js";import"./MapView-XXhq0wAO.js";import"./CollectionFlattener-CiW0r4Pq.js";import"./workers-BNUpPbJD.js";import"./Queue-DILFUEQB.js";import"./intl-ByqrfC_d.js";import"./TileInfo-gIGeOzNG.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-D4gVuCa_.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./signal-CHoLd7Dm.js";import"./Map-C7AlwcQg.js";import"./Basemap-DEy_TBwO.js";import"./loadAll-tu8QdrIx.js";import"./PortalItem-5OKFVWCx.js";import"./writeUtils-DJnvrJq1.js";import"./layerUtils-CmDKJw7q.js";import"./persistable-Dy9UTZKT.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-B5tMzp3X.js";import"./PolygonCollection-CkOPuE2h.js";import"./TablesMixin-N_koq_xq.js";import"./GraphicsCollection-B9Sj62PJ.js";import"./Graphic-C2Bnzy89.js";import"./PopupTemplate-CF36_3mn.js";import"./HeightModelInfo-BaIW4m76.js";import"./ReactiveMap-sVzP5DGX.js";import"./ViewingMode-Chk7YAAL.js";import"./enums-BuAlJCBy.js";import"./TileKey-DR2srngJ.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-I7zBxmlP.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-CKvAsRxn.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-CWer4Z2d.js";import"./plane-D3quJIjf.js";import"./vectorStacks-DgNdV_6b.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-mLO_dKdC.js";import"./spatialReferenceEllipsoidUtils-BYFAq5u2.js";import"./RouteLayerInteraction-DD57Onr-.js";import"./GraphicsLayer-B5Y1O4UM.js";import"./BlendLayer-DF9cB_oM.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DU1z6yLO.js";import"./parser-BAKViB6V.js";import"./ScaleRangeLayer-YHoThhHM.js";import"./Stop-CYiQeHox.js";import"./networkEnums-BEjCt5UC.js";import"./geodeticLengthOperator-BlQK6vk8.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-DlAvmH7a.js";import"./lineSegment-CP3RFx1A.js";import"./VertexSnappingCandidate-0HKHxUB5.js";import"./PointSnappingHint-D6UoW0ie.js";const _="graphics-collections";let n=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const t=this.view;return t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d";if(!i||e.type==="map-notes")return g();const o=async(r,s)=>(await C(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(r,s);return g(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:t}=this,e=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return B(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?f(o,async(r,s)=>{const a=await t.whenLayerView(e);return d(s),a.queryForSymbologySnapping({candidates:r,spatialReference:t.spatialReference},s)}):f()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new G,this._memoizedMakeGetGroundElevation=P(J)}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],_)},u);const{view:t}=this,{layer:e}=this.layerSource;t!=null&&t.type==="3d"&&e.type!=="map-notes"&&t.elevationProvider&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{N(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),S(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),u),w(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i,coordinateHelper:{spatialReference:o}}=t,r=await b(this._mapSources(l=>this._fetchCandidatesForSource(l,t,e)));d(e);const s=this._memoizedMakeGetGroundElevation(this.view,o),a=r.flat().map(l=>j(l,s));return q(i,a),a}async _fetchCandidatesForSource(t,e,i){var h;const o=T({parameters:e,mode:((h=this.view)==null?void 0:h.type)??"2d"}),r=await z(t.queryEngine,o,i);d(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,e.coordinateHelper.spatialReference,i);d(i);const a=await this._symbologySnappingFetcher.fetch(s,i);d(i);const l=a.length===0?s:[...s,...a];return this._snappingElevationFilter.filter(o,l)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=F(async s=>{await $(t.map(a=>({source:a,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(t);for(const a of e.values())this._add(a)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},r=()=>k(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t){e.wkid!=null&&this._loadedWkids.add(e.wkid);const i=e.wkt2||e.wkt;i&&this._loadedWkts.add(i)}}_add(t){if(t.geometry==null||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=E.fromExtent(e));const i=this._ensureSource(e.type);if(i==null)return;const o=this._createOptimizedFeature(t.uid,e);o!=null&&(i.featureStore.add(o),y(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){if(t.wkid!=null&&this._loadedWkids.has(t.wkid))return!1;const e=t.wkt2||t.wkt;return(!e||!this._loadedWkts.has(e))&&!I(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=O(R(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=Z(o,this._hasZ,!1);return new x(r,{[c]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(e!=null)return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=H.toJSON(t),i=this._hasZ,o=new L({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new M({featureStore:o,fieldsIndex:W.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:e,hasM:!1,hasZ:i,featureIdInfo:{type:"object-id",fieldName:c},spatialReference:this.spatialReference,priority:D.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),y(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return e!=null&&s.push(t(e)),i!=null&&s.push(t(i)),o!=null&&s.push(t(o)),r!=null&&s.push(t(r)),s}};p([m()],n.prototype,"getGraphicsLayers",void 0),p([m({constructOnly:!0})],n.prototype,"layerSource",void 0),p([m({constructOnly:!0})],n.prototype,"spatialReference",void 0),p([m({constructOnly:!0})],n.prototype,"view",void 0),p([m({readOnly:!0})],n.prototype,"updating",null),p([m({readOnly:!0})],n.prototype,"availability",void 0),p([m()],n.prototype,"_hasZ",null),p([m()],n.prototype,"_snappingElevationAligner",null),p([m()],n.prototype,"_snappingElevationFilter",null),p([m()],n.prototype,"_symbologySnappingFetcher",null),p([m()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=p([A("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
