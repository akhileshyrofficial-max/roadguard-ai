import{V as u,L as f,e as n,l as p,f as h,a6 as w,c as y,d as _}from"./Identifiable-B58w9FD1.js";import V from"./Graphic-sBrqQAPW.js";import{S as v,u as C}from"./LayerView-CflW_wQo.js";import{t as c}from"./GraphicContainer-B4ixlDiW.js";import{O as g}from"./GraphicsView2D-CyykMSq1.js";import"./index-VFfT8Aji.js";import"./PopupTemplate-D_WeQBNh.js";import"./fieldUtils-5LubkA3t.js";import"./jsonUtils-rvWrjUVI.js";import"./typeUtils-BD6Rtzmx.js";import"./createFeatureId-BiB9j2WD.js";import"./typeUtils-Du36Z1Jr.js";import"./SimpleMarkerSymbol-B18xir4G.js";import"./screenUtils-aQeO9QTD.js";import"./aaBoundingBox-CGMzNzJN.js";import"./TextSymbol-C7i9ol-5.js";import"./PictureMarkerSymbol-D6pzvUP4.js";import"./Container-BtHpY2XJ.js";import"./MapView-xTo1x6Jl.js";import"./Cyclical-SUfr0Hlv.js";import"./CollectionFlattener-DpJZcuE9.js";import"./workers-BRuHQO5o.js";import"./Queue-CM5__kwh.js";import"./intl-BHHnlw1J.js";import"./number-kTr8sdcN.js";import"./projectionUtils-DsK_8mH5.js";import"./TileInfo-D4DTS484.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-MlcfH8Vy.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-Lv1GUel8.js";import"./asyncUtils-C5b0g4Vr.js";import"./signal-Cxu9Z1Kf.js";import"./Map-BQwbVliJ.js";import"./Basemap-BLSYwfav.js";import"./loadAll-CbqpgDCk.js";import"./PortalItem-DLsR4Y2a.js";import"./writeUtils-Bje94ctQ.js";import"./layerUtils-CAMu1s-2.js";import"./persistable-glrbGfu8.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-CXue4rJ6.js";import"./PolygonCollection-DoAtzYfB.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-CggL8WYf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-CnCDLfmO.js";import"./Layer-C63inyUN.js";import"./GraphicsCollection-CixPPU0K.js";import"./HeightModelInfo-DBDBaZ2u.js";import"./timeZoneUtils-DlgpSZrP.js";import"./ReactiveMap-D39lG9XE.js";import"./Query-B1Zd9wiX.js";import"./Field-BoWr0HZE.js";import"./fieldType-CgljAswg.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./enums-oVqQqnoy.js";import"./TileKey-DZRgo92L.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-DiYDtdl8.js";import"./normalizeUtilsCommon-BcGwSELE.js";import"./utils-DM3VuI_N.js";import"./utils-Kw6dbpdX.js";import"./mat3-CruJiiUv.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-BH9l6DUT.js";import"./vec32-BBi6eWk8.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-BXXxnW90.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-CcEg-3Il.js";import"./capabilities-Cggz07g5.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./Version-B0YYd6Ho.js";import"./parser-NZ6dFu80.js";import"./layerViewUtils-CVH0822Q.js";import"./AGraphicContainer-vW2U5EY5.js";import"./TechniqueInstance-iE4wc1kQ.js";import"./UpdateTracking2D-F8JbgN_O.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DFf7-Rrh.js";import"./memoryEstimations-ugfznLe2.js";import"./GeometryUtils-BFpPfjYL.js";import"./enums-BPiq_WIC.js";import"./utils-BM8mKO1R.js";import"./defaultCIMValues-BrbaHf9c.js";import"./rasterizingUtils-D6OowsbP.js";import"./floatRGBA-BQ7jCumf.js";import"./Rect-CUzevAry.js";import"./Utils-BklDQzCT.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./defaults-CXADZSqg.js";import"./defaultsJSON-GKolV7NZ.js";import"./FramebufferObject-BSWRnN9p.js";import"./ProgramTemplate-Aje1Ud3y.js";import"./TileContainer-DxYIfJB1.js";import"./WGLContainer-BDoDnL5o.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4LQ4gTA.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-De1fR0uF.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-CPqIPZhd.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-DzKjOYuG.js";import"./ShaderBuilder-Zhirjag-.js";import"./BindType-BBwFZqyN.js";import"./utils-Dpt2n9Oo.js";import"./constants-BFLErLYb.js";import"./lengthUtils-DEvA7X52.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BAVhxohG.js";import"./FieldsIndex-B99JmYLE.js";import"./UnknownTimeZone-BdyuEDG6.js";import"./OverrideHelper-CbnVTnJ6.js";import"./colorUtils-eX73JdBW.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-Cc_hp5dd.js";import"./TimeOnly-CBUwkOTd.js";import"./enum-CyvfDIjS.js";import"./quantizationUtils-ooNzAwDD.js";import"./AttributeStore-BAuXUiNx.js";import"./labelUtils-XzqWkuAo.js";import"./diffUtils-jeIEfUBl.js";import"./queryUtils-DGFW-0sq.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dd2Mh6SO.js";import"./normalizeUtilsSync-Dp8hnQC6.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-0ecwCeN_.js";const d="sublayers",a="layerView",H=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const s=this._graphicsViewsFeatureCollectionMap.get(t);for(const o of e)!o.popupTemplate&&s.popupTemplate&&(o.popupTemplate=s.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof V?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):u.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(f);return e!=null&&e.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const s=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:s});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.addHandles([p(()=>e.visible,m=>o.container.visible=m,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],a)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(w(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(a);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const s=new c(this.view.featuresTilingScheme);s.fadeTransitionEnabled=!0;const o=new g({view:r,graphics:e.graphics,requestUpdateCallback:t,container:s});this.addHandles([e.on("graphic-update",o.graphicUpdateHandler),p(()=>e.visible,m=>o.container.visible=m,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],a),this.container.addChild(o.container),i.push(o)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(H.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=y([_("esri.views.2d.layers.MapNotesLayerView2D")],l);const ir=l;export{ir as default};
