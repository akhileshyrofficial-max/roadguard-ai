import{e as v}from"./TechniqueType-CFPo0AVB.js";import{u as M}from"./screenUtils-aQeO9QTD.js";import{b as O,l as G,d as V}from"./UpdateTracking2D-D5YHt5xb.js";import{r as re}from"./rasterizingUtils-CdiTAUhT.js";import{o as j,w as we,G as Ie}from"./enums-BPiq_WIC.js";import{o as pe,N as $e,x as N,d as Q,O as ze,f as H,F as J,y as K,m as U,l as _e,s as Le,a as ee,b as Ae,t as Se,p as ge,u as De,T as Ee,k as ke,S as ye,c as Re,g as Ce,h as Te,i as Be,r as Fe,j as Oe,A as xe,n as We,P as S,q as Ge,v as Ve,w as je,z as Ze,B as qe,C as Xe,D as Ye,E as Ne,G as Qe,H as He,I as Je,J as Ke,K as Ue,L as et,M as tt,Q as st,R as rt,U as it,V as at,W as nt,X as ot,Y as ct,Z as lt}from"./PieChartMeshWriter-DnCRRp1U.js";import{t as E,a as k,s as ie}from"./definitions-CASyCajO.js";import{c as ht}from"./constants-BFLErLYb.js";import{c as ut}from"./libtess-B86nGuKR.js";import{f3 as mt,dX as W,L as R,n as dt,i as ft,s as pt}from"./Identifiable-_3rFZ1o6.js";import{M as Z,n as A,i as ae}from"./enums-NCSMZWP1.js";import{S as ne,o as b,B as oe,v as q,u as _t,l as ce}from"./vec2-ChnYg_BJ.js";import{r as C}from"./vec2f32-CaVKkSa6.js";import{n as $}from"./vec2f64-Cgb6qxNH.js";import{d as gt,l as le}from"./featureConversionUtils-scwmf_ir.js";import{e as X}from"./OptimizedFeature-C57xHwXW.js";import{a as he,b as ue,r as yt}from"./Utils-BG5m93IY.js";import{d as xt}from"./ArcadeExpression-u2IaIuRW.js";import{s as Pt}from"./AttributeStore-BDrrFxke.js";function te(d){let{pixelDimensions:e,texelDimensions:t,baseSize:n,referenceSize:r,strokeWidth:s,sizeRatio:i}=d;if(e||(e=d.sprite.sdf?[0,0]:[d.sprite.width,d.sprite.height]),t||(t=d.sprite.sdf?[0,0]:e),d.patternHeight!=null){const o=d.patternHeight/e[1];e[1]*=o,e[0]*=o}n===-1&&(n=e[1]),n=M(n),r=M(r),s=M(s);const a=(d.sprite.sdfDecodeCoeff??1)*i;return{...d,pixelDimensions:e,texelDimensions:t,baseSize:n,referenceSize:r,strokeWidth:s,sdfDecodeCoeff:a}}const Y=64,vt=64,Mt=2;let Pe=class extends pe{get vertexSpec(){return{createComputedParams:te,optionalAttributes:{zoomRange:ee,value1Position2Value2:Le,lineLength:_e},attributes:{id:U,bitset:K,pos:J,offset:H.marker,uv:ze.marker,animationPointerAndBaseSizeAndReferenceSize:Q,sizing:N,angle:$e}}}_write(e,t){const n=this.evaluatedMeshParams.sprite,{textureBinding:r}=n;e.recordStart(this.instanceId,this.attributeLayout,r);const s=t.getDisplayId();if(this.shift&&t.geometryType==="esriGeometryPolyline")this._writeParticles(e,t);else if(this.evaluatedMeshParams.placement!=null)this._writePlacedMarkers(e,t);else if(t.geometryType==="esriGeometryPolygon"){const i=t.readCentroidForDisplay();if(!i)return;const[a,o]=i.coords;this._writeQuad(e,s,a,o)}else if(t.geometryType==="esriGeometryPoint"){const i=t.readXForDisplay(),a=t.readYForDisplay();this._writeQuad(e,s,i,a)}else{const i=t.readGeometryForDisplay();i&&i.forEachVertex((a,o)=>{this._writeQuad(e,s,a,o)})}e.recordEnd()}_writePlacedMarkers(e,t){var l;const n=(l=O.fromFeatureSetReaderCIM(t))==null?void 0:l.clone();if(!n)return;const r=-1,s=Ae.getPlacement(n,r,this.evaluatedMeshParams.placement,M(1),e.id,Se());if(!s)return;const i=t.getDisplayId();let a=s.next(),o=null;for(;a!=null;){const c=a.tx,p=-a.ty;if(Math.abs(c)>re||Math.abs(p)>re){a=s.next();continue}const h=-a.getAngle();e.recordBounds(c,p,Y,vt),this.shift?o&&this._writeQuad(e,i,o[0],o[1],void 0,h):this._writeQuad(e,i,c,p,void 0,h),o=[c,p],a=s.next()}}_writeParticles(e,t){const n=t.getDisplayId(),r=t.readGeometryForDisplay();if(!r)return;const s=[];r.forEachVertex((c,p)=>{s.push([c,p])});const i=bt(s);let a=0;for(let c=1;c<s.length;c++){const p=s[c][0]-s[c-1][0],h=s[c][1]-s[c-1][1],u=Math.sqrt(p*p+h*h);a+=u}const o=c=>{for(const p of i){const{a:h,b:u}=p;this._writeQuad(e,n,h.position[0],h.position[1],[h.distance-c,u.position[0],u.position[1],u.distance-c],this.evaluatedMeshParams.angleToLine?Math.atan2(h.direction[1],h.direction[0]):0,a,!0)}},{placement:l}=this.evaluatedMeshParams;if(!l||"placementTemplate"in l||l.type==="CIMMarkerPlacementOnVertices"){let c;if(l&&l.type!=="CIMMarkerPlacementOnVertices")c=l.placementTemplate;else{c=[0];for(const h of i){const{a:u,b:f}=h,m=u.position[0]-f.position[0],_=u.position[1]-f.position[1],g=Math.sqrt(m*m+_*_);c.push(g)}}let p=-1*a;for(;p<(1+Mt/2)*a;)for(const h of c)p+=h,o(p)}else l.type==="CIMMarkerPlacementAtExtremities"?l.extremityPlacement===j.JustBegin?o(1):l.extremityPlacement===j.JustEnd?(o(a-1),o(-1)):l.extremityPlacement===j.Both&&(o(1),o(a-1)):l.type==="CIMMarkerPlacementOnLine"&&o(a/2)}_writeQuad(e,t,n,r,s,i=0,a=0,o=!1){const l=this.evaluatedMeshParams.sprite,{rect:c}=l,p=c.x+E,h=c.y+E,u=c.x+c.width-E,f=c.y+c.height-E,m=e.vertexCount();o||e.recordBounds(n,r,Y,Y);const _={texXmin:p,texYmin:h,texXmax:u,texYmax:f,value1Position2Value2:s,angle:i/ht,lineLength:a};for(let g=0;g<4;g++)this._writeVertex(e,t,n,r,_);e.indexEnsureSize(6),e.indexWrite(m),e.indexWrite(m+1),e.indexWrite(m+2),e.indexWrite(m+1),e.indexWrite(m+3),e.indexWrite(m+2)}};function bt(d){const e=[];let t=0;for(let n=1;n<d.length;n++){const r=d[n-1],s=d[n],i=s[0]-r[0],a=s[1]-r[1],o=Math.sqrt(i*i+a*a),l=i/o,c=a/o;e.push({a:{position:r,distance:t,direction:[l,c]},b:{position:s,distance:t+o,direction:[l,c]}}),t+=o}return e}let wt=class extends Pe{constructor(){super(...arguments),this.shift=!1}},It=class extends Pe{constructor(){super(...arguments),this.shift=!0}},ve=class extends pe{_write(e,t,n){const r=n??O.fromFeatureSetReaderCIM(t);if(!r)return;const s=this.evaluatedMeshParams.sprite,{textureBinding:i}=s;e.recordStart(this.instanceId,this.attributeLayout,i);const a=t.getDisplayId();this._writePoly(e,a,r.asOptimized()),e.recordEnd()}},$t=class extends ve{constructor(){super(...arguments),this.vertexSpec={createComputedParams:te,attributes:{id:U,bitset:K,pos:J,offset:H.fill,tlbr:ye,animationPointerAndBaseSizeAndReferenceSize:Q,sizing:N},optionalAttributes:{zoomRange:ee,value1Position2Value2:ge,lineLength:Fe}}}_writePoly(e,t,n){const r=[];if(!Oe(r,n))return;const s=e.vertexCount();n.forEachVertex((i,a)=>{this._writeVertex(e,t,i,a)}),e.indexEnsureSize(r.length);for(const i of r)e.indexWrite(s+i)}},zt=class{constructor(){this.id=0,this.bitset=0,this.indexCount=0,this.vertexCount=0,this.vertexFrom=0,this.vertexBounds=0,this.pathLength=0}};const me=65535;class Lt extends ve{constructor(){super(...arguments),this.vertexSpec={createComputedParams:te,attributes:{id:U,bitset:K,pos:J,offset:H.line,tlbr:ye,animationPointerAndBaseSizeAndReferenceSize:Q,sizing:N,accumulatedDistance:ke,normal:Ee,segmentDirection:De},optionalAttributes:{zoomRange:ee,value1Position2Value2:ge,lineLength:_e}},this._tessParams=new Re,this._currentWrite=new zt,this._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0,wrapDistance:me,textured:!1},this._lineLength=0,this._lineTessellator=new ut((e,t,n,r,s,i,a,o,l,c,p)=>this._writeTesselatedVertex(e,t,n,r,s,i,a,o,l,c,p,this._lineLength),this._writeTriangle.bind(this),!1)}_writePoly(e,t,n){const i=Ce(O.fromOptimized(n,"esriGeometryPolyline"),64);if(i==null)return;const{_currentWrite:a,_tessellationOptions:o}=this,{baseSize:l,capType:c,joinType:p,miterLimit:h}=this.evaluatedMeshParams,u=M(.5*l);o.halfWidth=u,o.capType=Te(c||we.Round),o.joinType=Be(p||Ie.Round),o.miterLimit=h||2,a.out=e,a.id=t,a.vertexCount=0,a.indexCount=0,a.vertexFrom=e.vertexCount(),a.vertexBounds=1;for(const{line:f,start:m,pathLength:_}of i){o.initialDistance=m%me,a.pathLength=_,this._lineLength=0;for(let g=1;g<f.length;g++){const y=f[g].x-f[g-1].x,x=f[g].y-f[g-1].y;this._lineLength+=Math.sqrt(y*y+x*x)}this._lineTessellator.tessellate(f,o,!1)}}_writeTesselatedVertex(e,t,n,r,s,i,a,o,l,c,p,h){const{out:u,id:f,vertexBounds:m,pathLength:_}=this._currentWrite;return this.hasEffects&&u.recordBounds(e,t,m,m),this._tessParams.extrusionOffsetX=a,this._tessParams.extrusionOffsetY=o,this._tessParams.normalX=l,this._tessParams.normalY=c,this._tessParams.directionX=s,this._tessParams.directionY=i,this._tessParams.distance=p,this._tessParams.pathLength=_,this._tessParams.lineLength=h,this._writeVertex(u,f,e,t,this._tessParams),this._currentWrite.vertexFrom+this._currentWrite.vertexCount++}_writeTriangle(e,t,n){const{out:r}=this._currentWrite;r.indexEnsureSize(3),r.indexWrite(e),r.indexWrite(t),r.indexWrite(n),this._currentWrite.indexCount+=3}}const T=1,z=0,At=128;function St(d,e){return W(`${d}${e}`)}function Dt(d,e,t){return W(`${d}${e}${t}`)}function Et(d,e,t,n){return W(`${d}${e}${t*2**(S-n)}`)}function kt(d,e,t,n,r){return W(`${d}${r}${e}${t*2**(S-n)}`)}const Rt=mt(d=>{let e=0;if(d===0)return 1/0;for(;!(d%2);)e++,d/=2;return e});class Ct extends xe{constructor(){super(...arguments),this._zoomLevel=0}_write(e,t,n,r){if(this._zoomLevel=r||0,n!=null)throw new Error("InternalError: EffectGeometry not support for LabelMeshWriter");switch(t.geometryType){case"esriGeometryPoint":{const s=t.readXForDisplay(),i=t.readYForDisplay();this._writePoint(e,s,i,0,t);break}case"esriGeometryEnvelope":case"esriGeometryPolygon":{const s=t.readCentroidForDisplay();if(!s)return;const[i,a]=s.coords;this._writePoint(e,i,a,0,t);break}case"esriGeometryMultipoint":{let s=0;const i=O.fromFeatureSetReader(t);if(i!=null&&i.nextPath())for(;i.nextPoint();)this._writePoint(e,i.x,i.y,s++,t);break}case"esriGeometryPolyline":this._writeLines(e,t)}}_getMetricDir(){const{horizontalAlignment:e,verticalAlignment:t}=this.evaluatedMeshParams;return[e==="center"?0:e==="right"?-1:1,t==="middle"?0:t==="bottom"?-1:1]}_createLineLabelMetric(e,t,n,r,s,i){var h,u;const[a,o]=this._getMetricDir(),l=((h=this.evaluatedMeshParams.scaleInfo)==null?void 0:h.maxScale)??0,c=((u=this.evaluatedMeshParams.scaleInfo)==null?void 0:u.minScale)??0,p=this.evaluatedMeshParams.labelClassId;return new he(e,p,t,n,r,s,a,o,l,c,i)}_writePoint(e,t,n,r,s){var _,g;if(t<0||t>k||n<0||n>k)return;const i=this._getShaping();if(!i)return;const a=s.getDisplayId(),o=this.evaluatedMeshParams.labelClassId,l=St(s.getObjectId(),r),c=Dt(s.getObjectId(),o,r),[p,h]=this._getMetricDir(),u=((_=this.evaluatedMeshParams.scaleInfo)==null?void 0:_.maxScale)??0,f=((g=this.evaluatedMeshParams.scaleInfo)==null?void 0:g.minScale)??0,m=this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0};e.metricStart(new he(a,o,l,c,t,n,p,h,u,f,m)),this._writeGlyphs(e,a,t,n,i,0,m,void 0,!1),e.metricBoxWrite(i.boundsT),e.metricEnd()}_getPointReferenceBounds(){if(!this._references)return null;for(const e of this._references){const t=e.getBoundsInfo();if(t)return t}return null}_writeLines(e,t){const{scaleInfo:n,verticalAlignment:r}=this.evaluatedMeshParams,s=this.evaluatedMeshParams.repeatLabelDistance||128,i=this._getShaping("middle");if(!i)return;const a=(l,c,p,h)=>this._placeSubdivGlyphs(l,c,p,h),o=(i.bounds.width+s)/(1<<T);this._current={out:e,id:t.getDisplayId(),objId:t.getObjectId(),shaping:i,zoomRange:We(n,this.getTileInfo()),referenceBounds:this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0},offsetDirection:null,pathIndex:0},this._verticalPlacement=r==="bottom"?"above":r==="top"?"below":null,this._verticalPlacement?this._writeAboveAndBelowAlong(t,a,o):this._writeCenterAlong(t,a,o)}_writeAboveAndBelowAlong(e,t,n){const{repeatLabel:r}=this.evaluatedMeshParams,{shaping:s}=this._current,i=s.bounds.halfHeight,a=e.readGeometryForDisplay();if(!a)return;const o=new X;gt(o,a,!1,!1,"esriGeometryPolyline",1);const l=de(new X,o,i),c=de(new X,o,-i),p=le(c,"esriGeometryPolyline",!1,!1),h=le(l,"esriGeometryPolyline",!1,!1),u=G(h.paths,s.bounds.width),f=G(p.paths,s.bounds.width);this._current.offsetDirection="above";for(let m=0;m<u.length;m++)this._current.pathIndex=m,V(u[m],n,t,!!r);this._current.offsetDirection="below";for(let m=0;m<f.length;m++)this._current.pathIndex=m,V(f[m],n,t,!!r)}_writeCenterAlong(e,t,n){const{repeatLabel:r}=this.evaluatedMeshParams,{shaping:s}=this._current,i=G(e.readLegacyGeometryForDisplay().paths,s.bounds.width);for(let a=0;a<i.length;a++)this._current.pathIndex=a,V(i[a],n,t,!!r)}_placeSubdivGlyphs(e,t,n,r){const{allowOverrun:s,labelPosition:i,repeatLabelDistance:a}=this.evaluatedMeshParams,o=this._current.zoomRange[0],l=Rt(t),c=this._current.shaping.bounds.width/(1<<T),p=Math.sqrt(a||At)/(1<<T),h=Math.min(n,r-n),u=this._current.shaping.isMultiline?S:Math.log2(h/(p+c/2)),f=t===0?u:Math.min(l,u),m=Math.max(o,this._zoomLevel+T-f),_=this._zoomLevel-m,g=this._current.shaping.bounds.width/2*2**_,y=Et(this._current.objId,this._current.pathIndex,t,this._zoomLevel),x=kt(this._current.objId,this._current.pathIndex,t,this._zoomLevel,this.evaluatedMeshParams.labelClassId);this._current.shaping.isMultiline?t===0&&this._placeStraight(e,m,y,x):s&&_<0?this._placeStraightAlong(e,o,y,x):i==="parallel"?this._placeStraightAlong(e,m,y,x):i==="curved"&&this._placeCurved(e,m,g,y,x)}_placeStraight(e,t,n,r){const{out:s,id:i,shaping:a,referenceBounds:o}=this._current,{x:l,y:c}=e;s.metricStart(this._createLineLabelMetric(i,n,r,l,c)),s.metricBoxWrite(a.boundsT);const p=e.angle*(180/Math.PI)%360,h=(e.angle*(180/Math.PI)+180)%360,u={clipAngle:p,mapAligned:!0,isLineLabel:!0,minZoom:t};this._writeGlyphs(s,i,l,c,a,0,o,u,!1);const f={clipAngle:h,mapAligned:!0,isLineLabel:!0,minZoom:t};this._writeGlyphs(s,i,l,c,a,0,o,f,!1),s.metricEnd()}_placeCurved(e,t,n,r,s){const{out:i,id:a}=this._current;i.metricStart(this._createLineLabelMetric(a,r,s,e.x,e.y));const o=e.clone(),l=e.angle*(180/Math.PI)%360,c=(e.angle*(180/Math.PI)+180)%360;this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||(this._placeFirst(o,t,1,l),this._placeBack(e,o,t,n,1,l),this._placeForward(e,o,t,n,1,l)),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||(this._placeFirst(o,t,0,c),this._placeBack(e,o,t,n,0,c),this._placeForward(e,o,t,n,0,c)),i.metricEnd()}_placeStraightAlong(e,t,n,r){const{out:s,id:i,shaping:a,zoomRange:o,referenceBounds:l}=this._current,{boxBorderLineColor:c,boxBackgroundColor:p}=this.evaluatedMeshParams,h=e.clone(),u=e.angle*(180/Math.PI)%360,f=(e.angle*(180/Math.PI)+180)%360,m=a.glyphs.length>0&&!(!c&&!p);if(s.metricStart(this._createLineLabelMetric(i,n,r,e.x,e.y)),m){const _=Math.max(t,o[0],0),g=Math.min(S,o[1]),y=Z(A(),-e.angle),x={minZoom:_,maxZoom:g,clipAngle:u,mapAligned:!0,isLineLabel:!0},P=M(this.evaluatedMeshParams.offsetX),I=M(this.evaluatedMeshParams.offsetY);if(!this._verticalPlacement||this._verticalPlacement===this._current.offsetDirection){const w=C(P,-1*I),[D,L]=a.shapeBackground(ae(A(),y,w));s.recordStart(this.instanceId,this.attributeLayout,a.glyphs[0].textureBinding),this._writeTextBox(s,i,e.x,e.y,L,l,x),s.recordEnd()}if(!this._verticalPlacement||this._verticalPlacement!==this._current.offsetDirection){const w=C(P,I),[D,L]=a.shapeBackground(ae(A(),y,w));x.clipAngle=f,s.recordStart(this.instanceId,this.attributeLayout,a.glyphs[0].textureBinding),this._writeTextBox(s,i,e.x,e.y,L,l,x),s.recordEnd()}}this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||this._placeFirst(h,t,1,u,!0),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||this._placeFirst(h,t,0,f,!0),s.metricEnd()}_placeBack(e,t,n,r,s,i){const a=e.clone();let o=e.backwardLength+z;for(;a.prev()&&!(o>=r);)this._placeOnSegment(a,t,o,n,-1,s,i),o+=a.length+z}_placeForward(e,t,n,r,s,i){const a=e.clone();let o=e.remainingLength+z;for(;a.next()&&!(o>=r);)this._placeOnSegment(a,t,o,n,1,s,i),o+=a.length+z}_placeFirst(e,t,n,r,s=!1){const{out:i,id:a,shaping:o,zoomRange:l,referenceBounds:c}=this._current,p=o.glyphs,h=M(this.evaluatedMeshParams.offsetX),u=M(this.evaluatedMeshParams.offsetY),f=C(h,u),m=Z(A(),-e.angle);ne(f,f,m);for(const _ of p){const g=_.x>o.bounds.x?n:1-n,y=g*e.remainingLength+(1-g)*e.backwardLength,x=Math.abs(_.x+_.width/2-o.bounds.x),P=Math.max(0,this._zoomLevel+Math.log2(x/(y+z))),I=Math.max(t,s?0:P);if(_.maxZoom=Math.min(l[1],S),_.angle=e.angle+(1-n)*Math.PI,_.minZoom=Math.max(l[0],I),this._writeLineGlyph(i,a,e.x,e.y,_,r,c,!0),(n||this._current.offsetDirection)&&this._isVisible(_.minZoom,_.maxZoom)){const w=new ue(_.bounds.x+f[0],_.bounds.y+f[1],_.bounds.width,_.bounds.height);i.metricBoxWrite(w)}}}_placeOnSegment(e,t,n,r,s,i,a){const{out:o,id:l,shaping:c,referenceBounds:p}=this._current,h=c.glyphs,u=e.dx/e.length,f=e.dy/e.length,m={x:e.x+n*-s*u,y:e.y+n*-s*f},_=M(this.evaluatedMeshParams.offsetX),g=M(this.evaluatedMeshParams.offsetY),y=C(_,g),x=Z(A(),-e.angle);ne(y,y,x);for(const P of h){const I=P.x>c.bounds.x?i:1-i;if(!(I&&s===1||!I&&s===-1))continue;const w=Math.abs(P.x+P.width/2-c.bounds.x),D=Math.max(0,this._zoomLevel+Math.log2(w/n)-.1),L=Math.max(r,this._zoomLevel+Math.log2(w/(n+e.length+z)));if(D!==0&&(P.angle=e.angle+(1-i)*Math.PI,P.minZoom=L,P.maxZoom=D,this._writeLineGlyph(o,l,m.x,m.y,P,a,p,!0),(i||this._current.offsetDirection)&&this._isVisible(P.minZoom,P.maxZoom))){const be=new ue(P.bounds.x+y[0],P.bounds.y+y[1],P.bounds.width,P.bounds.height);o.metricBoxWrite(be)}}}_writeLineGlyph(e,t,n,r,s,i,a,o){if(n<0||n>k||r<0||r>k)return;e.recordStart(this.instanceId,this.attributeLayout,s.textureBinding);const{texcoords:l,offsets:c}=s,{fontSize:p,haloSize:h,outlineSize:u}=this._textMeshTransformProps;this._writeQuad(e,t,n,r,{texcoords:l,offsets:c,fontSize:p,haloSize:h,outlineSize:u,color:Ge(this.evaluatedMeshParams.color),isBackground:!1,referenceBounds:a,minZoom:Math.max(this._current.zoomRange[0],s.minZoom),maxZoom:Math.min(this._current.zoomRange[1],s.maxZoom),clipAngle:i,mapAligned:o,isLineLabel:!0}),e.recordEnd()}_packedZoom(e){return Math.floor(e*ie)/ie}_isVisible(e,t){let n=Math.max(this._current.zoomRange[0],e),r=Math.min(this._current.zoomRange[1],t);n=this._packedZoom(n),r=this._packedZoom(r);const s=this._packedZoom(this._zoomLevel);return n<=s&&s<=r}}function de(d,e,t){const{coords:n,lengths:r}=e,s=$(),i=$(),a=$(),o=$(),l=$(),c=$(),p=2;let h=0;for(let u=0;u<r.length;u++){const f=r[u];for(let m=0;m<f;m++){const _=p*(m+h-1),g=p*(m+h),y=p*(m+h+1);m>0?b(s,n[_],n[_+1]):b(s,0,0),b(i,n[g],n[g+1]),m<f-1?b(a,n[y],n[y+1]):b(a,0,0),m===0?b(o,0,0):(oe(o,i,s),q(o,o),b(o,o[1],-o[0])),m===f-1?b(l,0,0):(oe(l,a,i),q(l,l),b(l,l[1],-l[0])),_t(c,o,l),q(c,c);const x=c[0]*l[0]+c[1]*l[1];x!==0&&ce(c,c,x),ce(c,c,t),d.coords.push(i[0]+c[0],i[1]+c[1])}d.lengths.push(f),h+=f}return d}class Tt extends Pt{constructor(e){super(),this._value=e}resize(e){}read(e,t){return this._value}readWithDefault(e,t,n){return this._value}hasArcadeDependency(e){return!1}}const Bt=()=>ft.getLogger("esri.views.2d.engine.webgl.shaderGraph.techniques.mesh.MeshWriterInputEvaluator");async function B(d,e,t,n){const{defaultValue:r,valueExpressionInfo:s,value:i}=e;if(s){if(s.type==="dictionary-template")return{...e,computed:d.createDictionaryTemplateField(s,t),defaultValue:r};const{expression:a}=s,o=await d.createComputedField({expression:a},n);return o?{...e,computed:o,defaultValue:r}:null}return{...e,computed:new Tt(i),defaultValue:r}}async function fe(d,e,t){const{valueExpressionInfo:n}=e,r=n.type==="dictionary-template"?d.createDictionaryTemplateField(n,t):await d.createComputedField({expression:n.expression});return r?{...e,computed:r}:null}function Me(d){return typeof d=="object"&&d!=null&&(!(!("valueExpressionInfo"in d)||!d.valueExpressionInfo)||"type"in d&&d.type==="Process"&&"op"in d&&d.op==="Random")}function F(d){if(Array.isArray(d)){for(const e of d)if(F(e))return!0}if(typeof d=="object"){if(Me(d))return!0;for(const e in d)if(F(d[e]))return!0}return!1}class se{static async create(e,t,n,r){const s={},i=new Map,a=new Map,o=new Map,l=new Map,c=new Map,p=new Map;for(const h in n){const u=n[h];if(u!=null&&typeof u=="object")if(Array.isArray(u)){if(typeof u[0]=="object")throw new Error(`InternalError: Cannot handle ${h}. Nested array params are not supported`);s[h]=u}else if("valueExpressionInfo"in u){if(u.value){s[h]=u.value;continue}const f=await fe(e,u,r);if(!f){s[h]=u.defaultValue;continue}i.set(h,f),s[h]=null}else switch(u.type){case"cim-effect-infos":if(u.effectInfos.some(f=>f.overrides.length)){a.set(h,{effects:await Promise.all(u.effectInfos.map(async f=>{const m=f.overrides.map(_=>B(e,_,r,!1));return{effect:f.effect,compiledOverrides:(await Promise.all(m)).filter(R)}}))});break}s[h]=u.effectInfos.map(f=>f.effect);break;case"cim-marker-placement-param":u.overrides.length&&o.set(h,{placementInfo:u,compiledOverrides:(await Promise.all(u.overrides.map(f=>B(e,f,r,!1)))).filter(R)}),s[h]=u.placement;break;case"text-rasterization-param":{if(u.overrides.length){const m=u.overrides.map(_=>B(e,_,r,u.useLegacyLabelEvaluationRules??!1));l.set(h,{compiledOverrides:(await Promise.all(m)).filter(R),rasterizationParam:u,objectIdToResourceId:new Map});continue}const f={type:"cim-rasterization-info",resource:u.resource};s[h]=await t.fetchResourceImmediate(f)??null;break}case"sprite-rasterization-param":{if(u.overrides.length){const m=u.overrides.map(_=>B(e,_,r,!1));l.set(h,{compiledOverrides:(await Promise.all(m)).filter(R),rasterizationParam:u,objectIdToResourceId:new Map});continue}if(u.resource.type==="animated"){l.set(h,{compiledOverrides:[],rasterizationParam:u,objectIdToResourceId:new Map});continue}const f={type:"cim-rasterization-info",resource:u.resource};s[h]=await t.fetchResourceImmediate(f)??null;break}case"cim-marker-transform-param":{const{params:f}=u;if(F(f)){const m={compiledMarkerInfos:[]};await Promise.all(f.map(async _=>{const g={props:{}};for(const y in _)if(Me(_[y])){const x=await fe(e,_[y],r);g.compiledExpressionMap||(g.compiledExpressionMap=new Map);const P=g.compiledExpressionMap;x&&P.set(y,x)}else g.props[y]=_[y];m.compiledMarkerInfos.push(g)})),c.set(h,m)}else s[h]={type:"cim-marker-transform-info",infos:f};break}case"animation-params":{const{params:f}=u,m=Ve(f);if(F(m)){const _=await Promise.all(m.map(g=>je(g,e)));p.set(h,{params:_,propertyIdToResourceId:new Map,key:h})}else{const _=Ze(m),g=await t.fetchResourceImmediate({type:"animation-info",resource:_});g!=null&&g.type==="sprite"&&(s[h]={dataRow:g.rect.y,dataColumn:g.rect.x})}break}default:s[h]=u}else s[h]=u}return new se(n,s,i,a,o,l,c,p)}constructor(e,t,n,r,s,i,a,o){this.inputMeshParams=e,this._resolvedMeshParams=t,this._dynamicProperties=n,this._dynamicEffectProperties=r,this._dynamicPlacementProperties=s,this._dynamicAsyncProperties=i,this._dynamicTransformProperties=a,this._dynamicAsyncAnimations=o,this.evaluator=l=>l,this._arcadeDependencies=new Set;for(const l of this._expressions())xt(this._arcadeDependencies,l)}get hasDynamicProperties(){return!!(this._dynamicProperties.size||this._dynamicAsyncProperties.size||this._dynamicEffectProperties.size||this._dynamicTransformProperties.size||this._dynamicPlacementProperties.size||this._dynamicAsyncAnimations.size)}get evaluatedMeshParams(){return this._evaluatedMeshParams||(this._evaluatedMeshParams=this.evaluator(this._resolvedMeshParams)),this._evaluatedMeshParams}enqueueRequest(e,t,n){for(const r of this._dynamicAsyncProperties.values()){const s=dt(r.rasterizationParam.resource);r.rasterizationParam.resource.type==="animated"&&r.rasterizationParam.resource.randomizeStartTime&&(s.primitiveName="__RESERVED__PRIMITIVE__NAME__",s.startGroup=qe(t.getObjectId()||0));for(const{primitiveName:a,propertyName:o,computed:l,defaultValue:c,valueExpressionInfo:p}of r.compiledOverrides)try{const h=r.rasterizationParam.resource.type==="animated"?s.primitiveName:a;yt(s,h,o,l,t,n,c)}catch(h){Bt().errorOnce(new pt("invalid-arcade-expression","Encountered an error when evaluating the arcade expression",{error:h,valueExpressionInfo:p}))}const i=e.enqueueRequest({type:"cim-rasterization-info",resource:s});r.objectIdToResourceId.set(t.getObjectId(),i)}for(const r of this._dynamicAsyncAnimations.values()){const s=r.params.map(o=>Xe(o,t,n)).map(Ye).map(o=>o.simplify()),i=Ne(s),a=e.enqueueRequest({type:"animation-info",resource:i});r.propertyIdToResourceId.set(t.getObjectId()+"."+r.key,a)}}evaluateMeshParams(e,t,n){for(const[r,s]of this._dynamicProperties.entries())this._resolvedMeshParams[r]=s.computed.readWithDefault(t,n,s.defaultValue);for(const[r,s]of this._dynamicPlacementProperties.entries())for(const{computed:i,defaultValue:a,propertyName:o}of s.compiledOverrides){const l=i.readWithDefault(t,n,a);s.placementInfo.placement[o]=l,this._resolvedMeshParams[r]=s.placementInfo.placement}for(const[r,s]of this._dynamicEffectProperties.entries())for(const i of s.effects){for(const{computed:a,defaultValue:o,propertyName:l}of i.compiledOverrides){const c=a.readWithDefault(t,n,o);i.effect[l]=c}this._resolvedMeshParams[r]=s.effects.map(a=>a.effect)}for(const[r,s]of this._dynamicTransformProperties.entries()){const i={type:"cim-marker-transform-info",infos:[]};for(const a of s.compiledMarkerInfos){const o={...a.props};if(a.compiledExpressionMap)for(const[l,c]of a.compiledExpressionMap){const p=c.computed.readWithDefault(t,n,c.defaultValue);o[l]=typeof p=="number"||typeof p=="boolean"?p:c.defaultValue}i.infos.push(o)}this._resolvedMeshParams[r]=i}for(const[r,s]of this._dynamicAsyncProperties.entries()){const i=s.objectIdToResourceId.get(t.getObjectId());if(i==null)continue;const a=e.getResource(i);this._resolvedMeshParams[r]=a}for(const[r,s]of this._dynamicAsyncAnimations.entries()){const i=s.propertyIdToResourceId.get(t.getObjectId()+"."+r);if(i==null)continue;const a=e.getResource(i);this._resolvedMeshParams[r]={dataRow:a.rect.y,dataColumn:a.rect.x}}return this._evaluatedMeshParams=this.evaluator(this._resolvedMeshParams),this.evaluatedMeshParams}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}*_expressions(){for(const e of this._dynamicProperties.values())yield e.computed;for(const e of this._dynamicEffectProperties.values())for(const t of e.effects)for(const n of t.compiledOverrides)yield n.computed;for(const e of this._dynamicPlacementProperties.values())for(const t of e.compiledOverrides)yield t.computed;for(const e of this._dynamicAsyncProperties.values())for(const t of e.compiledOverrides)yield t.computed;for(const e of this._dynamicTransformProperties.values())for(const t of e.compiledMarkerInfos)if(t.compiledExpressionMap!=null)for(const n of t.compiledExpressionMap.values())yield n.computed;for(const e of this._dynamicAsyncAnimations.values())for(const t of e.params)yield*Qe(t)}}class ls{async createMeshWriter(e,t,n,r,s){const i=this._getMeshWriter(r.techniqueType),a=await se.create(e,t,r.inputParams,s),o=new i(r.id,a,r.optionalAttributes,n);return await o.loadDependencies(),o}_getMeshWriter(e){switch(e){case v.Fill:return lt;case v.DotDensity:return ct;case v.ComplexFill:return ot;case v.PatternFill:return nt;case v.GradientFill:return at;case v.OutlineFill:return it;case v.PatternOutlineFill:return rt;case v.ComplexOutlineFill:return st;case v.Marker:return tt;case v.PieChart:return et;case v.Text:return xe;case v.Line:return Ue;case v.TexturedLine:return Ke;case v.GradientStroke:return Je;case v.Heatmap:return He;case v.Label:return Ct;case v.AnimatedMarker:return wt;case v.AnimatedMarkerShift:return It;case v.AnimatedFill:return $t;case v.AnimatedLine:return Lt;default:throw new Error("Internal Error: Mesh writer not in the registry")}}}export{Tt as r,ls as y};
